{
	"id": "0e02543b148236a177365fbfd77b4d1f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/5_PLZToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract PLZToken is ERC20, Ownable(msg.sender) {\n    IERC721 public nftContract;\n    mapping(address => uint256) public lastRequestedAt;\n\n    // 생성자에서 NFT 컨트랙트 주소를 입력 받습니다.\n    constructor(address _nftAddress) ERC20(\"PLZToken\", \"PLZ\") {\n        nftContract = IERC721(_nftAddress);\n        _mint(msg.sender, 1e24);  // 초기 공급량 설정 (예: 1,000,000 PLZ)\n    }\n\n    // renounceOwnership 함수를 오버라이드하여 비활성화\n    function renounceOwnership() view public override onlyOwner {\n        revert(\"Renouncing ownership is disabled.\");\n    }\n\n    // NFT 소유자만이 토큰을 요청할 수 있고, 하루에 한 번만 요청 가능\n    function requestTokens() public {\n        require(nftContract.balanceOf(msg.sender) > 0, \"You must own at least one NFT\");\n        require(block.timestamp >= lastRequestedAt[msg.sender] + 1 days, \"You can only request tokens once every 24 hours\");\n\n        _mint(msg.sender, 2 * 1e18);  // 2 PLZ를 발행\n        lastRequestedAt[msg.sender] = block.timestamp;  // 마지막 요청 시간 업데이트\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/5_PLZToken.sol": {
				"PLZToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastRequestedAt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftContract",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requestTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/5_PLZToken.sol\":226:1336  contract PLZToken is ERC20, Ownable(msg.sender) {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/5_PLZToken.sol\":440:631  constructor(address _nftAddress) ERC20(\"PLZToken\", \"PLZ\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/5_PLZToken.sol\":262:272  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x08\n  dup2\n  mstore\n  0x20\n  add\n  0x504c5a546f6b656e000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x504c5a0000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/5_PLZToken.sol\":530:541  _nftAddress */\n  dup1\n    /* \"contracts/5_PLZToken.sol\":508:519  nftContract */\n  0x06\n  0x00\n    /* \"contracts/5_PLZToken.sol\":508:542  nftContract = IERC721(_nftAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/5_PLZToken.sol\":552:575  _mint(msg.sender, 1e24) */\n  tag_18\n    /* \"contracts/5_PLZToken.sol\":558:568  msg.sender */\n  caller\n    /* \"contracts/5_PLZToken.sol\":570:574  1e24 */\n  0xd3c21bcecceda1000000\n    /* \"contracts/5_PLZToken.sol\":552:557  _mint */\n  shl(0x20, tag_19)\n    /* \"contracts/5_PLZToken.sol\":552:575  _mint(msg.sender, 1e24) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/5_PLZToken.sol\":440:631  constructor(address _nftAddress) ERC20(\"PLZToken\", \"PLZ\") {... */\n  pop\n    /* \"contracts/5_PLZToken.sol\":226:1336  contract PLZToken is ERC20, Ownable(msg.sender) {... */\n  jump(tag_20)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\ntag_19:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_24\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_24:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  tag_25\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n  jump(tag_31)\ntag_28:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n  iszero\n  tag_32\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_33\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\ntag_32:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\ntag_31:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n  jump(tag_36)\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n  mload(0x40)\n  tag_37\n  swap2\n  swap1\n  tag_38\n  jump\t// in\ntag_37:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_40:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_42:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_43:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_75\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_42\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_44:\n    /* \"#utility.yul\":641:665   */\n  tag_77\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_43\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_78\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_78:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_45:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_80\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_44\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_82\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_83\n  tag_40\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":932:1051   */\ntag_82:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_84\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_45\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1202:1301   */\ntag_46:\n    /* \"#utility.yul\":1254:1260   */\n  0x00\n    /* \"#utility.yul\":1288:1293   */\n  dup2\n    /* \"#utility.yul\":1282:1294   */\n  mload\n    /* \"#utility.yul\":1272:1294   */\n  swap1\n  pop\n    /* \"#utility.yul\":1202:1301   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1307:1487   */\ntag_47:\n    /* \"#utility.yul\":1355:1432   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1352:1353   */\n  0x00\n    /* \"#utility.yul\":1345:1433   */\n  mstore\n    /* \"#utility.yul\":1452:1456   */\n  0x41\n    /* \"#utility.yul\":1449:1450   */\n  0x04\n    /* \"#utility.yul\":1442:1457   */\n  mstore\n    /* \"#utility.yul\":1476:1480   */\n  0x24\n    /* \"#utility.yul\":1473:1474   */\n  0x00\n    /* \"#utility.yul\":1466:1481   */\n  revert\n    /* \"#utility.yul\":1493:1673   */\ntag_48:\n    /* \"#utility.yul\":1541:1618   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1538:1539   */\n  0x00\n    /* \"#utility.yul\":1531:1619   */\n  mstore\n    /* \"#utility.yul\":1638:1642   */\n  0x22\n    /* \"#utility.yul\":1635:1636   */\n  0x04\n    /* \"#utility.yul\":1628:1643   */\n  mstore\n    /* \"#utility.yul\":1662:1666   */\n  0x24\n    /* \"#utility.yul\":1659:1660   */\n  0x00\n    /* \"#utility.yul\":1652:1667   */\n  revert\n    /* \"#utility.yul\":1679:1999   */\ntag_49:\n    /* \"#utility.yul\":1723:1729   */\n  0x00\n    /* \"#utility.yul\":1760:1761   */\n  0x02\n    /* \"#utility.yul\":1754:1758   */\n  dup3\n    /* \"#utility.yul\":1750:1762   */\n  div\n    /* \"#utility.yul\":1740:1762   */\n  swap1\n  pop\n    /* \"#utility.yul\":1807:1808   */\n  0x01\n    /* \"#utility.yul\":1801:1805   */\n  dup3\n    /* \"#utility.yul\":1797:1809   */\n  and\n    /* \"#utility.yul\":1828:1846   */\n  dup1\n    /* \"#utility.yul\":1818:1899   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":1884:1888   */\n  0x7f\n    /* \"#utility.yul\":1876:1882   */\n  dup3\n    /* \"#utility.yul\":1872:1889   */\n  and\n    /* \"#utility.yul\":1862:1889   */\n  swap2\n  pop\n    /* \"#utility.yul\":1818:1899   */\ntag_89:\n    /* \"#utility.yul\":1946:1948   */\n  0x20\n    /* \"#utility.yul\":1938:1944   */\n  dup3\n    /* \"#utility.yul\":1935:1949   */\n  lt\n    /* \"#utility.yul\":1915:1933   */\n  dup2\n    /* \"#utility.yul\":1912:1950   */\n  sub\n    /* \"#utility.yul\":1909:1993   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1965:1983   */\n  tag_91\n  tag_48\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":1909:1993   */\ntag_90:\n    /* \"#utility.yul\":1730:1999   */\n  pop\n    /* \"#utility.yul\":1679:1999   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2005:2146   */\ntag_50:\n    /* \"#utility.yul\":2054:2058   */\n  0x00\n    /* \"#utility.yul\":2077:2080   */\n  dup2\n    /* \"#utility.yul\":2069:2080   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2103   */\n  dup2\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2090:2104   */\n  mstore\n    /* \"#utility.yul\":2134:2138   */\n  0x20\n    /* \"#utility.yul\":2131:2132   */\n  0x00\n    /* \"#utility.yul\":2121:2139   */\n  keccak256\n    /* \"#utility.yul\":2113:2139   */\n  swap1\n  pop\n    /* \"#utility.yul\":2005:2146   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2152:2245   */\ntag_51:\n    /* \"#utility.yul\":2189:2195   */\n  0x00\n    /* \"#utility.yul\":2236:2238   */\n  0x20\n    /* \"#utility.yul\":2231:2233   */\n  0x1f\n    /* \"#utility.yul\":2224:2229   */\n  dup4\n    /* \"#utility.yul\":2220:2234   */\n  add\n    /* \"#utility.yul\":2216:2239   */\n  div\n    /* \"#utility.yul\":2206:2239   */\n  swap1\n  pop\n    /* \"#utility.yul\":2152:2245   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2251:2358   */\ntag_52:\n    /* \"#utility.yul\":2295:2303   */\n  0x00\n    /* \"#utility.yul\":2345:2350   */\n  dup3\n    /* \"#utility.yul\":2339:2343   */\n  dup3\n    /* \"#utility.yul\":2335:2351   */\n  shl\n    /* \"#utility.yul\":2314:2351   */\n  swap1\n  pop\n    /* \"#utility.yul\":2251:2358   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2364:2757   */\ntag_53:\n    /* \"#utility.yul\":2433:2439   */\n  0x00\n    /* \"#utility.yul\":2483:2484   */\n  0x08\n    /* \"#utility.yul\":2471:2481   */\n  dup4\n    /* \"#utility.yul\":2467:2485   */\n  mul\n    /* \"#utility.yul\":2506:2603   */\n  tag_96\n    /* \"#utility.yul\":2536:2602   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2525:2534   */\n  dup3\n    /* \"#utility.yul\":2506:2603   */\n  tag_52\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":2624:2663   */\n  tag_97\n    /* \"#utility.yul\":2654:2662   */\n  dup7\n    /* \"#utility.yul\":2643:2652   */\n  dup4\n    /* \"#utility.yul\":2624:2663   */\n  tag_52\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2612:2663   */\n  swap6\n  pop\n    /* \"#utility.yul\":2696:2700   */\n  dup1\n    /* \"#utility.yul\":2692:2701   */\n  not\n    /* \"#utility.yul\":2685:2690   */\n  dup5\n    /* \"#utility.yul\":2681:2702   */\n  and\n    /* \"#utility.yul\":2672:2702   */\n  swap4\n  pop\n    /* \"#utility.yul\":2745:2749   */\n  dup1\n    /* \"#utility.yul\":2735:2743   */\n  dup7\n    /* \"#utility.yul\":2731:2750   */\n  and\n    /* \"#utility.yul\":2724:2729   */\n  dup5\n    /* \"#utility.yul\":2721:2751   */\n  or\n    /* \"#utility.yul\":2711:2751   */\n  swap3\n  pop\n    /* \"#utility.yul\":2440:2757   */\n  pop\n  pop\n    /* \"#utility.yul\":2364:2757   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2763:2840   */\ntag_54:\n    /* \"#utility.yul\":2800:2807   */\n  0x00\n    /* \"#utility.yul\":2829:2834   */\n  dup2\n    /* \"#utility.yul\":2818:2834   */\n  swap1\n  pop\n    /* \"#utility.yul\":2763:2840   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2846:2906   */\ntag_55:\n    /* \"#utility.yul\":2874:2877   */\n  0x00\n    /* \"#utility.yul\":2895:2900   */\n  dup2\n    /* \"#utility.yul\":2888:2900   */\n  swap1\n  pop\n    /* \"#utility.yul\":2846:2906   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2912:3054   */\ntag_56:\n    /* \"#utility.yul\":2962:2971   */\n  0x00\n    /* \"#utility.yul\":2995:3048   */\n  tag_101\n    /* \"#utility.yul\":3013:3047   */\n  tag_102\n    /* \"#utility.yul\":3022:3046   */\n  tag_103\n    /* \"#utility.yul\":3040:3045   */\n  dup5\n    /* \"#utility.yul\":3022:3046   */\n  tag_54\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":3013:3047   */\n  tag_55\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2995:3048   */\n  tag_54\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":2982:3048   */\n  swap1\n  pop\n    /* \"#utility.yul\":2912:3054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3060:3135   */\ntag_57:\n    /* \"#utility.yul\":3103:3106   */\n  0x00\n    /* \"#utility.yul\":3124:3129   */\n  dup2\n    /* \"#utility.yul\":3117:3129   */\n  swap1\n  pop\n    /* \"#utility.yul\":3060:3135   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3141:3410   */\ntag_58:\n    /* \"#utility.yul\":3251:3290   */\n  tag_106\n    /* \"#utility.yul\":3282:3289   */\n  dup4\n    /* \"#utility.yul\":3251:3290   */\n  tag_56\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":3312:3403   */\n  tag_107\n    /* \"#utility.yul\":3361:3402   */\n  tag_108\n    /* \"#utility.yul\":3385:3401   */\n  dup3\n    /* \"#utility.yul\":3361:3402   */\n  tag_57\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3353:3359   */\n  dup5\n    /* \"#utility.yul\":3346:3350   */\n  dup5\n    /* \"#utility.yul\":3340:3351   */\n  sload\n    /* \"#utility.yul\":3312:3403   */\n  tag_53\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":3306:3310   */\n  dup3\n    /* \"#utility.yul\":3299:3404   */\n  sstore\n    /* \"#utility.yul\":3217:3410   */\n  pop\n    /* \"#utility.yul\":3141:3410   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3416:3489   */\ntag_59:\n    /* \"#utility.yul\":3461:3464   */\n  0x00\n    /* \"#utility.yul\":3416:3489   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3495:3684   */\ntag_60:\n    /* \"#utility.yul\":3572:3604   */\n  tag_111\n  tag_59\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":3613:3678   */\n  tag_112\n    /* \"#utility.yul\":3671:3677   */\n  dup2\n    /* \"#utility.yul\":3663:3669   */\n  dup5\n    /* \"#utility.yul\":3657:3661   */\n  dup5\n    /* \"#utility.yul\":3613:3678   */\n  tag_58\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":3548:3684   */\n  pop\n    /* \"#utility.yul\":3495:3684   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3690:3876   */\ntag_61:\n    /* \"#utility.yul\":3750:3870   */\ntag_114:\n    /* \"#utility.yul\":3767:3770   */\n  dup2\n    /* \"#utility.yul\":3760:3765   */\n  dup2\n    /* \"#utility.yul\":3757:3771   */\n  lt\n    /* \"#utility.yul\":3750:3870   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":3821:3860   */\n  tag_117\n    /* \"#utility.yul\":3858:3859   */\n  0x00\n    /* \"#utility.yul\":3851:3856   */\n  dup3\n    /* \"#utility.yul\":3821:3860   */\n  tag_60\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":3794:3795   */\n  0x01\n    /* \"#utility.yul\":3787:3792   */\n  dup2\n    /* \"#utility.yul\":3783:3796   */\n  add\n    /* \"#utility.yul\":3774:3796   */\n  swap1\n  pop\n    /* \"#utility.yul\":3750:3870   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":3690:3876   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3882:4425   */\ntag_62:\n    /* \"#utility.yul\":3983:3985   */\n  0x1f\n    /* \"#utility.yul\":3978:3981   */\n  dup3\n    /* \"#utility.yul\":3975:3986   */\n  gt\n    /* \"#utility.yul\":3972:4418   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":4017:4055   */\n  tag_120\n    /* \"#utility.yul\":4049:4054   */\n  dup2\n    /* \"#utility.yul\":4017:4055   */\n  tag_50\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":4101:4130   */\n  tag_121\n    /* \"#utility.yul\":4119:4129   */\n  dup5\n    /* \"#utility.yul\":4101:4130   */\n  tag_51\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":4091:4099   */\n  dup2\n    /* \"#utility.yul\":4087:4131   */\n  add\n    /* \"#utility.yul\":4284:4286   */\n  0x20\n    /* \"#utility.yul\":4272:4282   */\n  dup6\n    /* \"#utility.yul\":4269:4287   */\n  lt\n    /* \"#utility.yul\":4266:4315   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":4305:4313   */\n  dup2\n    /* \"#utility.yul\":4290:4313   */\n  swap1\n  pop\n    /* \"#utility.yul\":4266:4315   */\ntag_122:\n    /* \"#utility.yul\":4328:4408   */\n  tag_123\n    /* \"#utility.yul\":4384:4406   */\n  tag_124\n    /* \"#utility.yul\":4402:4405   */\n  dup6\n    /* \"#utility.yul\":4384:4406   */\n  tag_51\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4374:4382   */\n  dup4\n    /* \"#utility.yul\":4370:4407   */\n  add\n    /* \"#utility.yul\":4357:4368   */\n  dup3\n    /* \"#utility.yul\":4328:4408   */\n  tag_61\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3987:4418   */\n  pop\n  pop\n    /* \"#utility.yul\":3972:4418   */\ntag_119:\n    /* \"#utility.yul\":3882:4425   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4431:4548   */\ntag_63:\n    /* \"#utility.yul\":4485:4493   */\n  0x00\n    /* \"#utility.yul\":4535:4540   */\n  dup3\n    /* \"#utility.yul\":4529:4533   */\n  dup3\n    /* \"#utility.yul\":4525:4541   */\n  shr\n    /* \"#utility.yul\":4504:4541   */\n  swap1\n  pop\n    /* \"#utility.yul\":4431:4548   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4554:4723   */\ntag_64:\n    /* \"#utility.yul\":4598:4604   */\n  0x00\n    /* \"#utility.yul\":4631:4682   */\n  tag_127\n    /* \"#utility.yul\":4679:4680   */\n  0x00\n    /* \"#utility.yul\":4675:4681   */\n  not\n    /* \"#utility.yul\":4667:4672   */\n  dup5\n    /* \"#utility.yul\":4664:4665   */\n  0x08\n    /* \"#utility.yul\":4660:4673   */\n  mul\n    /* \"#utility.yul\":4631:4682   */\n  tag_63\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":4627:4683   */\n  not\n    /* \"#utility.yul\":4712:4716   */\n  dup1\n    /* \"#utility.yul\":4706:4710   */\n  dup4\n    /* \"#utility.yul\":4702:4717   */\n  and\n    /* \"#utility.yul\":4692:4717   */\n  swap2\n  pop\n    /* \"#utility.yul\":4605:4723   */\n  pop\n    /* \"#utility.yul\":4554:4723   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4728:5023   */\ntag_65:\n    /* \"#utility.yul\":4804:4808   */\n  0x00\n    /* \"#utility.yul\":4950:4979   */\n  tag_129\n    /* \"#utility.yul\":4975:4978   */\n  dup4\n    /* \"#utility.yul\":4969:4973   */\n  dup4\n    /* \"#utility.yul\":4950:4979   */\n  tag_64\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4942:4979   */\n  swap2\n  pop\n    /* \"#utility.yul\":5012:5015   */\n  dup3\n    /* \"#utility.yul\":5009:5010   */\n  0x02\n    /* \"#utility.yul\":5005:5016   */\n  mul\n    /* \"#utility.yul\":4999:5003   */\n  dup3\n    /* \"#utility.yul\":4996:5017   */\n  or\n    /* \"#utility.yul\":4988:5017   */\n  swap1\n  pop\n    /* \"#utility.yul\":4728:5023   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5028:6423   */\ntag_9:\n    /* \"#utility.yul\":5145:5182   */\n  tag_131\n    /* \"#utility.yul\":5178:5181   */\n  dup3\n    /* \"#utility.yul\":5145:5182   */\n  tag_46\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":5247:5265   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5239:5245   */\n  dup2\n    /* \"#utility.yul\":5236:5266   */\n  gt\n    /* \"#utility.yul\":5233:5289   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":5269:5287   */\n  tag_133\n  tag_47\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5233:5289   */\ntag_132:\n    /* \"#utility.yul\":5313:5351   */\n  tag_134\n    /* \"#utility.yul\":5345:5349   */\n  dup3\n    /* \"#utility.yul\":5339:5350   */\n  sload\n    /* \"#utility.yul\":5313:5351   */\n  tag_49\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":5398:5465   */\n  tag_135\n    /* \"#utility.yul\":5458:5464   */\n  dup3\n    /* \"#utility.yul\":5450:5456   */\n  dup3\n    /* \"#utility.yul\":5444:5448   */\n  dup6\n    /* \"#utility.yul\":5398:5465   */\n  tag_62\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":5492:5493   */\n  0x00\n    /* \"#utility.yul\":5516:5520   */\n  0x20\n    /* \"#utility.yul\":5503:5520   */\n  swap1\n  pop\n    /* \"#utility.yul\":5548:5550   */\n  0x1f\n    /* \"#utility.yul\":5540:5546   */\n  dup4\n    /* \"#utility.yul\":5537:5551   */\n  gt\n    /* \"#utility.yul\":5565:5566   */\n  0x01\n    /* \"#utility.yul\":5560:6178   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":6222:6223   */\n  0x00\n    /* \"#utility.yul\":6239:6245   */\n  dup5\n    /* \"#utility.yul\":6236:6313   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":6288:6297   */\n  dup3\n    /* \"#utility.yul\":6283:6286   */\n  dup8\n    /* \"#utility.yul\":6279:6298   */\n  add\n    /* \"#utility.yul\":6273:6299   */\n  mload\n    /* \"#utility.yul\":6264:6299   */\n  swap1\n  pop\n    /* \"#utility.yul\":6236:6313   */\ntag_138:\n    /* \"#utility.yul\":6339:6406   */\n  tag_139\n    /* \"#utility.yul\":6399:6405   */\n  dup6\n    /* \"#utility.yul\":6392:6397   */\n  dup3\n    /* \"#utility.yul\":6339:6406   */\n  tag_65\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":6333:6337   */\n  dup7\n    /* \"#utility.yul\":6326:6407   */\n  sstore\n    /* \"#utility.yul\":6195:6417   */\n  pop\n    /* \"#utility.yul\":5530:6417   */\n  jump(tag_136)\n    /* \"#utility.yul\":5560:6178   */\ntag_137:\n    /* \"#utility.yul\":5612:5616   */\n  0x1f\n    /* \"#utility.yul\":5608:5617   */\n  not\n    /* \"#utility.yul\":5600:5606   */\n  dup5\n    /* \"#utility.yul\":5596:5618   */\n  and\n    /* \"#utility.yul\":5646:5683   */\n  tag_140\n    /* \"#utility.yul\":5678:5682   */\n  dup7\n    /* \"#utility.yul\":5646:5683   */\n  tag_50\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":5705:5706   */\n  0x00\n    /* \"#utility.yul\":5719:5927   */\ntag_141:\n    /* \"#utility.yul\":5733:5740   */\n  dup3\n    /* \"#utility.yul\":5730:5731   */\n  dup2\n    /* \"#utility.yul\":5727:5741   */\n  lt\n    /* \"#utility.yul\":5719:5927   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":5812:5821   */\n  dup5\n    /* \"#utility.yul\":5807:5810   */\n  dup10\n    /* \"#utility.yul\":5803:5822   */\n  add\n    /* \"#utility.yul\":5797:5823   */\n  mload\n    /* \"#utility.yul\":5789:5795   */\n  dup3\n    /* \"#utility.yul\":5782:5824   */\n  sstore\n    /* \"#utility.yul\":5863:5864   */\n  0x01\n    /* \"#utility.yul\":5855:5861   */\n  dup3\n    /* \"#utility.yul\":5851:5865   */\n  add\n    /* \"#utility.yul\":5841:5865   */\n  swap2\n  pop\n    /* \"#utility.yul\":5910:5912   */\n  0x20\n    /* \"#utility.yul\":5899:5908   */\n  dup6\n    /* \"#utility.yul\":5895:5913   */\n  add\n    /* \"#utility.yul\":5882:5913   */\n  swap5\n  pop\n    /* \"#utility.yul\":5756:5760   */\n  0x20\n    /* \"#utility.yul\":5753:5754   */\n  dup2\n    /* \"#utility.yul\":5749:5761   */\n  add\n    /* \"#utility.yul\":5744:5761   */\n  swap1\n  pop\n    /* \"#utility.yul\":5719:5927   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":5955:5961   */\n  dup7\n    /* \"#utility.yul\":5946:5953   */\n  dup4\n    /* \"#utility.yul\":5943:5962   */\n  lt\n    /* \"#utility.yul\":5940:6119   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":6013:6022   */\n  dup5\n    /* \"#utility.yul\":6008:6011   */\n  dup10\n    /* \"#utility.yul\":6004:6023   */\n  add\n    /* \"#utility.yul\":5998:6024   */\n  mload\n    /* \"#utility.yul\":6056:6104   */\n  tag_145\n    /* \"#utility.yul\":6098:6102   */\n  0x1f\n    /* \"#utility.yul\":6090:6096   */\n  dup10\n    /* \"#utility.yul\":6086:6103   */\n  and\n    /* \"#utility.yul\":6075:6084   */\n  dup3\n    /* \"#utility.yul\":6056:6104   */\n  tag_64\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":6048:6054   */\n  dup4\n    /* \"#utility.yul\":6041:6105   */\n  sstore\n    /* \"#utility.yul\":5963:6119   */\n  pop\n    /* \"#utility.yul\":5940:6119   */\ntag_144:\n    /* \"#utility.yul\":6165:6166   */\n  0x01\n    /* \"#utility.yul\":6161:6162   */\n  0x02\n    /* \"#utility.yul\":6153:6159   */\n  dup9\n    /* \"#utility.yul\":6149:6163   */\n  mul\n    /* \"#utility.yul\":6145:6167   */\n  add\n    /* \"#utility.yul\":6139:6143   */\n  dup9\n    /* \"#utility.yul\":6132:6168   */\n  sstore\n    /* \"#utility.yul\":5567:6178   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5530:6417   */\ntag_136:\n  pop\n    /* \"#utility.yul\":5120:6423   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5028:6423   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_66:\n    /* \"#utility.yul\":6516:6540   */\n  tag_147\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_43\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_149\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_66\n  jump\t// in\ntag_149:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_67:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_30:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_152\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_54\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_153\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_54\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_154\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_155\n  tag_67\n  jump\t// in\ntag_155:\n    /* \"#utility.yul\":7115:7151   */\ntag_154:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_68:\n    /* \"#utility.yul\":7251:7275   */\n  tag_157\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_54\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_34:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_159\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_66\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":7569:7641   */\n  tag_160\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_68\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7651:7723   */\n  tag_161\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_68\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_38:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_163\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_68\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/5_PLZToken.sol\":226:1336  contract PLZToken is ERC20, Ownable(msg.sender) {... */\ntag_20:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/5_PLZToken.sol\":226:1336  contract PLZToken is ERC20, Ownable(msg.sender) {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xd56d229d\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa0662d89\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x359cf2b7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/5_PLZToken.sol\":927:1334  function requestTokens() public {... */\n    tag_8:\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_9:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/5_PLZToken.sol\":707:827  function renounceOwnership() view public override onlyOwner {... */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_53\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/5_PLZToken.sol\":312:362  mapping(address => uint256) public lastRequestedAt */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_14:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/5_PLZToken.sol\":280:306  IERC721 public nftContract */\n    tag_15:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_88\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_90\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_91\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_95\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/5_PLZToken.sol\":927:1334  function requestTokens() public {... */\n    tag_45:\n        /* \"contracts/5_PLZToken.sol\":1013:1014  0 */\n      0x00\n        /* \"contracts/5_PLZToken.sol\":977:988  nftContract */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/5_PLZToken.sol\":977:998  nftContract.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/5_PLZToken.sol\":999:1009  msg.sender */\n      caller\n        /* \"contracts/5_PLZToken.sol\":977:1010  nftContract.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_103:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"contracts/5_PLZToken.sol\":977:1014  nftContract.balanceOf(msg.sender) > 0 */\n      gt\n        /* \"contracts/5_PLZToken.sol\":969:1048  require(nftContract.balanceOf(msg.sender) > 0, \"You must own at least one NFT\") */\n      tag_106\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_107\n      swap1\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_106:\n        /* \"contracts/5_PLZToken.sol\":1115:1121  1 days */\n      0x015180\n        /* \"contracts/5_PLZToken.sol\":1085:1100  lastRequestedAt */\n      0x07\n        /* \"contracts/5_PLZToken.sol\":1085:1112  lastRequestedAt[msg.sender] */\n      0x00\n        /* \"contracts/5_PLZToken.sol\":1101:1111  msg.sender */\n      caller\n        /* \"contracts/5_PLZToken.sol\":1085:1112  lastRequestedAt[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/5_PLZToken.sol\":1085:1121  lastRequestedAt[msg.sender] + 1 days */\n      tag_109\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/5_PLZToken.sol\":1066:1081  block.timestamp */\n      timestamp\n        /* \"contracts/5_PLZToken.sol\":1066:1121  block.timestamp >= lastRequestedAt[msg.sender] + 1 days */\n      lt\n      iszero\n        /* \"contracts/5_PLZToken.sol\":1058:1173  require(block.timestamp >= lastRequestedAt[msg.sender] + 1 days, \"You can only request tokens once every 24 hours\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_112\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_111:\n        /* \"contracts/5_PLZToken.sol\":1184:1211  _mint(msg.sender, 2 * 1e18) */\n      tag_114\n        /* \"contracts/5_PLZToken.sol\":1190:1200  msg.sender */\n      caller\n        /* \"contracts/5_PLZToken.sol\":1202:1210  2 * 1e18 */\n      0x1bc16d674ec80000\n        /* \"contracts/5_PLZToken.sol\":1184:1189  _mint */\n      tag_115\n        /* \"contracts/5_PLZToken.sol\":1184:1211  _mint(msg.sender, 2 * 1e18) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/5_PLZToken.sol\":1271:1286  block.timestamp */\n      timestamp\n        /* \"contracts/5_PLZToken.sol\":1241:1256  lastRequestedAt */\n      0x07\n        /* \"contracts/5_PLZToken.sol\":1241:1268  lastRequestedAt[msg.sender] */\n      0x00\n        /* \"contracts/5_PLZToken.sol\":1257:1267  msg.sender */\n      caller\n        /* \"contracts/5_PLZToken.sol\":1241:1268  lastRequestedAt[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/5_PLZToken.sol\":1241:1286  lastRequestedAt[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/5_PLZToken.sol\":927:1334  function requestTokens() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/5_PLZToken.sol\":707:827  function renounceOwnership() view public override onlyOwner {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/5_PLZToken.sol\":777:820  revert(\"Renouncing ownership is disabled.\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_125\n      swap1\n      tag_82\n      jump\t// in\n    tag_125:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_126\n      swap1\n      tag_82\n      jump\t// in\n    tag_126:\n      dup1\n      iszero\n      tag_127\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_128\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_127)\n    tag_128:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_129:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_129\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/5_PLZToken.sol\":312:362  mapping(address => uint256) public lastRequestedAt */\n    tag_62:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_66:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_131\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_132\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_98\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/5_PLZToken.sol\":280:306  IERC721 public nftContract */\n    tag_69:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_140\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_89:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_143\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_146\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_75\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_146:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_147\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_148\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_149\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_148:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_144\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_147:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_98:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_153\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_157\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_115:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_160\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_160:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_162\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_158\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_162:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_165\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_54\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_165:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_167\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_167:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_168\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_140:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_175\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_176\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_158:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_179\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_179:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_180)\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_184)\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_186:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_187:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:535   */\n    tag_188:\n        /* \"#utility.yul\":369:370   */\n      0x00\n        /* \"#utility.yul\":379:492   */\n    tag_225:\n        /* \"#utility.yul\":393:399   */\n      dup4\n        /* \"#utility.yul\":390:391   */\n      dup2\n        /* \"#utility.yul\":387:400   */\n      lt\n        /* \"#utility.yul\":379:492   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":478:479   */\n      dup1\n        /* \"#utility.yul\":473:476   */\n      dup3\n        /* \"#utility.yul\":469:480   */\n      add\n        /* \"#utility.yul\":463:481   */\n      mload\n        /* \"#utility.yul\":459:460   */\n      dup2\n        /* \"#utility.yul\":454:457   */\n      dup5\n        /* \"#utility.yul\":450:461   */\n      add\n        /* \"#utility.yul\":443:482   */\n      mstore\n        /* \"#utility.yul\":415:417   */\n      0x20\n        /* \"#utility.yul\":412:413   */\n      dup2\n        /* \"#utility.yul\":408:418   */\n      add\n        /* \"#utility.yul\":403:418   */\n      swap1\n      pop\n        /* \"#utility.yul\":379:492   */\n      jump(tag_225)\n    tag_227:\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":517:523   */\n      dup5\n        /* \"#utility.yul\":512:515   */\n      dup5\n        /* \"#utility.yul\":508:524   */\n      add\n        /* \"#utility.yul\":501:528   */\n      mstore\n        /* \"#utility.yul\":349:535   */\n      pop\n        /* \"#utility.yul\":287:535   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":541:643   */\n    tag_189:\n        /* \"#utility.yul\":582:588   */\n      0x00\n        /* \"#utility.yul\":633:635   */\n      0x1f\n        /* \"#utility.yul\":629:636   */\n      not\n        /* \"#utility.yul\":624:626   */\n      0x1f\n        /* \"#utility.yul\":617:622   */\n      dup4\n        /* \"#utility.yul\":613:627   */\n      add\n        /* \"#utility.yul\":609:637   */\n      and\n        /* \"#utility.yul\":599:637   */\n      swap1\n      pop\n        /* \"#utility.yul\":541:643   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":649:1026   */\n    tag_190:\n        /* \"#utility.yul\":737:740   */\n      0x00\n        /* \"#utility.yul\":765:804   */\n      tag_230\n        /* \"#utility.yul\":798:803   */\n      dup3\n        /* \"#utility.yul\":765:804   */\n      tag_186\n      jump\t// in\n    tag_230:\n        /* \"#utility.yul\":820:891   */\n      tag_231\n        /* \"#utility.yul\":884:890   */\n      dup2\n        /* \"#utility.yul\":879:882   */\n      dup6\n        /* \"#utility.yul\":820:891   */\n      tag_187\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":813:891   */\n      swap4\n      pop\n        /* \"#utility.yul\":900:965   */\n      tag_232\n        /* \"#utility.yul\":958:964   */\n      dup2\n        /* \"#utility.yul\":953:956   */\n      dup6\n        /* \"#utility.yul\":946:950   */\n      0x20\n        /* \"#utility.yul\":939:944   */\n      dup7\n        /* \"#utility.yul\":935:951   */\n      add\n        /* \"#utility.yul\":900:965   */\n      tag_188\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":990:1019   */\n      tag_233\n        /* \"#utility.yul\":1012:1018   */\n      dup2\n        /* \"#utility.yul\":990:1019   */\n      tag_189\n      jump\t// in\n    tag_233:\n        /* \"#utility.yul\":985:988   */\n      dup5\n        /* \"#utility.yul\":981:1020   */\n      add\n        /* \"#utility.yul\":974:1020   */\n      swap2\n      pop\n        /* \"#utility.yul\":741:1026   */\n      pop\n        /* \"#utility.yul\":649:1026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1032:1345   */\n    tag_24:\n        /* \"#utility.yul\":1145:1149   */\n      0x00\n        /* \"#utility.yul\":1183:1185   */\n      0x20\n        /* \"#utility.yul\":1172:1181   */\n      dup3\n        /* \"#utility.yul\":1168:1186   */\n      add\n        /* \"#utility.yul\":1160:1186   */\n      swap1\n      pop\n        /* \"#utility.yul\":1232:1241   */\n      dup2\n        /* \"#utility.yul\":1226:1230   */\n      dup2\n        /* \"#utility.yul\":1222:1242   */\n      sub\n        /* \"#utility.yul\":1218:1219   */\n      0x00\n        /* \"#utility.yul\":1207:1216   */\n      dup4\n        /* \"#utility.yul\":1203:1220   */\n      add\n        /* \"#utility.yul\":1196:1243   */\n      mstore\n        /* \"#utility.yul\":1260:1338   */\n      tag_235\n        /* \"#utility.yul\":1333:1337   */\n      dup2\n        /* \"#utility.yul\":1324:1330   */\n      dup5\n        /* \"#utility.yul\":1260:1338   */\n      tag_190\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":1252:1338   */\n      swap1\n      pop\n        /* \"#utility.yul\":1032:1345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1432:1549   */\n    tag_192:\n        /* \"#utility.yul\":1541:1542   */\n      0x00\n        /* \"#utility.yul\":1538:1539   */\n      dup1\n        /* \"#utility.yul\":1531:1543   */\n      revert\n        /* \"#utility.yul\":1678:1804   */\n    tag_194:\n        /* \"#utility.yul\":1715:1722   */\n      0x00\n        /* \"#utility.yul\":1755:1797   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1748:1753   */\n      dup3\n        /* \"#utility.yul\":1744:1798   */\n      and\n        /* \"#utility.yul\":1733:1798   */\n      swap1\n      pop\n        /* \"#utility.yul\":1678:1804   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1810:1906   */\n    tag_195:\n        /* \"#utility.yul\":1847:1854   */\n      0x00\n        /* \"#utility.yul\":1876:1900   */\n      tag_241\n        /* \"#utility.yul\":1894:1899   */\n      dup3\n        /* \"#utility.yul\":1876:1900   */\n      tag_194\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":1865:1900   */\n      swap1\n      pop\n        /* \"#utility.yul\":1810:1906   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1912:2034   */\n    tag_196:\n        /* \"#utility.yul\":1985:2009   */\n      tag_243\n        /* \"#utility.yul\":2003:2008   */\n      dup2\n        /* \"#utility.yul\":1985:2009   */\n      tag_195\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1978:1983   */\n      dup2\n        /* \"#utility.yul\":1975:2010   */\n      eq\n        /* \"#utility.yul\":1965:2028   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":2024:2025   */\n      0x00\n        /* \"#utility.yul\":2021:2022   */\n      dup1\n        /* \"#utility.yul\":2014:2026   */\n      revert\n        /* \"#utility.yul\":1965:2028   */\n    tag_244:\n        /* \"#utility.yul\":1912:2034   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2040:2179   */\n    tag_197:\n        /* \"#utility.yul\":2086:2091   */\n      0x00\n        /* \"#utility.yul\":2124:2130   */\n      dup2\n        /* \"#utility.yul\":2111:2131   */\n      calldataload\n        /* \"#utility.yul\":2102:2131   */\n      swap1\n      pop\n        /* \"#utility.yul\":2140:2173   */\n      tag_246\n        /* \"#utility.yul\":2167:2172   */\n      dup2\n        /* \"#utility.yul\":2140:2173   */\n      tag_196\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":2040:2179   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2185:2262   */\n    tag_198:\n        /* \"#utility.yul\":2222:2229   */\n      0x00\n        /* \"#utility.yul\":2251:2256   */\n      dup2\n        /* \"#utility.yul\":2240:2256   */\n      swap1\n      pop\n        /* \"#utility.yul\":2185:2262   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2268:2390   */\n    tag_199:\n        /* \"#utility.yul\":2341:2365   */\n      tag_249\n        /* \"#utility.yul\":2359:2364   */\n      dup2\n        /* \"#utility.yul\":2341:2365   */\n      tag_198\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":2334:2339   */\n      dup2\n        /* \"#utility.yul\":2331:2366   */\n      eq\n        /* \"#utility.yul\":2321:2384   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2380:2381   */\n      0x00\n        /* \"#utility.yul\":2377:2378   */\n      dup1\n        /* \"#utility.yul\":2370:2382   */\n      revert\n        /* \"#utility.yul\":2321:2384   */\n    tag_250:\n        /* \"#utility.yul\":2268:2390   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2396:2535   */\n    tag_200:\n        /* \"#utility.yul\":2442:2447   */\n      0x00\n        /* \"#utility.yul\":2480:2486   */\n      dup2\n        /* \"#utility.yul\":2467:2487   */\n      calldataload\n        /* \"#utility.yul\":2458:2487   */\n      swap1\n      pop\n        /* \"#utility.yul\":2496:2529   */\n      tag_252\n        /* \"#utility.yul\":2523:2528   */\n      dup2\n        /* \"#utility.yul\":2496:2529   */\n      tag_199\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2396:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:3015   */\n    tag_27:\n        /* \"#utility.yul\":2609:2615   */\n      0x00\n        /* \"#utility.yul\":2617:2623   */\n      dup1\n        /* \"#utility.yul\":2666:2668   */\n      0x40\n        /* \"#utility.yul\":2654:2663   */\n      dup4\n        /* \"#utility.yul\":2645:2652   */\n      dup6\n        /* \"#utility.yul\":2641:2664   */\n      sub\n        /* \"#utility.yul\":2637:2669   */\n      slt\n        /* \"#utility.yul\":2634:2753   */\n      iszero\n      tag_254\n      jumpi\n        /* \"#utility.yul\":2672:2751   */\n      tag_255\n      tag_192\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":2634:2753   */\n    tag_254:\n        /* \"#utility.yul\":2792:2793   */\n      0x00\n        /* \"#utility.yul\":2817:2870   */\n      tag_256\n        /* \"#utility.yul\":2862:2869   */\n      dup6\n        /* \"#utility.yul\":2853:2859   */\n      dup3\n        /* \"#utility.yul\":2842:2851   */\n      dup7\n        /* \"#utility.yul\":2838:2860   */\n      add\n        /* \"#utility.yul\":2817:2870   */\n      tag_197\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":2807:2870   */\n      swap3\n      pop\n        /* \"#utility.yul\":2763:2880   */\n      pop\n        /* \"#utility.yul\":2919:2921   */\n      0x20\n        /* \"#utility.yul\":2945:2998   */\n      tag_257\n        /* \"#utility.yul\":2990:2997   */\n      dup6\n        /* \"#utility.yul\":2981:2987   */\n      dup3\n        /* \"#utility.yul\":2970:2979   */\n      dup7\n        /* \"#utility.yul\":2966:2988   */\n      add\n        /* \"#utility.yul\":2945:2998   */\n      tag_200\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2935:2998   */\n      swap2\n      pop\n        /* \"#utility.yul\":2890:3008   */\n      pop\n        /* \"#utility.yul\":2541:3015   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3021:3111   */\n    tag_201:\n        /* \"#utility.yul\":3055:3062   */\n      0x00\n        /* \"#utility.yul\":3098:3103   */\n      dup2\n        /* \"#utility.yul\":3091:3104   */\n      iszero\n        /* \"#utility.yul\":3084:3105   */\n      iszero\n        /* \"#utility.yul\":3073:3105   */\n      swap1\n      pop\n        /* \"#utility.yul\":3021:3111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3117:3226   */\n    tag_202:\n        /* \"#utility.yul\":3198:3219   */\n      tag_260\n        /* \"#utility.yul\":3213:3218   */\n      dup2\n        /* \"#utility.yul\":3198:3219   */\n      tag_201\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3193:3196   */\n      dup3\n        /* \"#utility.yul\":3186:3220   */\n      mstore\n        /* \"#utility.yul\":3117:3226   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3442   */\n    tag_30:\n        /* \"#utility.yul\":3319:3323   */\n      0x00\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3346:3355   */\n      dup3\n        /* \"#utility.yul\":3342:3360   */\n      add\n        /* \"#utility.yul\":3334:3360   */\n      swap1\n      pop\n        /* \"#utility.yul\":3370:3435   */\n      tag_262\n        /* \"#utility.yul\":3432:3433   */\n      0x00\n        /* \"#utility.yul\":3421:3430   */\n      dup4\n        /* \"#utility.yul\":3417:3434   */\n      add\n        /* \"#utility.yul\":3408:3414   */\n      dup5\n        /* \"#utility.yul\":3370:3435   */\n      tag_202\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3232:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3448:3566   */\n    tag_203:\n        /* \"#utility.yul\":3535:3559   */\n      tag_264\n        /* \"#utility.yul\":3553:3558   */\n      dup2\n        /* \"#utility.yul\":3535:3559   */\n      tag_198\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3530:3533   */\n      dup3\n        /* \"#utility.yul\":3523:3560   */\n      mstore\n        /* \"#utility.yul\":3448:3566   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3572:3794   */\n    tag_34:\n        /* \"#utility.yul\":3665:3669   */\n      0x00\n        /* \"#utility.yul\":3703:3705   */\n      0x20\n        /* \"#utility.yul\":3692:3701   */\n      dup3\n        /* \"#utility.yul\":3688:3706   */\n      add\n        /* \"#utility.yul\":3680:3706   */\n      swap1\n      pop\n        /* \"#utility.yul\":3716:3787   */\n      tag_266\n        /* \"#utility.yul\":3784:3785   */\n      0x00\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3769:3786   */\n      add\n        /* \"#utility.yul\":3760:3766   */\n      dup5\n        /* \"#utility.yul\":3716:3787   */\n      tag_203\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3572:3794   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3800:4419   */\n    tag_37:\n        /* \"#utility.yul\":3877:3883   */\n      0x00\n        /* \"#utility.yul\":3885:3891   */\n      dup1\n        /* \"#utility.yul\":3893:3899   */\n      0x00\n        /* \"#utility.yul\":3942:3944   */\n      0x60\n        /* \"#utility.yul\":3930:3939   */\n      dup5\n        /* \"#utility.yul\":3921:3928   */\n      dup7\n        /* \"#utility.yul\":3917:3940   */\n      sub\n        /* \"#utility.yul\":3913:3945   */\n      slt\n        /* \"#utility.yul\":3910:4029   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3948:4027   */\n      tag_269\n      tag_192\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3910:4029   */\n    tag_268:\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4093:4146   */\n      tag_270\n        /* \"#utility.yul\":4138:4145   */\n      dup7\n        /* \"#utility.yul\":4129:4135   */\n      dup3\n        /* \"#utility.yul\":4118:4127   */\n      dup8\n        /* \"#utility.yul\":4114:4136   */\n      add\n        /* \"#utility.yul\":4093:4146   */\n      tag_197\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":4083:4146   */\n      swap4\n      pop\n        /* \"#utility.yul\":4039:4156   */\n      pop\n        /* \"#utility.yul\":4195:4197   */\n      0x20\n        /* \"#utility.yul\":4221:4274   */\n      tag_271\n        /* \"#utility.yul\":4266:4273   */\n      dup7\n        /* \"#utility.yul\":4257:4263   */\n      dup3\n        /* \"#utility.yul\":4246:4255   */\n      dup8\n        /* \"#utility.yul\":4242:4264   */\n      add\n        /* \"#utility.yul\":4221:4274   */\n      tag_197\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4211:4274   */\n      swap3\n      pop\n        /* \"#utility.yul\":4166:4284   */\n      pop\n        /* \"#utility.yul\":4323:4325   */\n      0x40\n        /* \"#utility.yul\":4349:4402   */\n      tag_272\n        /* \"#utility.yul\":4394:4401   */\n      dup7\n        /* \"#utility.yul\":4385:4391   */\n      dup3\n        /* \"#utility.yul\":4374:4383   */\n      dup8\n        /* \"#utility.yul\":4370:4392   */\n      add\n        /* \"#utility.yul\":4349:4402   */\n      tag_200\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":4339:4402   */\n      swap2\n      pop\n        /* \"#utility.yul\":4294:4412   */\n      pop\n        /* \"#utility.yul\":3800:4419   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4425:4511   */\n    tag_204:\n        /* \"#utility.yul\":4460:4467   */\n      0x00\n        /* \"#utility.yul\":4500:4504   */\n      0xff\n        /* \"#utility.yul\":4493:4498   */\n      dup3\n        /* \"#utility.yul\":4489:4505   */\n      and\n        /* \"#utility.yul\":4478:4505   */\n      swap1\n      pop\n        /* \"#utility.yul\":4425:4511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4517:4629   */\n    tag_205:\n        /* \"#utility.yul\":4600:4622   */\n      tag_275\n        /* \"#utility.yul\":4616:4621   */\n      dup2\n        /* \"#utility.yul\":4600:4622   */\n      tag_204\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":4595:4598   */\n      dup3\n        /* \"#utility.yul\":4588:4623   */\n      mstore\n        /* \"#utility.yul\":4517:4629   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4635:4849   */\n    tag_43:\n        /* \"#utility.yul\":4724:4728   */\n      0x00\n        /* \"#utility.yul\":4762:4764   */\n      0x20\n        /* \"#utility.yul\":4751:4760   */\n      dup3\n        /* \"#utility.yul\":4747:4765   */\n      add\n        /* \"#utility.yul\":4739:4765   */\n      swap1\n      pop\n        /* \"#utility.yul\":4775:4842   */\n      tag_277\n        /* \"#utility.yul\":4839:4840   */\n      0x00\n        /* \"#utility.yul\":4828:4837   */\n      dup4\n        /* \"#utility.yul\":4824:4841   */\n      add\n        /* \"#utility.yul\":4815:4821   */\n      dup5\n        /* \"#utility.yul\":4775:4842   */\n      tag_205\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4635:4849   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4855:5184   */\n    tag_48:\n        /* \"#utility.yul\":4914:4920   */\n      0x00\n        /* \"#utility.yul\":4963:4965   */\n      0x20\n        /* \"#utility.yul\":4951:4960   */\n      dup3\n        /* \"#utility.yul\":4942:4949   */\n      dup5\n        /* \"#utility.yul\":4938:4961   */\n      sub\n        /* \"#utility.yul\":4934:4966   */\n      slt\n        /* \"#utility.yul\":4931:5050   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4969:5048   */\n      tag_280\n      tag_192\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4931:5050   */\n    tag_279:\n        /* \"#utility.yul\":5089:5090   */\n      0x00\n        /* \"#utility.yul\":5114:5167   */\n      tag_281\n        /* \"#utility.yul\":5159:5166   */\n      dup5\n        /* \"#utility.yul\":5150:5156   */\n      dup3\n        /* \"#utility.yul\":5139:5148   */\n      dup6\n        /* \"#utility.yul\":5135:5157   */\n      add\n        /* \"#utility.yul\":5114:5167   */\n      tag_197\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5104:5167   */\n      swap2\n      pop\n        /* \"#utility.yul\":5060:5177   */\n      pop\n        /* \"#utility.yul\":4855:5184   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5190:5308   */\n    tag_206:\n        /* \"#utility.yul\":5277:5301   */\n      tag_283\n        /* \"#utility.yul\":5295:5300   */\n      dup2\n        /* \"#utility.yul\":5277:5301   */\n      tag_195\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":5272:5275   */\n      dup3\n        /* \"#utility.yul\":5265:5302   */\n      mstore\n        /* \"#utility.yul\":5190:5308   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5314:5536   */\n    tag_56:\n        /* \"#utility.yul\":5407:5411   */\n      0x00\n        /* \"#utility.yul\":5445:5447   */\n      0x20\n        /* \"#utility.yul\":5434:5443   */\n      dup3\n        /* \"#utility.yul\":5430:5448   */\n      add\n        /* \"#utility.yul\":5422:5448   */\n      swap1\n      pop\n        /* \"#utility.yul\":5458:5529   */\n      tag_285\n        /* \"#utility.yul\":5526:5527   */\n      0x00\n        /* \"#utility.yul\":5515:5524   */\n      dup4\n        /* \"#utility.yul\":5511:5528   */\n      add\n        /* \"#utility.yul\":5502:5508   */\n      dup5\n        /* \"#utility.yul\":5458:5529   */\n      tag_206\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5314:5536   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5542:5602   */\n    tag_207:\n        /* \"#utility.yul\":5570:5573   */\n      0x00\n        /* \"#utility.yul\":5591:5596   */\n      dup2\n        /* \"#utility.yul\":5584:5596   */\n      swap1\n      pop\n        /* \"#utility.yul\":5542:5602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5608:5750   */\n    tag_208:\n        /* \"#utility.yul\":5658:5667   */\n      0x00\n        /* \"#utility.yul\":5691:5744   */\n      tag_288\n        /* \"#utility.yul\":5709:5743   */\n      tag_289\n        /* \"#utility.yul\":5718:5742   */\n      tag_290\n        /* \"#utility.yul\":5736:5741   */\n      dup5\n        /* \"#utility.yul\":5718:5742   */\n      tag_194\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":5709:5743   */\n      tag_207\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5691:5744   */\n      tag_194\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5678:5744   */\n      swap1\n      pop\n        /* \"#utility.yul\":5608:5750   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5756:5882   */\n    tag_209:\n        /* \"#utility.yul\":5806:5815   */\n      0x00\n        /* \"#utility.yul\":5839:5876   */\n      tag_292\n        /* \"#utility.yul\":5870:5875   */\n      dup3\n        /* \"#utility.yul\":5839:5876   */\n      tag_208\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5826:5876   */\n      swap1\n      pop\n        /* \"#utility.yul\":5756:5882   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5888:6030   */\n    tag_210:\n        /* \"#utility.yul\":5954:5963   */\n      0x00\n        /* \"#utility.yul\":5987:6024   */\n      tag_294\n        /* \"#utility.yul\":6018:6023   */\n      dup3\n        /* \"#utility.yul\":5987:6024   */\n      tag_209\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5974:6024   */\n      swap1\n      pop\n        /* \"#utility.yul\":5888:6030   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6036:6199   */\n    tag_211:\n        /* \"#utility.yul\":6139:6192   */\n      tag_296\n        /* \"#utility.yul\":6186:6191   */\n      dup2\n        /* \"#utility.yul\":6139:6192   */\n      tag_210\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6134:6137   */\n      dup3\n        /* \"#utility.yul\":6127:6193   */\n      mstore\n        /* \"#utility.yul\":6036:6199   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6205:6459   */\n    tag_71:\n        /* \"#utility.yul\":6314:6318   */\n      0x00\n        /* \"#utility.yul\":6352:6354   */\n      0x20\n        /* \"#utility.yul\":6341:6350   */\n      dup3\n        /* \"#utility.yul\":6337:6355   */\n      add\n        /* \"#utility.yul\":6329:6355   */\n      swap1\n      pop\n        /* \"#utility.yul\":6365:6452   */\n      tag_298\n        /* \"#utility.yul\":6449:6450   */\n      0x00\n        /* \"#utility.yul\":6438:6447   */\n      dup4\n        /* \"#utility.yul\":6434:6451   */\n      add\n        /* \"#utility.yul\":6425:6431   */\n      dup5\n        /* \"#utility.yul\":6365:6452   */\n      tag_211\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6205:6459   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6465:6939   */\n    tag_74:\n        /* \"#utility.yul\":6533:6539   */\n      0x00\n        /* \"#utility.yul\":6541:6547   */\n      dup1\n        /* \"#utility.yul\":6590:6592   */\n      0x40\n        /* \"#utility.yul\":6578:6587   */\n      dup4\n        /* \"#utility.yul\":6569:6576   */\n      dup6\n        /* \"#utility.yul\":6565:6588   */\n      sub\n        /* \"#utility.yul\":6561:6593   */\n      slt\n        /* \"#utility.yul\":6558:6677   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6596:6675   */\n      tag_301\n      tag_192\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6558:6677   */\n    tag_300:\n        /* \"#utility.yul\":6716:6717   */\n      0x00\n        /* \"#utility.yul\":6741:6794   */\n      tag_302\n        /* \"#utility.yul\":6786:6793   */\n      dup6\n        /* \"#utility.yul\":6777:6783   */\n      dup3\n        /* \"#utility.yul\":6766:6775   */\n      dup7\n        /* \"#utility.yul\":6762:6784   */\n      add\n        /* \"#utility.yul\":6741:6794   */\n      tag_197\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6731:6794   */\n      swap3\n      pop\n        /* \"#utility.yul\":6687:6804   */\n      pop\n        /* \"#utility.yul\":6843:6845   */\n      0x20\n        /* \"#utility.yul\":6869:6922   */\n      tag_303\n        /* \"#utility.yul\":6914:6921   */\n      dup6\n        /* \"#utility.yul\":6905:6911   */\n      dup3\n        /* \"#utility.yul\":6894:6903   */\n      dup7\n        /* \"#utility.yul\":6890:6912   */\n      add\n        /* \"#utility.yul\":6869:6922   */\n      tag_197\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6859:6922   */\n      swap2\n      pop\n        /* \"#utility.yul\":6814:6932   */\n      pop\n        /* \"#utility.yul\":6465:6939   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6945:7125   */\n    tag_212:\n        /* \"#utility.yul\":6993:7070   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6990:6991   */\n      0x00\n        /* \"#utility.yul\":6983:7071   */\n      mstore\n        /* \"#utility.yul\":7090:7094   */\n      0x22\n        /* \"#utility.yul\":7087:7088   */\n      0x04\n        /* \"#utility.yul\":7080:7095   */\n      mstore\n        /* \"#utility.yul\":7114:7118   */\n      0x24\n        /* \"#utility.yul\":7111:7112   */\n      0x00\n        /* \"#utility.yul\":7104:7119   */\n      revert\n        /* \"#utility.yul\":7131:7451   */\n    tag_82:\n        /* \"#utility.yul\":7175:7181   */\n      0x00\n        /* \"#utility.yul\":7212:7213   */\n      0x02\n        /* \"#utility.yul\":7206:7210   */\n      dup3\n        /* \"#utility.yul\":7202:7214   */\n      div\n        /* \"#utility.yul\":7192:7214   */\n      swap1\n      pop\n        /* \"#utility.yul\":7259:7260   */\n      0x01\n        /* \"#utility.yul\":7253:7257   */\n      dup3\n        /* \"#utility.yul\":7249:7261   */\n      and\n        /* \"#utility.yul\":7280:7298   */\n      dup1\n        /* \"#utility.yul\":7270:7351   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":7336:7340   */\n      0x7f\n        /* \"#utility.yul\":7328:7334   */\n      dup3\n        /* \"#utility.yul\":7324:7341   */\n      and\n        /* \"#utility.yul\":7314:7341   */\n      swap2\n      pop\n        /* \"#utility.yul\":7270:7351   */\n    tag_306:\n        /* \"#utility.yul\":7398:7400   */\n      0x20\n        /* \"#utility.yul\":7390:7396   */\n      dup3\n        /* \"#utility.yul\":7387:7401   */\n      lt\n        /* \"#utility.yul\":7367:7385   */\n      dup2\n        /* \"#utility.yul\":7364:7402   */\n      sub\n        /* \"#utility.yul\":7361:7445   */\n      tag_307\n      jumpi\n        /* \"#utility.yul\":7417:7435   */\n      tag_308\n      tag_212\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7361:7445   */\n    tag_307:\n        /* \"#utility.yul\":7182:7451   */\n      pop\n        /* \"#utility.yul\":7131:7451   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7457:7600   */\n    tag_213:\n        /* \"#utility.yul\":7514:7519   */\n      0x00\n        /* \"#utility.yul\":7545:7551   */\n      dup2\n        /* \"#utility.yul\":7539:7552   */\n      mload\n        /* \"#utility.yul\":7530:7552   */\n      swap1\n      pop\n        /* \"#utility.yul\":7561:7594   */\n      tag_310\n        /* \"#utility.yul\":7588:7593   */\n      dup2\n        /* \"#utility.yul\":7561:7594   */\n      tag_199\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7457:7600   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7606:7957   */\n    tag_105:\n        /* \"#utility.yul\":7676:7682   */\n      0x00\n        /* \"#utility.yul\":7725:7727   */\n      0x20\n        /* \"#utility.yul\":7713:7722   */\n      dup3\n        /* \"#utility.yul\":7704:7711   */\n      dup5\n        /* \"#utility.yul\":7700:7723   */\n      sub\n        /* \"#utility.yul\":7696:7728   */\n      slt\n        /* \"#utility.yul\":7693:7812   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":7731:7810   */\n      tag_313\n      tag_192\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":7693:7812   */\n    tag_312:\n        /* \"#utility.yul\":7851:7852   */\n      0x00\n        /* \"#utility.yul\":7876:7940   */\n      tag_314\n        /* \"#utility.yul\":7932:7939   */\n      dup5\n        /* \"#utility.yul\":7923:7929   */\n      dup3\n        /* \"#utility.yul\":7912:7921   */\n      dup6\n        /* \"#utility.yul\":7908:7930   */\n      add\n        /* \"#utility.yul\":7876:7940   */\n      tag_213\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7866:7940   */\n      swap2\n      pop\n        /* \"#utility.yul\":7822:7950   */\n      pop\n        /* \"#utility.yul\":7606:7957   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7963:8142   */\n    tag_214:\n        /* \"#utility.yul\":8103:8134   */\n      0x596f75206d757374206f776e206174206c65617374206f6e65204e4654000000\n        /* \"#utility.yul\":8099:8100   */\n      0x00\n        /* \"#utility.yul\":8091:8097   */\n      dup3\n        /* \"#utility.yul\":8087:8101   */\n      add\n        /* \"#utility.yul\":8080:8135   */\n      mstore\n        /* \"#utility.yul\":7963:8142   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8148:8514   */\n    tag_215:\n        /* \"#utility.yul\":8290:8293   */\n      0x00\n        /* \"#utility.yul\":8311:8378   */\n      tag_317\n        /* \"#utility.yul\":8375:8377   */\n      0x1d\n        /* \"#utility.yul\":8370:8373   */\n      dup4\n        /* \"#utility.yul\":8311:8378   */\n      tag_187\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":8304:8378   */\n      swap2\n      pop\n        /* \"#utility.yul\":8387:8480   */\n      tag_318\n        /* \"#utility.yul\":8476:8479   */\n      dup3\n        /* \"#utility.yul\":8387:8480   */\n      tag_214\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":8505:8507   */\n      0x20\n        /* \"#utility.yul\":8500:8503   */\n      dup3\n        /* \"#utility.yul\":8496:8508   */\n      add\n        /* \"#utility.yul\":8489:8508   */\n      swap1\n      pop\n        /* \"#utility.yul\":8148:8514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8520:8939   */\n    tag_108:\n        /* \"#utility.yul\":8686:8690   */\n      0x00\n        /* \"#utility.yul\":8724:8726   */\n      0x20\n        /* \"#utility.yul\":8713:8722   */\n      dup3\n        /* \"#utility.yul\":8709:8727   */\n      add\n        /* \"#utility.yul\":8701:8727   */\n      swap1\n      pop\n        /* \"#utility.yul\":8773:8782   */\n      dup2\n        /* \"#utility.yul\":8767:8771   */\n      dup2\n        /* \"#utility.yul\":8763:8783   */\n      sub\n        /* \"#utility.yul\":8759:8760   */\n      0x00\n        /* \"#utility.yul\":8748:8757   */\n      dup4\n        /* \"#utility.yul\":8744:8761   */\n      add\n        /* \"#utility.yul\":8737:8784   */\n      mstore\n        /* \"#utility.yul\":8801:8932   */\n      tag_320\n        /* \"#utility.yul\":8927:8931   */\n      dup2\n        /* \"#utility.yul\":8801:8932   */\n      tag_215\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8793:8932   */\n      swap1\n      pop\n        /* \"#utility.yul\":8520:8939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8945:9125   */\n    tag_216:\n        /* \"#utility.yul\":8993:9070   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8990:8991   */\n      0x00\n        /* \"#utility.yul\":8983:9071   */\n      mstore\n        /* \"#utility.yul\":9090:9094   */\n      0x11\n        /* \"#utility.yul\":9087:9088   */\n      0x04\n        /* \"#utility.yul\":9080:9095   */\n      mstore\n        /* \"#utility.yul\":9114:9118   */\n      0x24\n        /* \"#utility.yul\":9111:9112   */\n      0x00\n        /* \"#utility.yul\":9104:9119   */\n      revert\n        /* \"#utility.yul\":9131:9322   */\n    tag_110:\n        /* \"#utility.yul\":9171:9174   */\n      0x00\n        /* \"#utility.yul\":9190:9210   */\n      tag_323\n        /* \"#utility.yul\":9208:9209   */\n      dup3\n        /* \"#utility.yul\":9190:9210   */\n      tag_198\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":9185:9210   */\n      swap2\n      pop\n        /* \"#utility.yul\":9224:9244   */\n      tag_324\n        /* \"#utility.yul\":9242:9243   */\n      dup4\n        /* \"#utility.yul\":9224:9244   */\n      tag_198\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":9219:9244   */\n      swap3\n      pop\n        /* \"#utility.yul\":9267:9268   */\n      dup3\n        /* \"#utility.yul\":9264:9265   */\n      dup3\n        /* \"#utility.yul\":9260:9269   */\n      add\n        /* \"#utility.yul\":9253:9269   */\n      swap1\n      pop\n        /* \"#utility.yul\":9288:9291   */\n      dup1\n        /* \"#utility.yul\":9285:9286   */\n      dup3\n        /* \"#utility.yul\":9282:9292   */\n      gt\n        /* \"#utility.yul\":9279:9315   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":9295:9313   */\n      tag_326\n      tag_216\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9279:9315   */\n    tag_325:\n        /* \"#utility.yul\":9131:9322   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9328:9562   */\n    tag_217:\n        /* \"#utility.yul\":9468:9502   */\n      0x596f752063616e206f6e6c79207265717565737420746f6b656e73206f6e6365\n        /* \"#utility.yul\":9464:9465   */\n      0x00\n        /* \"#utility.yul\":9456:9462   */\n      dup3\n        /* \"#utility.yul\":9452:9466   */\n      add\n        /* \"#utility.yul\":9445:9503   */\n      mstore\n        /* \"#utility.yul\":9537:9554   */\n      0x20657665727920323420686f7572730000000000000000000000000000000000\n        /* \"#utility.yul\":9532:9534   */\n      0x20\n        /* \"#utility.yul\":9524:9530   */\n      dup3\n        /* \"#utility.yul\":9520:9535   */\n      add\n        /* \"#utility.yul\":9513:9555   */\n      mstore\n        /* \"#utility.yul\":9328:9562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9568:9934   */\n    tag_218:\n        /* \"#utility.yul\":9710:9713   */\n      0x00\n        /* \"#utility.yul\":9731:9798   */\n      tag_329\n        /* \"#utility.yul\":9795:9797   */\n      0x2f\n        /* \"#utility.yul\":9790:9793   */\n      dup4\n        /* \"#utility.yul\":9731:9798   */\n      tag_187\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9724:9798   */\n      swap2\n      pop\n        /* \"#utility.yul\":9807:9900   */\n      tag_330\n        /* \"#utility.yul\":9896:9899   */\n      dup3\n        /* \"#utility.yul\":9807:9900   */\n      tag_217\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":9925:9927   */\n      0x40\n        /* \"#utility.yul\":9920:9923   */\n      dup3\n        /* \"#utility.yul\":9916:9928   */\n      add\n        /* \"#utility.yul\":9909:9928   */\n      swap1\n      pop\n        /* \"#utility.yul\":9568:9934   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9940:10359   */\n    tag_113:\n        /* \"#utility.yul\":10106:10110   */\n      0x00\n        /* \"#utility.yul\":10144:10146   */\n      0x20\n        /* \"#utility.yul\":10133:10142   */\n      dup3\n        /* \"#utility.yul\":10129:10147   */\n      add\n        /* \"#utility.yul\":10121:10147   */\n      swap1\n      pop\n        /* \"#utility.yul\":10193:10202   */\n      dup2\n        /* \"#utility.yul\":10187:10191   */\n      dup2\n        /* \"#utility.yul\":10183:10203   */\n      sub\n        /* \"#utility.yul\":10179:10180   */\n      0x00\n        /* \"#utility.yul\":10168:10177   */\n      dup4\n        /* \"#utility.yul\":10164:10181   */\n      add\n        /* \"#utility.yul\":10157:10204   */\n      mstore\n        /* \"#utility.yul\":10221:10352   */\n      tag_332\n        /* \"#utility.yul\":10347:10351   */\n      dup2\n        /* \"#utility.yul\":10221:10352   */\n      tag_218\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":10213:10352   */\n      swap1\n      pop\n        /* \"#utility.yul\":9940:10359   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10365:10585   */\n    tag_219:\n        /* \"#utility.yul\":10505:10539   */\n      0x52656e6f756e63696e67206f776e6572736869702069732064697361626c6564\n        /* \"#utility.yul\":10501:10502   */\n      0x00\n        /* \"#utility.yul\":10493:10499   */\n      dup3\n        /* \"#utility.yul\":10489:10503   */\n      add\n        /* \"#utility.yul\":10482:10540   */\n      mstore\n        /* \"#utility.yul\":10574:10577   */\n      0x2e00000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10569:10571   */\n      0x20\n        /* \"#utility.yul\":10561:10567   */\n      dup3\n        /* \"#utility.yul\":10557:10572   */\n      add\n        /* \"#utility.yul\":10550:10578   */\n      mstore\n        /* \"#utility.yul\":10365:10585   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10591:10957   */\n    tag_220:\n        /* \"#utility.yul\":10733:10736   */\n      0x00\n        /* \"#utility.yul\":10754:10821   */\n      tag_335\n        /* \"#utility.yul\":10818:10820   */\n      0x21\n        /* \"#utility.yul\":10813:10816   */\n      dup4\n        /* \"#utility.yul\":10754:10821   */\n      tag_187\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":10747:10821   */\n      swap2\n      pop\n        /* \"#utility.yul\":10830:10923   */\n      tag_336\n        /* \"#utility.yul\":10919:10922   */\n      dup3\n        /* \"#utility.yul\":10830:10923   */\n      tag_219\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10948:10950   */\n      0x40\n        /* \"#utility.yul\":10943:10946   */\n      dup3\n        /* \"#utility.yul\":10939:10951   */\n      add\n        /* \"#utility.yul\":10932:10951   */\n      swap1\n      pop\n        /* \"#utility.yul\":10591:10957   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10963:11382   */\n    tag_122:\n        /* \"#utility.yul\":11129:11133   */\n      0x00\n        /* \"#utility.yul\":11167:11169   */\n      0x20\n        /* \"#utility.yul\":11156:11165   */\n      dup3\n        /* \"#utility.yul\":11152:11170   */\n      add\n        /* \"#utility.yul\":11144:11170   */\n      swap1\n      pop\n        /* \"#utility.yul\":11216:11225   */\n      dup2\n        /* \"#utility.yul\":11210:11214   */\n      dup2\n        /* \"#utility.yul\":11206:11226   */\n      sub\n        /* \"#utility.yul\":11202:11203   */\n      0x00\n        /* \"#utility.yul\":11191:11200   */\n      dup4\n        /* \"#utility.yul\":11187:11204   */\n      add\n        /* \"#utility.yul\":11180:11227   */\n      mstore\n        /* \"#utility.yul\":11244:11375   */\n      tag_338\n        /* \"#utility.yul\":11370:11374   */\n      dup2\n        /* \"#utility.yul\":11244:11375   */\n      tag_220\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":11236:11375   */\n      swap1\n      pop\n        /* \"#utility.yul\":10963:11382   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11388:11830   */\n    tag_150:\n        /* \"#utility.yul\":11537:11541   */\n      0x00\n        /* \"#utility.yul\":11575:11577   */\n      0x60\n        /* \"#utility.yul\":11564:11573   */\n      dup3\n        /* \"#utility.yul\":11560:11578   */\n      add\n        /* \"#utility.yul\":11552:11578   */\n      swap1\n      pop\n        /* \"#utility.yul\":11588:11659   */\n      tag_340\n        /* \"#utility.yul\":11656:11657   */\n      0x00\n        /* \"#utility.yul\":11645:11654   */\n      dup4\n        /* \"#utility.yul\":11641:11658   */\n      add\n        /* \"#utility.yul\":11632:11638   */\n      dup7\n        /* \"#utility.yul\":11588:11659   */\n      tag_206\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":11669:11741   */\n      tag_341\n        /* \"#utility.yul\":11737:11739   */\n      0x20\n        /* \"#utility.yul\":11726:11735   */\n      dup4\n        /* \"#utility.yul\":11722:11740   */\n      add\n        /* \"#utility.yul\":11713:11719   */\n      dup6\n        /* \"#utility.yul\":11669:11741   */\n      tag_203\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":11751:11823   */\n      tag_342\n        /* \"#utility.yul\":11819:11821   */\n      0x40\n        /* \"#utility.yul\":11808:11817   */\n      dup4\n        /* \"#utility.yul\":11804:11822   */\n      add\n        /* \"#utility.yul\":11795:11801   */\n      dup5\n        /* \"#utility.yul\":11751:11823   */\n      tag_203\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":11388:11830   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c8442799913ab360b74ca417befbd558cb31daf6adee82332f4dc8a01d778d4964736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1102": {
									"entryPoint": null,
									"id": 1102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_336": {
									"entryPoint": null,
									"id": 336,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 618,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 420,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 754,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2405,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1601,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1447,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1898,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 1340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1308,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1733,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1753,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2039,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1743,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2291,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1303,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1651,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1797,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:9",
										"nodeType": "YulBlock",
										"src": "0:7961:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:9",
													"nodeType": "YulBlock",
													"src": "47:35:9",
													"statements": [
														{
															"nativeSrc": "57:19:9",
															"nodeType": "YulAssignment",
															"src": "57:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:9",
																		"nodeType": "YulLiteral",
																		"src": "73:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:9"
																},
																"nativeSrc": "67:9:9",
																"nodeType": "YulFunctionCall",
																"src": "67:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:9",
														"nodeType": "YulTypedName",
														"src": "40:6:9",
														"type": ""
													}
												],
												"src": "7:75:9"
											},
											{
												"body": {
													"nativeSrc": "177:28:9",
													"nodeType": "YulBlock",
													"src": "177:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:9",
																		"nodeType": "YulLiteral",
																		"src": "194:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:9",
																		"nodeType": "YulLiteral",
																		"src": "197:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:9"
																},
																"nativeSrc": "187:12:9",
																"nodeType": "YulFunctionCall",
																"src": "187:12:9"
															},
															"nativeSrc": "187:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:9"
											},
											{
												"body": {
													"nativeSrc": "300:28:9",
													"nodeType": "YulBlock",
													"src": "300:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:9",
																		"nodeType": "YulLiteral",
																		"src": "317:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:9",
																		"nodeType": "YulLiteral",
																		"src": "320:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:9"
																},
																"nativeSrc": "310:12:9",
																"nodeType": "YulFunctionCall",
																"src": "310:12:9"
															},
															"nativeSrc": "310:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:9"
											},
											{
												"body": {
													"nativeSrc": "379:81:9",
													"nodeType": "YulBlock",
													"src": "379:81:9",
													"statements": [
														{
															"nativeSrc": "389:65:9",
															"nodeType": "YulAssignment",
															"src": "389:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:9",
																		"nodeType": "YulLiteral",
																		"src": "411:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:9"
																},
																"nativeSrc": "400:54:9",
																"nodeType": "YulFunctionCall",
																"src": "400:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:9",
														"nodeType": "YulTypedName",
														"src": "361:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:9",
														"nodeType": "YulTypedName",
														"src": "371:7:9",
														"type": ""
													}
												],
												"src": "334:126:9"
											},
											{
												"body": {
													"nativeSrc": "511:51:9",
													"nodeType": "YulBlock",
													"src": "511:51:9",
													"statements": [
														{
															"nativeSrc": "521:35:9",
															"nodeType": "YulAssignment",
															"src": "521:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:9"
																},
																"nativeSrc": "532:24:9",
																"nodeType": "YulFunctionCall",
																"src": "532:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:9",
														"nodeType": "YulTypedName",
														"src": "493:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:9",
														"nodeType": "YulTypedName",
														"src": "503:7:9",
														"type": ""
													}
												],
												"src": "466:96:9"
											},
											{
												"body": {
													"nativeSrc": "611:79:9",
													"nodeType": "YulBlock",
													"src": "611:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:9",
																"nodeType": "YulBlock",
																"src": "668:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:9",
																					"nodeType": "YulLiteral",
																					"src": "677:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:9",
																					"nodeType": "YulLiteral",
																					"src": "680:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:9"
																			},
																			"nativeSrc": "670:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:9"
																		},
																		"nativeSrc": "670:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:9"
																				},
																				"nativeSrc": "641:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:9"
																		},
																		"nativeSrc": "631:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:9"
																},
																"nativeSrc": "624:43:9",
																"nodeType": "YulFunctionCall",
																"src": "624:43:9"
															},
															"nativeSrc": "621:63:9",
															"nodeType": "YulIf",
															"src": "621:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:9",
														"nodeType": "YulTypedName",
														"src": "604:5:9",
														"type": ""
													}
												],
												"src": "568:122:9"
											},
											{
												"body": {
													"nativeSrc": "759:80:9",
													"nodeType": "YulBlock",
													"src": "759:80:9",
													"statements": [
														{
															"nativeSrc": "769:22:9",
															"nodeType": "YulAssignment",
															"src": "769:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:9"
																},
																"nativeSrc": "778:13:9",
																"nodeType": "YulFunctionCall",
																"src": "778:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:9"
																},
																"nativeSrc": "800:33:9",
																"nodeType": "YulFunctionCall",
																"src": "800:33:9"
															},
															"nativeSrc": "800:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:9"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:9",
														"nodeType": "YulTypedName",
														"src": "737:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:9",
														"nodeType": "YulTypedName",
														"src": "745:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:9",
														"nodeType": "YulTypedName",
														"src": "753:5:9",
														"type": ""
													}
												],
												"src": "696:143:9"
											},
											{
												"body": {
													"nativeSrc": "922:274:9",
													"nodeType": "YulBlock",
													"src": "922:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:9",
																"nodeType": "YulBlock",
																"src": "968:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:9"
																			},
																			"nativeSrc": "970:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:9"
																		},
																		"nativeSrc": "970:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:9"
																		},
																		"nativeSrc": "939:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:9",
																		"nodeType": "YulLiteral",
																		"src": "964:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:9"
																},
																"nativeSrc": "935:32:9",
																"nodeType": "YulFunctionCall",
																"src": "935:32:9"
															},
															"nativeSrc": "932:119:9",
															"nodeType": "YulIf",
															"src": "932:119:9"
														},
														{
															"nativeSrc": "1061:128:9",
															"nodeType": "YulBlock",
															"src": "1061:128:9",
															"statements": [
																{
																	"nativeSrc": "1076:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:9",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:9",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:9"
																				},
																				"nativeSrc": "1147:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:9"
																		},
																		"nativeSrc": "1115:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:9",
														"nodeType": "YulTypedName",
														"src": "892:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:9",
														"nodeType": "YulTypedName",
														"src": "903:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:9",
														"nodeType": "YulTypedName",
														"src": "915:6:9",
														"type": ""
													}
												],
												"src": "845:351:9"
											},
											{
												"body": {
													"nativeSrc": "1261:40:9",
													"nodeType": "YulBlock",
													"src": "1261:40:9",
													"statements": [
														{
															"nativeSrc": "1272:22:9",
															"nodeType": "YulAssignment",
															"src": "1272:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1288:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1288:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1282:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1282:5:9"
																},
																"nativeSrc": "1282:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1282:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1272:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1202:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1244:5:9",
														"nodeType": "YulTypedName",
														"src": "1244:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1254:6:9",
														"nodeType": "YulTypedName",
														"src": "1254:6:9",
														"type": ""
													}
												],
												"src": "1202:99:9"
											},
											{
												"body": {
													"nativeSrc": "1335:152:9",
													"nodeType": "YulBlock",
													"src": "1335:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1352:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1352:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1355:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1355:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1345:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1345:6:9"
																},
																"nativeSrc": "1345:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1345:88:9"
															},
															"nativeSrc": "1345:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1345:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1449:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1449:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1452:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1452:4:9",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1442:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1442:6:9"
																},
																"nativeSrc": "1442:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1442:15:9"
															},
															"nativeSrc": "1442:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1442:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1473:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1473:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1476:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1476:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1466:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1466:6:9"
																},
																"nativeSrc": "1466:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1466:15:9"
															},
															"nativeSrc": "1466:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1466:15:9"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1307:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1307:180:9"
											},
											{
												"body": {
													"nativeSrc": "1521:152:9",
													"nodeType": "YulBlock",
													"src": "1521:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:77:9",
																		"nodeType": "YulLiteral",
																		"src": "1541:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1531:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:9"
																},
																"nativeSrc": "1531:88:9",
																"nodeType": "YulFunctionCall",
																"src": "1531:88:9"
															},
															"nativeSrc": "1531:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "1531:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1635:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1635:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1638:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1638:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1628:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1628:6:9"
																},
																"nativeSrc": "1628:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1628:15:9"
															},
															"nativeSrc": "1628:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1628:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:4:9",
																		"nodeType": "YulLiteral",
																		"src": "1662:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:9"
																},
																"nativeSrc": "1652:15:9",
																"nodeType": "YulFunctionCall",
																"src": "1652:15:9"
															},
															"nativeSrc": "1652:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "1652:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1493:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1493:180:9"
											},
											{
												"body": {
													"nativeSrc": "1730:269:9",
													"nodeType": "YulBlock",
													"src": "1730:269:9",
													"statements": [
														{
															"nativeSrc": "1740:22:9",
															"nodeType": "YulAssignment",
															"src": "1740:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1754:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1754:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1760:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1750:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1750:3:9"
																},
																"nativeSrc": "1750:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1750:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1740:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:9"
																}
															]
														},
														{
															"nativeSrc": "1771:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "1771:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1801:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1801:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1807:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1807:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1797:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1797:3:9"
																},
																"nativeSrc": "1797:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1797:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1775:18:9",
																	"nodeType": "YulTypedName",
																	"src": "1775:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1848:51:9",
																"nodeType": "YulBlock",
																"src": "1848:51:9",
																"statements": [
																	{
																		"nativeSrc": "1862:27:9",
																		"nodeType": "YulAssignment",
																		"src": "1862:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1876:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "1876:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1884:4:9",
																					"nodeType": "YulLiteral",
																					"src": "1884:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1872:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "1872:3:9"
																			},
																			"nativeSrc": "1872:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1872:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1862:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1862:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1828:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1828:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1821:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1821:6:9"
																},
																"nativeSrc": "1821:26:9",
																"nodeType": "YulFunctionCall",
																"src": "1821:26:9"
															},
															"nativeSrc": "1818:81:9",
															"nodeType": "YulIf",
															"src": "1818:81:9"
														},
														{
															"body": {
																"nativeSrc": "1951:42:9",
																"nodeType": "YulBlock",
																"src": "1951:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1965:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "1965:16:9"
																			},
																			"nativeSrc": "1965:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "1965:18:9"
																		},
																		"nativeSrc": "1965:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "1965:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1915:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "1915:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1938:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1938:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1946:2:9",
																				"nodeType": "YulLiteral",
																				"src": "1946:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1935:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1935:2:9"
																		},
																		"nativeSrc": "1935:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1935:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1912:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "1912:2:9"
																},
																"nativeSrc": "1912:38:9",
																"nodeType": "YulFunctionCall",
																"src": "1912:38:9"
															},
															"nativeSrc": "1909:84:9",
															"nodeType": "YulIf",
															"src": "1909:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1679:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1714:4:9",
														"nodeType": "YulTypedName",
														"src": "1714:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1723:6:9",
														"nodeType": "YulTypedName",
														"src": "1723:6:9",
														"type": ""
													}
												],
												"src": "1679:320:9"
											},
											{
												"body": {
													"nativeSrc": "2059:87:9",
													"nodeType": "YulBlock",
													"src": "2059:87:9",
													"statements": [
														{
															"nativeSrc": "2069:11:9",
															"nodeType": "YulAssignment",
															"src": "2069:11:9",
															"value": {
																"name": "ptr",
																"nativeSrc": "2077:3:9",
																"nodeType": "YulIdentifier",
																"src": "2077:3:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2069:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2069:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2100:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "2100:3:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2090:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:9"
																},
																"nativeSrc": "2090:14:9",
																"nodeType": "YulFunctionCall",
																"src": "2090:14:9"
															},
															"nativeSrc": "2090:14:9",
															"nodeType": "YulExpressionStatement",
															"src": "2090:14:9"
														},
														{
															"nativeSrc": "2113:26:9",
															"nodeType": "YulAssignment",
															"src": "2113:26:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2134:4:9",
																		"nodeType": "YulLiteral",
																		"src": "2134:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2121:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2121:9:9"
																},
																"nativeSrc": "2121:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2121:18:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2113:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "2113:4:9"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2005:141:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2046:3:9",
														"nodeType": "YulTypedName",
														"src": "2046:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2054:4:9",
														"nodeType": "YulTypedName",
														"src": "2054:4:9",
														"type": ""
													}
												],
												"src": "2005:141:9"
											},
											{
												"body": {
													"nativeSrc": "2196:49:9",
													"nodeType": "YulBlock",
													"src": "2196:49:9",
													"statements": [
														{
															"nativeSrc": "2206:33:9",
															"nodeType": "YulAssignment",
															"src": "2206:33:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2224:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2224:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2231:2:9",
																				"nodeType": "YulLiteral",
																				"src": "2231:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2220:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:9"
																		},
																		"nativeSrc": "2220:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:14:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2236:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2236:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2216:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:9"
																},
																"nativeSrc": "2216:23:9",
																"nodeType": "YulFunctionCall",
																"src": "2216:23:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2206:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:9"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2152:93:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2179:5:9",
														"nodeType": "YulTypedName",
														"src": "2179:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2189:6:9",
														"nodeType": "YulTypedName",
														"src": "2189:6:9",
														"type": ""
													}
												],
												"src": "2152:93:9"
											},
											{
												"body": {
													"nativeSrc": "2304:54:9",
													"nodeType": "YulBlock",
													"src": "2304:54:9",
													"statements": [
														{
															"nativeSrc": "2314:37:9",
															"nodeType": "YulAssignment",
															"src": "2314:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2339:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "2339:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2345:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2345:5:9"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2335:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2335:3:9"
																},
																"nativeSrc": "2335:16:9",
																"nodeType": "YulFunctionCall",
																"src": "2335:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2314:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2314:8:9"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2251:107:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2279:4:9",
														"nodeType": "YulTypedName",
														"src": "2279:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2285:5:9",
														"nodeType": "YulTypedName",
														"src": "2285:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2295:8:9",
														"nodeType": "YulTypedName",
														"src": "2295:8:9",
														"type": ""
													}
												],
												"src": "2251:107:9"
											},
											{
												"body": {
													"nativeSrc": "2440:317:9",
													"nodeType": "YulBlock",
													"src": "2440:317:9",
													"statements": [
														{
															"nativeSrc": "2450:35:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2450:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2471:10:9",
																		"nodeType": "YulIdentifier",
																		"src": "2471:10:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2483:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2483:1:9",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2467:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2467:3:9"
																},
																"nativeSrc": "2467:18:9",
																"nodeType": "YulFunctionCall",
																"src": "2467:18:9"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2454:9:9",
																	"nodeType": "YulTypedName",
																	"src": "2454:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2494:109:9",
															"nodeType": "YulVariableDeclaration",
															"src": "2494:109:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2525:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2525:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:66:9",
																		"nodeType": "YulLiteral",
																		"src": "2536:66:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2506:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2506:18:9"
																},
																"nativeSrc": "2506:97:9",
																"nodeType": "YulFunctionCall",
																"src": "2506:97:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2498:4:9",
																	"nodeType": "YulTypedName",
																	"src": "2498:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2612:51:9",
															"nodeType": "YulAssignment",
															"src": "2612:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2643:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "2643:9:9"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2654:8:9",
																		"nodeType": "YulIdentifier",
																		"src": "2654:8:9"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2624:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "2624:18:9"
																},
																"nativeSrc": "2624:39:9",
																"nodeType": "YulFunctionCall",
																"src": "2624:39:9"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2612:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "2612:8:9"
																}
															]
														},
														{
															"nativeSrc": "2672:30:9",
															"nodeType": "YulAssignment",
															"src": "2672:30:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2685:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2685:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2696:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2696:4:9"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2692:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2692:3:9"
																		},
																		"nativeSrc": "2692:9:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2692:9:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2681:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2681:3:9"
																},
																"nativeSrc": "2681:21:9",
																"nodeType": "YulFunctionCall",
																"src": "2681:21:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2672:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2672:5:9"
																}
															]
														},
														{
															"nativeSrc": "2711:40:9",
															"nodeType": "YulAssignment",
															"src": "2711:40:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2724:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2724:5:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2735:8:9",
																				"nodeType": "YulIdentifier",
																				"src": "2735:8:9"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2745:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "2745:4:9"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2731:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:9"
																		},
																		"nativeSrc": "2731:19:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:19:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2721:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "2721:2:9"
																},
																"nativeSrc": "2721:30:9",
																"nodeType": "YulFunctionCall",
																"src": "2721:30:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2711:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2711:6:9"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2364:393:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2401:5:9",
														"nodeType": "YulTypedName",
														"src": "2401:5:9",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2408:10:9",
														"nodeType": "YulTypedName",
														"src": "2408:10:9",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2420:8:9",
														"nodeType": "YulTypedName",
														"src": "2420:8:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2433:6:9",
														"nodeType": "YulTypedName",
														"src": "2433:6:9",
														"type": ""
													}
												],
												"src": "2364:393:9"
											},
											{
												"body": {
													"nativeSrc": "2808:32:9",
													"nodeType": "YulBlock",
													"src": "2808:32:9",
													"statements": [
														{
															"nativeSrc": "2818:16:9",
															"nodeType": "YulAssignment",
															"src": "2818:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2829:5:9",
																"nodeType": "YulIdentifier",
																"src": "2829:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2818:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2818:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2763:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2790:5:9",
														"nodeType": "YulTypedName",
														"src": "2790:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2800:7:9",
														"nodeType": "YulTypedName",
														"src": "2800:7:9",
														"type": ""
													}
												],
												"src": "2763:77:9"
											},
											{
												"body": {
													"nativeSrc": "2878:28:9",
													"nodeType": "YulBlock",
													"src": "2878:28:9",
													"statements": [
														{
															"nativeSrc": "2888:12:9",
															"nodeType": "YulAssignment",
															"src": "2888:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "2895:5:9",
																"nodeType": "YulIdentifier",
																"src": "2895:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2888:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2888:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2846:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2864:5:9",
														"nodeType": "YulTypedName",
														"src": "2864:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2874:3:9",
														"nodeType": "YulTypedName",
														"src": "2874:3:9",
														"type": ""
													}
												],
												"src": "2846:60:9"
											},
											{
												"body": {
													"nativeSrc": "2972:82:9",
													"nodeType": "YulBlock",
													"src": "2972:82:9",
													"statements": [
														{
															"nativeSrc": "2982:66:9",
															"nodeType": "YulAssignment",
															"src": "2982:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3040:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "3040:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3022:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "3022:17:9"
																				},
																				"nativeSrc": "3022:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3022:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3013:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "3013:8:9"
																		},
																		"nativeSrc": "3013:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3013:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2995:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "2995:17:9"
																},
																"nativeSrc": "2995:53:9",
																"nodeType": "YulFunctionCall",
																"src": "2995:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2982:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "2982:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2912:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2952:5:9",
														"nodeType": "YulTypedName",
														"src": "2952:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2962:9:9",
														"nodeType": "YulTypedName",
														"src": "2962:9:9",
														"type": ""
													}
												],
												"src": "2912:142:9"
											},
											{
												"body": {
													"nativeSrc": "3107:28:9",
													"nodeType": "YulBlock",
													"src": "3107:28:9",
													"statements": [
														{
															"nativeSrc": "3117:12:9",
															"nodeType": "YulAssignment",
															"src": "3117:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "3124:5:9",
																"nodeType": "YulIdentifier",
																"src": "3124:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3117:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3117:3:9"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3060:75:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3093:5:9",
														"nodeType": "YulTypedName",
														"src": "3093:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3103:3:9",
														"nodeType": "YulTypedName",
														"src": "3103:3:9",
														"type": ""
													}
												],
												"src": "3060:75:9"
											},
											{
												"body": {
													"nativeSrc": "3217:193:9",
													"nodeType": "YulBlock",
													"src": "3217:193:9",
													"statements": [
														{
															"nativeSrc": "3227:63:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3227:63:9",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3282:7:9",
																		"nodeType": "YulIdentifier",
																		"src": "3282:7:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3251:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3251:30:9"
																},
																"nativeSrc": "3251:39:9",
																"nodeType": "YulFunctionCall",
																"src": "3251:39:9"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3231:16:9",
																	"nodeType": "YulTypedName",
																	"src": "3231:16:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3306:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3306:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3346:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "3346:4:9"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3340:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3340:5:9"
																				},
																				"nativeSrc": "3340:11:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3340:11:9"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3353:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "3353:6:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3385:16:9",
																						"nodeType": "YulIdentifier",
																						"src": "3385:16:9"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3361:23:9",
																					"nodeType": "YulIdentifier",
																					"src": "3361:23:9"
																				},
																				"nativeSrc": "3361:41:9",
																				"nodeType": "YulFunctionCall",
																				"src": "3361:41:9"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3312:27:9",
																			"nodeType": "YulIdentifier",
																			"src": "3312:27:9"
																		},
																		"nativeSrc": "3312:91:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3312:91:9"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3299:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3299:6:9"
																},
																"nativeSrc": "3299:105:9",
																"nodeType": "YulFunctionCall",
																"src": "3299:105:9"
															},
															"nativeSrc": "3299:105:9",
															"nodeType": "YulExpressionStatement",
															"src": "3299:105:9"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3141:269:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3194:4:9",
														"nodeType": "YulTypedName",
														"src": "3194:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3200:6:9",
														"nodeType": "YulTypedName",
														"src": "3200:6:9",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3208:7:9",
														"nodeType": "YulTypedName",
														"src": "3208:7:9",
														"type": ""
													}
												],
												"src": "3141:269:9"
											},
											{
												"body": {
													"nativeSrc": "3465:24:9",
													"nodeType": "YulBlock",
													"src": "3465:24:9",
													"statements": [
														{
															"nativeSrc": "3475:8:9",
															"nodeType": "YulAssignment",
															"src": "3475:8:9",
															"value": {
																"kind": "number",
																"nativeSrc": "3482:1:9",
																"nodeType": "YulLiteral",
																"src": "3482:1:9",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3475:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3475:3:9"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3416:73:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3461:3:9",
														"nodeType": "YulTypedName",
														"src": "3461:3:9",
														"type": ""
													}
												],
												"src": "3416:73:9"
											},
											{
												"body": {
													"nativeSrc": "3548:136:9",
													"nodeType": "YulBlock",
													"src": "3548:136:9",
													"statements": [
														{
															"nativeSrc": "3558:46:9",
															"nodeType": "YulVariableDeclaration",
															"src": "3558:46:9",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3572:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "3572:30:9"
																},
																"nativeSrc": "3572:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3572:32:9"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3562:6:9",
																	"nodeType": "YulTypedName",
																	"src": "3562:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3657:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "3657:4:9"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3663:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3663:6:9"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3671:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3671:6:9"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3613:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3613:43:9"
																},
																"nativeSrc": "3613:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3613:65:9"
															},
															"nativeSrc": "3613:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3613:65:9"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3495:189:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3534:4:9",
														"nodeType": "YulTypedName",
														"src": "3534:4:9",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3540:6:9",
														"nodeType": "YulTypedName",
														"src": "3540:6:9",
														"type": ""
													}
												],
												"src": "3495:189:9"
											},
											{
												"body": {
													"nativeSrc": "3740:136:9",
													"nodeType": "YulBlock",
													"src": "3740:136:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3807:63:9",
																"nodeType": "YulBlock",
																"src": "3807:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3851:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3851:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3858:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3858:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3821:29:9",
																				"nodeType": "YulIdentifier",
																				"src": "3821:29:9"
																			},
																			"nativeSrc": "3821:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3821:39:9"
																		},
																		"nativeSrc": "3821:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3821:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3760:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "3760:5:9"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3767:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3767:3:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3757:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3757:2:9"
																},
																"nativeSrc": "3757:14:9",
																"nodeType": "YulFunctionCall",
																"src": "3757:14:9"
															},
															"nativeSrc": "3750:120:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3772:26:9",
																"nodeType": "YulBlock",
																"src": "3772:26:9",
																"statements": [
																	{
																		"nativeSrc": "3774:22:9",
																		"nodeType": "YulAssignment",
																		"src": "3774:22:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3787:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "3787:5:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3794:1:9",
																					"nodeType": "YulLiteral",
																					"src": "3794:1:9",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3783:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "3783:3:9"
																			},
																			"nativeSrc": "3783:13:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:13:9"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3774:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3774:5:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3754:2:9",
																"nodeType": "YulBlock",
																"src": "3754:2:9",
																"statements": []
															},
															"src": "3750:120:9"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3690:186:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3728:5:9",
														"nodeType": "YulTypedName",
														"src": "3728:5:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3735:3:9",
														"nodeType": "YulTypedName",
														"src": "3735:3:9",
														"type": ""
													}
												],
												"src": "3690:186:9"
											},
											{
												"body": {
													"nativeSrc": "3961:464:9",
													"nodeType": "YulBlock",
													"src": "3961:464:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3987:431:9",
																"nodeType": "YulBlock",
																"src": "3987:431:9",
																"statements": [
																	{
																		"nativeSrc": "4001:54:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4001:54:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4049:5:9",
																					"nodeType": "YulIdentifier",
																					"src": "4049:5:9"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4017:31:9",
																				"nodeType": "YulIdentifier",
																				"src": "4017:31:9"
																			},
																			"nativeSrc": "4017:38:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4017:38:9"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4005:8:9",
																				"nodeType": "YulTypedName",
																				"src": "4005:8:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4068:63:9",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4068:63:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4091:8:9",
																					"nodeType": "YulIdentifier",
																					"src": "4091:8:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4119:10:9",
																							"nodeType": "YulIdentifier",
																							"src": "4119:10:9"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4101:17:9",
																						"nodeType": "YulIdentifier",
																						"src": "4101:17:9"
																					},
																					"nativeSrc": "4101:29:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4101:29:9"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4087:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "4087:3:9"
																			},
																			"nativeSrc": "4087:44:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4087:44:9"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4072:11:9",
																				"nodeType": "YulTypedName",
																				"src": "4072:11:9",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4288:27:9",
																			"nodeType": "YulBlock",
																			"src": "4288:27:9",
																			"statements": [
																				{
																					"nativeSrc": "4290:23:9",
																					"nodeType": "YulAssignment",
																					"src": "4290:23:9",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4305:8:9",
																						"nodeType": "YulIdentifier",
																						"src": "4305:8:9"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4290:11:9",
																							"nodeType": "YulIdentifier",
																							"src": "4290:11:9"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4272:10:9",
																					"nodeType": "YulIdentifier",
																					"src": "4272:10:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4284:2:9",
																					"nodeType": "YulLiteral",
																					"src": "4284:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4269:2:9",
																				"nodeType": "YulIdentifier",
																				"src": "4269:2:9"
																			},
																			"nativeSrc": "4269:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4269:18:9"
																		},
																		"nativeSrc": "4266:49:9",
																		"nodeType": "YulIf",
																		"src": "4266:49:9"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4357:11:9",
																					"nodeType": "YulIdentifier",
																					"src": "4357:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4374:8:9",
																							"nodeType": "YulIdentifier",
																							"src": "4374:8:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4402:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "4402:3:9"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4384:17:9",
																								"nodeType": "YulIdentifier",
																								"src": "4384:17:9"
																							},
																							"nativeSrc": "4384:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "4384:22:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4370:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "4370:3:9"
																					},
																					"nativeSrc": "4370:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "4370:37:9"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4328:28:9",
																				"nodeType": "YulIdentifier",
																				"src": "4328:28:9"
																			},
																			"nativeSrc": "4328:80:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4328:80:9"
																		},
																		"nativeSrc": "4328:80:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4328:80:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3978:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3978:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3983:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3975:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "3975:2:9"
																},
																"nativeSrc": "3975:11:9",
																"nodeType": "YulFunctionCall",
																"src": "3975:11:9"
															},
															"nativeSrc": "3972:446:9",
															"nodeType": "YulIf",
															"src": "3972:446:9"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3882:543:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3937:5:9",
														"nodeType": "YulTypedName",
														"src": "3937:5:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3944:3:9",
														"nodeType": "YulTypedName",
														"src": "3944:3:9",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3949:10:9",
														"nodeType": "YulTypedName",
														"src": "3949:10:9",
														"type": ""
													}
												],
												"src": "3882:543:9"
											},
											{
												"body": {
													"nativeSrc": "4494:54:9",
													"nodeType": "YulBlock",
													"src": "4494:54:9",
													"statements": [
														{
															"nativeSrc": "4504:37:9",
															"nodeType": "YulAssignment",
															"src": "4504:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4529:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4529:4:9"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4535:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4535:5:9"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4525:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4525:3:9"
																},
																"nativeSrc": "4525:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4525:16:9"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4504:8:9",
																	"nodeType": "YulIdentifier",
																	"src": "4504:8:9"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4431:117:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4469:4:9",
														"nodeType": "YulTypedName",
														"src": "4469:4:9",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4475:5:9",
														"nodeType": "YulTypedName",
														"src": "4475:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4485:8:9",
														"nodeType": "YulTypedName",
														"src": "4485:8:9",
														"type": ""
													}
												],
												"src": "4431:117:9"
											},
											{
												"body": {
													"nativeSrc": "4605:118:9",
													"nodeType": "YulBlock",
													"src": "4605:118:9",
													"statements": [
														{
															"nativeSrc": "4615:68:9",
															"nodeType": "YulVariableDeclaration",
															"src": "4615:68:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4664:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4664:1:9",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4667:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4667:5:9"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4660:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4660:3:9"
																				},
																				"nativeSrc": "4660:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4660:13:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4679:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4679:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4675:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4675:3:9"
																				},
																				"nativeSrc": "4675:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4675:6:9"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4631:28:9",
																			"nodeType": "YulIdentifier",
																			"src": "4631:28:9"
																		},
																		"nativeSrc": "4631:51:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4631:51:9"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4627:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4627:3:9"
																},
																"nativeSrc": "4627:56:9",
																"nodeType": "YulFunctionCall",
																"src": "4627:56:9"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4619:4:9",
																	"nodeType": "YulTypedName",
																	"src": "4619:4:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4692:25:9",
															"nodeType": "YulAssignment",
															"src": "4692:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4706:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4706:4:9"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4712:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4712:4:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4702:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4702:3:9"
																},
																"nativeSrc": "4702:15:9",
																"nodeType": "YulFunctionCall",
																"src": "4702:15:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4692:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:9"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4554:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4582:4:9",
														"nodeType": "YulTypedName",
														"src": "4582:4:9",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4588:5:9",
														"nodeType": "YulTypedName",
														"src": "4588:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4598:6:9",
														"nodeType": "YulTypedName",
														"src": "4598:6:9",
														"type": ""
													}
												],
												"src": "4554:169:9"
											},
											{
												"body": {
													"nativeSrc": "4809:214:9",
													"nodeType": "YulBlock",
													"src": "4809:214:9",
													"statements": [
														{
															"nativeSrc": "4942:37:9",
															"nodeType": "YulAssignment",
															"src": "4942:37:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4969:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4969:4:9"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4975:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4975:3:9"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4950:18:9",
																	"nodeType": "YulIdentifier",
																	"src": "4950:18:9"
																},
																"nativeSrc": "4950:29:9",
																"nodeType": "YulFunctionCall",
																"src": "4950:29:9"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4942:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4942:4:9"
																}
															]
														},
														{
															"nativeSrc": "4988:29:9",
															"nodeType": "YulAssignment",
															"src": "4988:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4999:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "4999:4:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5009:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5009:1:9",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5012:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "5012:3:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5005:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5005:3:9"
																		},
																		"nativeSrc": "5005:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:11:9"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4996:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "4996:2:9"
																},
																"nativeSrc": "4996:21:9",
																"nodeType": "YulFunctionCall",
																"src": "4996:21:9"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4988:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4988:4:9"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4728:295:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4790:4:9",
														"nodeType": "YulTypedName",
														"src": "4790:4:9",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4796:3:9",
														"nodeType": "YulTypedName",
														"src": "4796:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4804:4:9",
														"nodeType": "YulTypedName",
														"src": "4804:4:9",
														"type": ""
													}
												],
												"src": "4728:295:9"
											},
											{
												"body": {
													"nativeSrc": "5120:1303:9",
													"nodeType": "YulBlock",
													"src": "5120:1303:9",
													"statements": [
														{
															"nativeSrc": "5131:51:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5131:51:9",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5178:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5178:3:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5145:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "5145:32:9"
																},
																"nativeSrc": "5145:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5145:37:9"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5135:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5135:6:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5267:22:9",
																"nodeType": "YulBlock",
																"src": "5267:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5269:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "5269:16:9"
																			},
																			"nativeSrc": "5269:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "5269:18:9"
																		},
																		"nativeSrc": "5269:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "5269:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5239:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5239:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5247:18:9",
																		"nodeType": "YulLiteral",
																		"src": "5247:18:9",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5236:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5236:2:9"
																},
																"nativeSrc": "5236:30:9",
																"nodeType": "YulFunctionCall",
																"src": "5236:30:9"
															},
															"nativeSrc": "5233:56:9",
															"nodeType": "YulIf",
															"src": "5233:56:9"
														},
														{
															"nativeSrc": "5299:52:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5299:52:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5345:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "5345:4:9"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5339:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5339:5:9"
																		},
																		"nativeSrc": "5339:11:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5339:11:9"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5313:25:9",
																	"nodeType": "YulIdentifier",
																	"src": "5313:25:9"
																},
																"nativeSrc": "5313:38:9",
																"nodeType": "YulFunctionCall",
																"src": "5313:38:9"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5303:6:9",
																	"nodeType": "YulTypedName",
																	"src": "5303:6:9",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5444:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "5444:4:9"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5450:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5450:6:9"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5458:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5458:6:9"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5398:45:9",
																	"nodeType": "YulIdentifier",
																	"src": "5398:45:9"
																},
																"nativeSrc": "5398:67:9",
																"nodeType": "YulFunctionCall",
																"src": "5398:67:9"
															},
															"nativeSrc": "5398:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "5398:67:9"
														},
														{
															"nativeSrc": "5475:18:9",
															"nodeType": "YulVariableDeclaration",
															"src": "5475:18:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5492:1:9",
																"nodeType": "YulLiteral",
																"src": "5492:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5479:9:9",
																	"nodeType": "YulTypedName",
																	"src": "5479:9:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5503:17:9",
															"nodeType": "YulAssignment",
															"src": "5503:17:9",
															"value": {
																"kind": "number",
																"nativeSrc": "5516:4:9",
																"nodeType": "YulLiteral",
																"src": "5516:4:9",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5503:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5503:9:9"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5567:611:9",
																		"nodeType": "YulBlock",
																		"src": "5567:611:9",
																		"statements": [
																			{
																				"nativeSrc": "5581:37:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5581:37:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5600:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5600:6:9"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5612:4:9",
																									"nodeType": "YulLiteral",
																									"src": "5612:4:9",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5608:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "5608:3:9"
																							},
																							"nativeSrc": "5608:9:9",
																							"nodeType": "YulFunctionCall",
																							"src": "5608:9:9"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5596:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "5596:3:9"
																					},
																					"nativeSrc": "5596:22:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5596:22:9"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5585:7:9",
																						"nodeType": "YulTypedName",
																						"src": "5585:7:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5632:51:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5632:51:9",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5678:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "5678:4:9"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5646:31:9",
																						"nodeType": "YulIdentifier",
																						"src": "5646:31:9"
																					},
																					"nativeSrc": "5646:37:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5646:37:9"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5636:6:9",
																						"nodeType": "YulTypedName",
																						"src": "5636:6:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5696:10:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5696:10:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5705:1:9",
																					"nodeType": "YulLiteral",
																					"src": "5705:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5700:1:9",
																						"nodeType": "YulTypedName",
																						"src": "5700:1:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5764:163:9",
																					"nodeType": "YulBlock",
																					"src": "5764:163:9",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5789:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5789:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5807:3:9",
																														"nodeType": "YulIdentifier",
																														"src": "5807:3:9"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5812:9:9",
																														"nodeType": "YulIdentifier",
																														"src": "5812:9:9"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5803:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "5803:3:9"
																												},
																												"nativeSrc": "5803:19:9",
																												"nodeType": "YulFunctionCall",
																												"src": "5803:19:9"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5797:5:9",
																											"nodeType": "YulIdentifier",
																											"src": "5797:5:9"
																										},
																										"nativeSrc": "5797:26:9",
																										"nodeType": "YulFunctionCall",
																										"src": "5797:26:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5782:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5782:6:9"
																								},
																								"nativeSrc": "5782:42:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5782:42:9"
																							},
																							"nativeSrc": "5782:42:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "5782:42:9"
																						},
																						{
																							"nativeSrc": "5841:24:9",
																							"nodeType": "YulAssignment",
																							"src": "5841:24:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5855:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "5855:6:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5863:1:9",
																										"nodeType": "YulLiteral",
																										"src": "5863:1:9",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5851:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5851:3:9"
																								},
																								"nativeSrc": "5851:14:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5851:14:9"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5841:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "5841:6:9"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5882:31:9",
																							"nodeType": "YulAssignment",
																							"src": "5882:31:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5899:9:9",
																										"nodeType": "YulIdentifier",
																										"src": "5899:9:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5910:2:9",
																										"nodeType": "YulLiteral",
																										"src": "5910:2:9",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5895:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5895:3:9"
																								},
																								"nativeSrc": "5895:18:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5895:18:9"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5882:9:9",
																									"nodeType": "YulIdentifier",
																									"src": "5882:9:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5730:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "5730:1:9"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5733:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "5733:7:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5727:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "5727:2:9"
																					},
																					"nativeSrc": "5727:14:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5727:14:9"
																				},
																				"nativeSrc": "5719:208:9",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5742:21:9",
																					"nodeType": "YulBlock",
																					"src": "5742:21:9",
																					"statements": [
																						{
																							"nativeSrc": "5744:17:9",
																							"nodeType": "YulAssignment",
																							"src": "5744:17:9",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5753:1:9",
																										"nodeType": "YulIdentifier",
																										"src": "5753:1:9"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5756:4:9",
																										"nodeType": "YulLiteral",
																										"src": "5756:4:9",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5749:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "5749:3:9"
																								},
																								"nativeSrc": "5749:12:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5749:12:9"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5744:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "5744:1:9"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5723:3:9",
																					"nodeType": "YulBlock",
																					"src": "5723:3:9",
																					"statements": []
																				},
																				"src": "5719:208:9"
																			},
																			{
																				"body": {
																					"nativeSrc": "5963:156:9",
																					"nodeType": "YulBlock",
																					"src": "5963:156:9",
																					"statements": [
																						{
																							"nativeSrc": "5981:43:9",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5981:43:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6008:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6008:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6013:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6013:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6004:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6004:3:9"
																										},
																										"nativeSrc": "6004:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6004:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5998:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "5998:5:9"
																								},
																								"nativeSrc": "5998:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "5998:26:9"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5985:9:9",
																									"nodeType": "YulTypedName",
																									"src": "5985:9:9",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6048:6:9",
																										"nodeType": "YulIdentifier",
																										"src": "6048:6:9"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6075:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6075:9:9"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6090:6:9",
																														"nodeType": "YulIdentifier",
																														"src": "6090:6:9"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6098:4:9",
																														"nodeType": "YulLiteral",
																														"src": "6098:4:9",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6086:3:9",
																													"nodeType": "YulIdentifier",
																													"src": "6086:3:9"
																												},
																												"nativeSrc": "6086:17:9",
																												"nodeType": "YulFunctionCall",
																												"src": "6086:17:9"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6056:18:9",
																											"nodeType": "YulIdentifier",
																											"src": "6056:18:9"
																										},
																										"nativeSrc": "6056:48:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6056:48:9"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6041:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6041:6:9"
																								},
																								"nativeSrc": "6041:64:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6041:64:9"
																							},
																							"nativeSrc": "6041:64:9",
																							"nodeType": "YulExpressionStatement",
																							"src": "6041:64:9"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5946:7:9",
																							"nodeType": "YulIdentifier",
																							"src": "5946:7:9"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5955:6:9",
																							"nodeType": "YulIdentifier",
																							"src": "5955:6:9"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5943:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "5943:2:9"
																					},
																					"nativeSrc": "5943:19:9",
																					"nodeType": "YulFunctionCall",
																					"src": "5943:19:9"
																				},
																				"nativeSrc": "5940:179:9",
																				"nodeType": "YulIf",
																				"src": "5940:179:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6139:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6139:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6153:6:9",
																											"nodeType": "YulIdentifier",
																											"src": "6153:6:9"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6161:1:9",
																											"nodeType": "YulLiteral",
																											"src": "6161:1:9",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6149:3:9",
																										"nodeType": "YulIdentifier",
																										"src": "6149:3:9"
																									},
																									"nativeSrc": "6149:14:9",
																									"nodeType": "YulFunctionCall",
																									"src": "6149:14:9"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6165:1:9",
																									"nodeType": "YulLiteral",
																									"src": "6165:1:9",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6145:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "6145:3:9"
																							},
																							"nativeSrc": "6145:22:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6145:22:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6132:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6132:6:9"
																					},
																					"nativeSrc": "6132:36:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6132:36:9"
																				},
																				"nativeSrc": "6132:36:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6132:36:9"
																			}
																		]
																	},
																	"nativeSrc": "5560:618:9",
																	"nodeType": "YulCase",
																	"src": "5560:618:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5565:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5565:1:9",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6195:222:9",
																		"nodeType": "YulBlock",
																		"src": "6195:222:9",
																		"statements": [
																			{
																				"nativeSrc": "6209:14:9",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6209:14:9",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6222:1:9",
																					"nodeType": "YulLiteral",
																					"src": "6222:1:9",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6213:5:9",
																						"nodeType": "YulTypedName",
																						"src": "6213:5:9",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6246:67:9",
																					"nodeType": "YulBlock",
																					"src": "6246:67:9",
																					"statements": [
																						{
																							"nativeSrc": "6264:35:9",
																							"nodeType": "YulAssignment",
																							"src": "6264:35:9",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6283:3:9",
																												"nodeType": "YulIdentifier",
																												"src": "6283:3:9"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6288:9:9",
																												"nodeType": "YulIdentifier",
																												"src": "6288:9:9"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6279:3:9",
																											"nodeType": "YulIdentifier",
																											"src": "6279:3:9"
																										},
																										"nativeSrc": "6279:19:9",
																										"nodeType": "YulFunctionCall",
																										"src": "6279:19:9"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6273:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6273:5:9"
																								},
																								"nativeSrc": "6273:26:9",
																								"nodeType": "YulFunctionCall",
																								"src": "6273:26:9"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6264:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6264:5:9"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6239:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "6239:6:9"
																				},
																				"nativeSrc": "6236:77:9",
																				"nodeType": "YulIf",
																				"src": "6236:77:9"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6333:4:9",
																							"nodeType": "YulIdentifier",
																							"src": "6333:4:9"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6392:5:9",
																									"nodeType": "YulIdentifier",
																									"src": "6392:5:9"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6399:6:9",
																									"nodeType": "YulIdentifier",
																									"src": "6399:6:9"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6339:52:9",
																								"nodeType": "YulIdentifier",
																								"src": "6339:52:9"
																							},
																							"nativeSrc": "6339:67:9",
																							"nodeType": "YulFunctionCall",
																							"src": "6339:67:9"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6326:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6326:6:9"
																					},
																					"nativeSrc": "6326:81:9",
																					"nodeType": "YulFunctionCall",
																					"src": "6326:81:9"
																				},
																				"nativeSrc": "6326:81:9",
																				"nodeType": "YulExpressionStatement",
																				"src": "6326:81:9"
																			}
																		]
																	},
																	"nativeSrc": "6187:230:9",
																	"nodeType": "YulCase",
																	"src": "6187:230:9",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5540:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5540:6:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5548:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5548:2:9",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5537:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "5537:2:9"
																},
																"nativeSrc": "5537:14:9",
																"nodeType": "YulFunctionCall",
																"src": "5537:14:9"
															},
															"nativeSrc": "5530:887:9",
															"nodeType": "YulSwitch",
															"src": "5530:887:9"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5028:1395:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5109:4:9",
														"nodeType": "YulTypedName",
														"src": "5109:4:9",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5115:3:9",
														"nodeType": "YulTypedName",
														"src": "5115:3:9",
														"type": ""
													}
												],
												"src": "5028:1395:9"
											},
											{
												"body": {
													"nativeSrc": "6494:53:9",
													"nodeType": "YulBlock",
													"src": "6494:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:9"
																		},
																		"nativeSrc": "6516:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:9"
																},
																"nativeSrc": "6504:37:9",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:9"
															},
															"nativeSrc": "6504:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:9",
														"nodeType": "YulTypedName",
														"src": "6482:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:9",
														"nodeType": "YulTypedName",
														"src": "6489:3:9",
														"type": ""
													}
												],
												"src": "6429:118:9"
											},
											{
												"body": {
													"nativeSrc": "6651:124:9",
													"nodeType": "YulBlock",
													"src": "6651:124:9",
													"statements": [
														{
															"nativeSrc": "6661:26:9",
															"nodeType": "YulAssignment",
															"src": "6661:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:9"
																},
																"nativeSrc": "6669:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:9"
																		},
																		"nativeSrc": "6750:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:9"
																},
																"nativeSrc": "6697:71:9",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:9"
															},
															"nativeSrc": "6697:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:9",
														"nodeType": "YulTypedName",
														"src": "6623:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:9",
														"nodeType": "YulTypedName",
														"src": "6635:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:9",
														"nodeType": "YulTypedName",
														"src": "6646:4:9",
														"type": ""
													}
												],
												"src": "6553:222:9"
											},
											{
												"body": {
													"nativeSrc": "6809:152:9",
													"nodeType": "YulBlock",
													"src": "6809:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:9"
																},
																"nativeSrc": "6819:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:9"
															},
															"nativeSrc": "6819:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:9"
																},
																"nativeSrc": "6916:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:9"
															},
															"nativeSrc": "6916:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:9",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:9"
																},
																"nativeSrc": "6940:15:9",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:9"
															},
															"nativeSrc": "6940:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:9"
											},
											{
												"body": {
													"nativeSrc": "7011:147:9",
													"nodeType": "YulBlock",
													"src": "7011:147:9",
													"statements": [
														{
															"nativeSrc": "7021:25:9",
															"nodeType": "YulAssignment",
															"src": "7021:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:9"
																},
																"nativeSrc": "7026:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:9"
																}
															]
														},
														{
															"nativeSrc": "7055:25:9",
															"nodeType": "YulAssignment",
															"src": "7055:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:9"
																},
																"nativeSrc": "7060:20:9",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:9"
																}
															]
														},
														{
															"nativeSrc": "7089:16:9",
															"nodeType": "YulAssignment",
															"src": "7089:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:9"
																},
																"nativeSrc": "7096:9:9",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:9",
																"nodeType": "YulBlock",
																"src": "7129:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:9"
																			},
																			"nativeSrc": "7131:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:9"
																		},
																		"nativeSrc": "7131:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:9"
																},
																"nativeSrc": "7118:10:9",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:9"
															},
															"nativeSrc": "7115:36:9",
															"nodeType": "YulIf",
															"src": "7115:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:9",
														"nodeType": "YulTypedName",
														"src": "6998:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:9",
														"nodeType": "YulTypedName",
														"src": "7001:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:9",
														"nodeType": "YulTypedName",
														"src": "7007:3:9",
														"type": ""
													}
												],
												"src": "6967:191:9"
											},
											{
												"body": {
													"nativeSrc": "7229:53:9",
													"nodeType": "YulBlock",
													"src": "7229:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:9"
																		},
																		"nativeSrc": "7251:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:9"
																},
																"nativeSrc": "7239:37:9",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:9"
															},
															"nativeSrc": "7239:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:9",
														"nodeType": "YulTypedName",
														"src": "7217:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:9",
														"nodeType": "YulTypedName",
														"src": "7224:3:9",
														"type": ""
													}
												],
												"src": "7164:118:9"
											},
											{
												"body": {
													"nativeSrc": "7442:288:9",
													"nodeType": "YulBlock",
													"src": "7442:288:9",
													"statements": [
														{
															"nativeSrc": "7452:26:9",
															"nodeType": "YulAssignment",
															"src": "7452:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:9"
																},
																"nativeSrc": "7460:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:9"
																		},
																		"nativeSrc": "7541:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:9"
																},
																"nativeSrc": "7488:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:9"
															},
															"nativeSrc": "7488:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:9"
																		},
																		"nativeSrc": "7622:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:9"
																},
																"nativeSrc": "7569:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:9"
															},
															"nativeSrc": "7569:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:9"
																		},
																		"nativeSrc": "7704:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:9"
																},
																"nativeSrc": "7651:72:9",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:9"
															},
															"nativeSrc": "7651:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:9",
														"nodeType": "YulTypedName",
														"src": "7398:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:9",
														"nodeType": "YulTypedName",
														"src": "7410:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:9",
														"nodeType": "YulTypedName",
														"src": "7418:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:9",
														"nodeType": "YulTypedName",
														"src": "7426:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:9",
														"nodeType": "YulTypedName",
														"src": "7437:4:9",
														"type": ""
													}
												],
												"src": "7288:442:9"
											},
											{
												"body": {
													"nativeSrc": "7834:124:9",
													"nodeType": "YulBlock",
													"src": "7834:124:9",
													"statements": [
														{
															"nativeSrc": "7844:26:9",
															"nodeType": "YulAssignment",
															"src": "7844:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:9"
																},
																"nativeSrc": "7852:18:9",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:9",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:9"
																		},
																		"nativeSrc": "7933:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:9"
																},
																"nativeSrc": "7880:71:9",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:9"
															},
															"nativeSrc": "7880:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:9",
														"nodeType": "YulTypedName",
														"src": "7806:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:9",
														"nodeType": "YulTypedName",
														"src": "7818:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:9",
														"nodeType": "YulTypedName",
														"src": "7829:4:9",
														"type": ""
													}
												],
												"src": "7736:222:9"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x202B CODESIZE SUB DUP1 PUSH2 0x202B DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x57A JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504C5A546F6B656E000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x504C5A0000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAE SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBE SWAP2 SWAP1 PUSH2 0x7F7 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x133 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x142 DUP2 PUSH2 0x1A4 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP1 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x19E CALLER PUSH10 0xD3C21BCECCEDA1000000 PUSH2 0x26A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x9B7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2DC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x8D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2EE PUSH1 0x0 DUP4 DUP4 PUSH2 0x2F2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x344 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x922 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x417 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3D0 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3C7 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x965 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x460 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4AD JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x50A SWAP2 SWAP1 PUSH2 0x99C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x547 DUP3 PUSH2 0x51C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x557 DUP2 PUSH2 0x53C JUMP JUMPDEST DUP2 EQ PUSH2 0x562 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x574 DUP2 PUSH2 0x54E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x590 JUMPI PUSH2 0x58F PUSH2 0x517 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x59E DUP5 DUP3 DUP6 ADD PUSH2 0x565 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x628 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x63B JUMPI PUSH2 0x63A PUSH2 0x5E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x6A3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x666 JUMP JUMPDEST PUSH2 0x6AD DUP7 DUP4 PUSH2 0x666 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F4 PUSH2 0x6EF PUSH2 0x6EA DUP5 PUSH2 0x6C5 JUMP JUMPDEST PUSH2 0x6CF JUMP JUMPDEST PUSH2 0x6C5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x70E DUP4 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x722 PUSH2 0x71A DUP3 PUSH2 0x6FB JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x673 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x737 PUSH2 0x72A JUMP JUMPDEST PUSH2 0x742 DUP2 DUP5 DUP5 PUSH2 0x705 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x766 JUMPI PUSH2 0x75B PUSH1 0x0 DUP3 PUSH2 0x72F JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x748 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7AB JUMPI PUSH2 0x77C DUP2 PUSH2 0x641 JUMP JUMPDEST PUSH2 0x785 DUP5 PUSH2 0x656 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x794 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x7A8 PUSH2 0x7A0 DUP6 PUSH2 0x656 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x747 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CE PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x7B0 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7E7 DUP4 DUP4 PUSH2 0x7BD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x800 DUP3 PUSH2 0x5A7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x819 JUMPI PUSH2 0x818 PUSH2 0x5B2 JUMP JUMPDEST JUMPDEST PUSH2 0x823 DUP3 SLOAD PUSH2 0x610 JUMP JUMPDEST PUSH2 0x82E DUP3 DUP3 DUP6 PUSH2 0x76A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x861 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x84F JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x859 DUP6 DUP3 PUSH2 0x7DB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x8C1 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x86F DUP7 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x897 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x872 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x8B4 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x8B0 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x7BD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8D2 DUP2 PUSH2 0x53C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x8ED PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x8C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x92D DUP3 PUSH2 0x6C5 JUMP JUMPDEST SWAP2 POP PUSH2 0x938 DUP4 PUSH2 0x6C5 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x950 JUMPI PUSH2 0x94F PUSH2 0x8F3 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x95F DUP2 PUSH2 0x6C5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x97A PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x8C9 JUMP JUMPDEST PUSH2 0x987 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x956 JUMP JUMPDEST PUSH2 0x994 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x956 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x9B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x956 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1665 DUP1 PUSH2 0x9C6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xA0662D89 EQ PUSH2 0x234 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x359CF2B7 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39B PUSH2 0x870 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A8 DUP2 DUP6 DUP6 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C8 PUSH2 0x870 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D5 DUP6 DUP3 DUP6 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x3E0 DUP6 DUP6 DUP6 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST GT PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55A SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x575 CALLER PUSH8 0x1BC16D674EC80000 PUSH2 0xA12 JUMP JUMPDEST TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP1 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AB SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 PUSH2 0x870 JUMP JUMPDEST SWAP1 POP PUSH2 0x732 DUP2 DUP6 DUP6 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86D DUP2 PUSH2 0xB1B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x885 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x896 DUP5 DUP5 PUSH2 0x763 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x918 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x908 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x917 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x990 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA02 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0D DUP4 DUP4 DUP4 PUSH2 0xDB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA90 PUSH1 0x0 DUP4 DUP4 PUSH2 0xDB8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA9C PUSH2 0x870 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABA PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB19 JUMPI PUSH2 0xADD PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC53 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDB2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA9 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDFE SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE96 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF26 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF73 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1017 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103F DUP3 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x1049 DUP2 DUP6 PUSH2 0xFE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1059 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x1062 DUP2 PUSH2 0x1023 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1087 DUP2 DUP5 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BF DUP3 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CF DUP2 PUSH2 0x10B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x10DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EC DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1105 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1122 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114D DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x115E DUP6 DUP3 DUP7 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117D DUP2 PUSH2 0x1168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1174 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A7 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x119E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EF DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1200 DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1211 DUP7 DUP3 DUP8 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1231 DUP2 PUSH2 0x121B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1276 DUP5 DUP3 DUP6 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0x10B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CE PUSH2 0x12C9 PUSH2 0x12C4 DUP5 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 DUP3 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F2 DUP3 PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x12E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133A JUMPI PUSH2 0x1339 PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1348 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1359 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13BD JUMPI PUSH2 0x13BC PUSH2 0x1363 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D2 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FC DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D757374206F776E206174206C65617374206F6E65204E4654000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143B PUSH1 0x1D DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1446 DUP3 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x146A DUP2 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14AB DUP3 PUSH2 0x10F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B6 DUP4 PUSH2 0x10F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14CE JUMPI PUSH2 0x14CD PUSH2 0x1471 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C79207265717565737420746F6B656E73206F6E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20657665727920323420686F7572730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1530 PUSH1 0x2F DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x153B DUP3 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x155F DUP2 PUSH2 0x1523 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52656E6F756E63696E67206F776E6572736869702069732064697361626C6564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C2 PUSH1 0x21 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CD DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x160D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x161A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x1627 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x119E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 DIFFICULTY 0x27 SWAP10 SWAP2 GASPRICE 0xB3 PUSH1 0xB7 0x4C LOG4 OR 0xBE 0xFB 0xD5 PC 0xCB BALANCE 0xDA 0xF6 0xAD 0xEE DUP3 CALLER 0x2F 0x4D 0xC8 LOG0 SAR PUSH24 0x8D4964736F6C634300081900330000000000000000000000 ",
							"sourceMap": "226:1110:8:-:0;;;440:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;262:10;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;530:11:8::1;508;;:34;;;;;;;;;;;;;;;;;;552:23;558:10;570:4;552:5;;;:23;;:::i;:::-;440:191:::0;226:1110;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;;;:35;;:::i;:::-;7721:208;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1202:99::-;1254:6;1288:5;1282:12;1272:22;;1202:99;;;:::o;1307:180::-;1355:77;1352:1;1345:88;1452:4;1449:1;1442:15;1476:4;1473:1;1466:15;1493:180;1541:77;1538:1;1531:88;1638:4;1635:1;1628:15;1662:4;1659:1;1652:15;1679:320;1723:6;1760:1;1754:4;1750:12;1740:22;;1807:1;1801:4;1797:12;1828:18;1818:81;;1884:4;1876:6;1872:17;1862:27;;1818:81;1946:2;1938:6;1935:14;1915:18;1912:38;1909:84;;1965:18;;:::i;:::-;1909:84;1730:269;1679:320;;;:::o;2005:141::-;2054:4;2077:3;2069:11;;2100:3;2097:1;2090:14;2134:4;2131:1;2121:18;2113:26;;2005:141;;;:::o;2152:93::-;2189:6;2236:2;2231;2224:5;2220:14;2216:23;2206:33;;2152:93;;;:::o;2251:107::-;2295:8;2345:5;2339:4;2335:16;2314:37;;2251:107;;;;:::o;2364:393::-;2433:6;2483:1;2471:10;2467:18;2506:97;2536:66;2525:9;2506:97;:::i;:::-;2624:39;2654:8;2643:9;2624:39;:::i;:::-;2612:51;;2696:4;2692:9;2685:5;2681:21;2672:30;;2745:4;2735:8;2731:19;2724:5;2721:30;2711:40;;2440:317;;2364:393;;;;;:::o;2763:77::-;2800:7;2829:5;2818:16;;2763:77;;;:::o;2846:60::-;2874:3;2895:5;2888:12;;2846:60;;;:::o;2912:142::-;2962:9;2995:53;3013:34;3022:24;3040:5;3022:24;:::i;:::-;3013:34;:::i;:::-;2995:53;:::i;:::-;2982:66;;2912:142;;;:::o;3060:75::-;3103:3;3124:5;3117:12;;3060:75;;;:::o;3141:269::-;3251:39;3282:7;3251:39;:::i;:::-;3312:91;3361:41;3385:16;3361:41;:::i;:::-;3353:6;3346:4;3340:11;3312:91;:::i;:::-;3306:4;3299:105;3217:193;3141:269;;;:::o;3416:73::-;3461:3;3416:73;:::o;3495:189::-;3572:32;;:::i;:::-;3613:65;3671:6;3663;3657:4;3613:65;:::i;:::-;3548:136;3495:189;;:::o;3690:186::-;3750:120;3767:3;3760:5;3757:14;3750:120;;;3821:39;3858:1;3851:5;3821:39;:::i;:::-;3794:1;3787:5;3783:13;3774:22;;3750:120;;;3690:186;;:::o;3882:543::-;3983:2;3978:3;3975:11;3972:446;;;4017:38;4049:5;4017:38;:::i;:::-;4101:29;4119:10;4101:29;:::i;:::-;4091:8;4087:44;4284:2;4272:10;4269:18;4266:49;;;4305:8;4290:23;;4266:49;4328:80;4384:22;4402:3;4384:22;:::i;:::-;4374:8;4370:37;4357:11;4328:80;:::i;:::-;3987:431;;3972:446;3882:543;;;:::o;4431:117::-;4485:8;4535:5;4529:4;4525:16;4504:37;;4431:117;;;;:::o;4554:169::-;4598:6;4631:51;4679:1;4675:6;4667:5;4664:1;4660:13;4631:51;:::i;:::-;4627:56;4712:4;4706;4702:15;4692:25;;4605:118;4554:169;;;;:::o;4728:295::-;4804:4;4950:29;4975:3;4969:4;4950:29;:::i;:::-;4942:37;;5012:3;5009:1;5005:11;4999:4;4996:21;4988:29;;4728:295;;;;:::o;5028:1395::-;5145:37;5178:3;5145:37;:::i;:::-;5247:18;5239:6;5236:30;5233:56;;;5269:18;;:::i;:::-;5233:56;5313:38;5345:4;5339:11;5313:38;:::i;:::-;5398:67;5458:6;5450;5444:4;5398:67;:::i;:::-;5492:1;5516:4;5503:17;;5548:2;5540:6;5537:14;5565:1;5560:618;;;;6222:1;6239:6;6236:77;;;6288:9;6283:3;6279:19;6273:26;6264:35;;6236:77;6339:67;6399:6;6392:5;6339:67;:::i;:::-;6333:4;6326:81;6195:222;5530:887;;5560:618;5612:4;5608:9;5600:6;5596:22;5646:37;5678:4;5646:37;:::i;:::-;5705:1;5719:208;5733:7;5730:1;5727:14;5719:208;;;5812:9;5807:3;5803:19;5797:26;5789:6;5782:42;5863:1;5855:6;5851:14;5841:24;;5910:2;5899:9;5895:18;5882:31;;5756:4;5753:1;5749:12;5744:17;;5719:208;;;5955:6;5946:7;5943:19;5940:179;;;6013:9;6008:3;6004:19;5998:26;6056:48;6098:4;6090:6;6086:17;6075:9;6056:48;:::i;:::-;6048:6;6041:64;5963:156;5940:179;6165:1;6161;6153:6;6149:14;6145:22;6139:4;6132:36;5567:611;;;5530:887;;5120:1303;;;5028:1395;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;226:1110:8:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_690": {
									"entryPoint": 2168,
									"id": 690,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_750": {
									"entryPoint": 3041,
									"id": 750,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 2708,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_639": {
									"entryPoint": 2578,
									"id": 639,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1032": {
									"entryPoint": 2160,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_798": {
									"entryPoint": 2186,
									"id": 798,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 2843,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_529": {
									"entryPoint": 2334,
									"id": 529,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_606": {
									"entryPoint": 3512,
									"id": 606,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_426": {
									"entryPoint": 1891,
									"id": 426,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_450": {
									"entryPoint": 912,
									"id": 450,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_385": {
									"entryPoint": 1467,
									"id": 385,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_363": {
									"entryPoint": 1004,
									"id": 363,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastRequestedAt_1080": {
									"entryPoint": 1794,
									"id": 1080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_345": {
									"entryPoint": 766,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@nftContract_1076": {
									"entryPoint": 1853,
									"id": 1076,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 1606,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_1113": {
									"entryPoint": 1539,
									"id": 1113,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@requestTokens_1157": {
									"entryPoint": 1013,
									"id": 1157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_354": {
									"entryPoint": 1648,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_372": {
									"entryPoint": 947,
									"id": 372,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_482": {
									"entryPoint": 957,
									"id": 482,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 2026,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_409": {
									"entryPoint": 1818,
									"id": 409,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 5059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4899,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4552,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1020_to_t_address_fromStack": {
									"entryPoint": 4857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5166,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4510,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4750,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5624,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1020__to_t_address__fromStack_reversed": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4663,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4061,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1020_to_t_address": {
									"entryPoint": 4839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 4821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 4787,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4089,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5010,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 4777,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5233,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4963,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4239,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c": {
									"entryPoint": 5125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25": {
									"entryPoint": 5332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4294,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:11833:9",
										"nodeType": "YulBlock",
										"src": "0:11833:9",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:9",
													"nodeType": "YulBlock",
													"src": "66:40:9",
													"statements": [
														{
															"nativeSrc": "77:22:9",
															"nodeType": "YulAssignment",
															"src": "77:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:9"
																},
																"nativeSrc": "87:12:9",
																"nodeType": "YulFunctionCall",
																"src": "87:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:9"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:9",
														"nodeType": "YulTypedName",
														"src": "49:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:9",
														"nodeType": "YulTypedName",
														"src": "59:6:9",
														"type": ""
													}
												],
												"src": "7:99:9"
											},
											{
												"body": {
													"nativeSrc": "208:73:9",
													"nodeType": "YulBlock",
													"src": "208:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:9"
																},
																"nativeSrc": "218:19:9",
																"nodeType": "YulFunctionCall",
																"src": "218:19:9"
															},
															"nativeSrc": "218:19:9",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:9"
														},
														{
															"nativeSrc": "246:29:9",
															"nodeType": "YulAssignment",
															"src": "246:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:9",
																		"nodeType": "YulLiteral",
																		"src": "270:4:9",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:9"
																},
																"nativeSrc": "261:14:9",
																"nodeType": "YulFunctionCall",
																"src": "261:14:9"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:9",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:9"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:9",
														"nodeType": "YulTypedName",
														"src": "180:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:9",
														"nodeType": "YulTypedName",
														"src": "185:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:9",
														"nodeType": "YulTypedName",
														"src": "196:11:9",
														"type": ""
													}
												],
												"src": "112:169:9"
											},
											{
												"body": {
													"nativeSrc": "349:186:9",
													"nodeType": "YulBlock",
													"src": "349:186:9",
													"statements": [
														{
															"nativeSrc": "360:10:9",
															"nodeType": "YulVariableDeclaration",
															"src": "360:10:9",
															"value": {
																"kind": "number",
																"nativeSrc": "369:1:9",
																"nodeType": "YulLiteral",
																"src": "369:1:9",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "364:1:9",
																	"nodeType": "YulTypedName",
																	"src": "364:1:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "429:63:9",
																"nodeType": "YulBlock",
																"src": "429:63:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "454:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "454:3:9"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "459:1:9",
																							"nodeType": "YulIdentifier",
																							"src": "459:1:9"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "450:3:9",
																						"nodeType": "YulIdentifier",
																						"src": "450:3:9"
																					},
																					"nativeSrc": "450:11:9",
																					"nodeType": "YulFunctionCall",
																					"src": "450:11:9"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "473:3:9",
																									"nodeType": "YulIdentifier",
																									"src": "473:3:9"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "478:1:9",
																									"nodeType": "YulIdentifier",
																									"src": "478:1:9"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "469:3:9",
																								"nodeType": "YulIdentifier",
																								"src": "469:3:9"
																							},
																							"nativeSrc": "469:11:9",
																							"nodeType": "YulFunctionCall",
																							"src": "469:11:9"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "463:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "463:5:9"
																					},
																					"nativeSrc": "463:18:9",
																					"nodeType": "YulFunctionCall",
																					"src": "463:18:9"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "443:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "443:6:9"
																			},
																			"nativeSrc": "443:39:9",
																			"nodeType": "YulFunctionCall",
																			"src": "443:39:9"
																		},
																		"nativeSrc": "443:39:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "443:39:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "390:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "390:1:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "393:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "393:6:9"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "387:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "387:2:9"
																},
																"nativeSrc": "387:13:9",
																"nodeType": "YulFunctionCall",
																"src": "387:13:9"
															},
															"nativeSrc": "379:113:9",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "401:19:9",
																"nodeType": "YulBlock",
																"src": "401:19:9",
																"statements": [
																	{
																		"nativeSrc": "403:15:9",
																		"nodeType": "YulAssignment",
																		"src": "403:15:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "412:1:9",
																					"nodeType": "YulIdentifier",
																					"src": "412:1:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "415:2:9",
																					"nodeType": "YulLiteral",
																					"src": "415:2:9",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "408:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "408:3:9"
																			},
																			"nativeSrc": "408:10:9",
																			"nodeType": "YulFunctionCall",
																			"src": "408:10:9"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "403:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "403:1:9"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "383:3:9",
																"nodeType": "YulBlock",
																"src": "383:3:9",
																"statements": []
															},
															"src": "379:113:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "512:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "512:3:9"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "517:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "517:6:9"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "508:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "508:3:9"
																		},
																		"nativeSrc": "508:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "508:16:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "526:1:9",
																		"nodeType": "YulLiteral",
																		"src": "526:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "501:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "501:6:9"
																},
																"nativeSrc": "501:27:9",
																"nodeType": "YulFunctionCall",
																"src": "501:27:9"
															},
															"nativeSrc": "501:27:9",
															"nodeType": "YulExpressionStatement",
															"src": "501:27:9"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:248:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:9",
														"nodeType": "YulTypedName",
														"src": "331:3:9",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:9",
														"nodeType": "YulTypedName",
														"src": "336:3:9",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:9",
														"nodeType": "YulTypedName",
														"src": "341:6:9",
														"type": ""
													}
												],
												"src": "287:248:9"
											},
											{
												"body": {
													"nativeSrc": "589:54:9",
													"nodeType": "YulBlock",
													"src": "589:54:9",
													"statements": [
														{
															"nativeSrc": "599:38:9",
															"nodeType": "YulAssignment",
															"src": "599:38:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "617:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "617:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "624:2:9",
																				"nodeType": "YulLiteral",
																				"src": "624:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "613:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "613:3:9"
																		},
																		"nativeSrc": "613:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "613:14:9"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "633:2:9",
																				"nodeType": "YulLiteral",
																				"src": "633:2:9",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "629:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "629:3:9"
																		},
																		"nativeSrc": "629:7:9",
																		"nodeType": "YulFunctionCall",
																		"src": "629:7:9"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "609:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "609:3:9"
																},
																"nativeSrc": "609:28:9",
																"nodeType": "YulFunctionCall",
																"src": "609:28:9"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "599:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "599:6:9"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "541:102:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "572:5:9",
														"nodeType": "YulTypedName",
														"src": "572:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "582:6:9",
														"nodeType": "YulTypedName",
														"src": "582:6:9",
														"type": ""
													}
												],
												"src": "541:102:9"
											},
											{
												"body": {
													"nativeSrc": "741:285:9",
													"nodeType": "YulBlock",
													"src": "741:285:9",
													"statements": [
														{
															"nativeSrc": "751:53:9",
															"nodeType": "YulVariableDeclaration",
															"src": "751:53:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "798:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "798:5:9"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "765:32:9",
																	"nodeType": "YulIdentifier",
																	"src": "765:32:9"
																},
																"nativeSrc": "765:39:9",
																"nodeType": "YulFunctionCall",
																"src": "765:39:9"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "755:6:9",
																	"nodeType": "YulTypedName",
																	"src": "755:6:9",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "813:78:9",
															"nodeType": "YulAssignment",
															"src": "813:78:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "879:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "879:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "884:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "884:6:9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "820:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "820:58:9"
																},
																"nativeSrc": "820:71:9",
																"nodeType": "YulFunctionCall",
																"src": "820:71:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "813:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "813:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "939:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "939:5:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "946:4:9",
																				"nodeType": "YulLiteral",
																				"src": "946:4:9",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "935:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:9"
																		},
																		"nativeSrc": "935:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "935:16:9"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "953:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "953:3:9"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "958:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "958:6:9"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "900:34:9",
																	"nodeType": "YulIdentifier",
																	"src": "900:34:9"
																},
																"nativeSrc": "900:65:9",
																"nodeType": "YulFunctionCall",
																"src": "900:65:9"
															},
															"nativeSrc": "900:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "900:65:9"
														},
														{
															"nativeSrc": "974:46:9",
															"nodeType": "YulAssignment",
															"src": "974:46:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "985:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "985:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1012:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "1012:6:9"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "990:21:9",
																			"nodeType": "YulIdentifier",
																			"src": "990:21:9"
																		},
																		"nativeSrc": "990:29:9",
																		"nodeType": "YulFunctionCall",
																		"src": "990:29:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "981:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "981:3:9"
																},
																"nativeSrc": "981:39:9",
																"nodeType": "YulFunctionCall",
																"src": "981:39:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "974:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "974:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "649:377:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "722:5:9",
														"nodeType": "YulTypedName",
														"src": "722:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "729:3:9",
														"nodeType": "YulTypedName",
														"src": "729:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "737:3:9",
														"nodeType": "YulTypedName",
														"src": "737:3:9",
														"type": ""
													}
												],
												"src": "649:377:9"
											},
											{
												"body": {
													"nativeSrc": "1150:195:9",
													"nodeType": "YulBlock",
													"src": "1150:195:9",
													"statements": [
														{
															"nativeSrc": "1160:26:9",
															"nodeType": "YulAssignment",
															"src": "1160:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1172:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "1172:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1183:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1183:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1168:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1168:3:9"
																},
																"nativeSrc": "1168:18:9",
																"nodeType": "YulFunctionCall",
																"src": "1168:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1160:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1160:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1207:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1218:1:9",
																				"nodeType": "YulLiteral",
																				"src": "1218:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1203:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:9"
																		},
																		"nativeSrc": "1203:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1203:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1226:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "1226:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1232:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "1232:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1222:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "1222:3:9"
																		},
																		"nativeSrc": "1222:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1196:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:9"
																},
																"nativeSrc": "1196:47:9",
																"nodeType": "YulFunctionCall",
																"src": "1196:47:9"
															},
															"nativeSrc": "1196:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "1196:47:9"
														},
														{
															"nativeSrc": "1252:86:9",
															"nodeType": "YulAssignment",
															"src": "1252:86:9",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1324:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "1324:6:9"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1333:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "1333:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1260:63:9",
																	"nodeType": "YulIdentifier",
																	"src": "1260:63:9"
																},
																"nativeSrc": "1260:78:9",
																"nodeType": "YulFunctionCall",
																"src": "1260:78:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1252:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "1252:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1032:313:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1122:9:9",
														"nodeType": "YulTypedName",
														"src": "1122:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1134:6:9",
														"nodeType": "YulTypedName",
														"src": "1134:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1145:4:9",
														"nodeType": "YulTypedName",
														"src": "1145:4:9",
														"type": ""
													}
												],
												"src": "1032:313:9"
											},
											{
												"body": {
													"nativeSrc": "1391:35:9",
													"nodeType": "YulBlock",
													"src": "1391:35:9",
													"statements": [
														{
															"nativeSrc": "1401:19:9",
															"nodeType": "YulAssignment",
															"src": "1401:19:9",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1417:2:9",
																		"nodeType": "YulLiteral",
																		"src": "1417:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1411:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "1411:5:9"
																},
																"nativeSrc": "1411:9:9",
																"nodeType": "YulFunctionCall",
																"src": "1411:9:9"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1401:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1401:6:9"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1351:75:9",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1384:6:9",
														"nodeType": "YulTypedName",
														"src": "1384:6:9",
														"type": ""
													}
												],
												"src": "1351:75:9"
											},
											{
												"body": {
													"nativeSrc": "1521:28:9",
													"nodeType": "YulBlock",
													"src": "1521:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1538:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1538:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1541:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1541:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1531:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:9"
																},
																"nativeSrc": "1531:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1531:12:9"
															},
															"nativeSrc": "1531:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1531:12:9"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1432:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1432:117:9"
											},
											{
												"body": {
													"nativeSrc": "1644:28:9",
													"nodeType": "YulBlock",
													"src": "1644:28:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1661:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1661:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1664:1:9",
																		"nodeType": "YulLiteral",
																		"src": "1664:1:9",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1654:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1654:6:9"
																},
																"nativeSrc": "1654:12:9",
																"nodeType": "YulFunctionCall",
																"src": "1654:12:9"
															},
															"nativeSrc": "1654:12:9",
															"nodeType": "YulExpressionStatement",
															"src": "1654:12:9"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1555:117:9",
												"nodeType": "YulFunctionDefinition",
												"src": "1555:117:9"
											},
											{
												"body": {
													"nativeSrc": "1723:81:9",
													"nodeType": "YulBlock",
													"src": "1723:81:9",
													"statements": [
														{
															"nativeSrc": "1733:65:9",
															"nodeType": "YulAssignment",
															"src": "1733:65:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1748:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1748:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1755:42:9",
																		"nodeType": "YulLiteral",
																		"src": "1755:42:9",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1744:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "1744:3:9"
																},
																"nativeSrc": "1744:54:9",
																"nodeType": "YulFunctionCall",
																"src": "1744:54:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1733:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1733:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1678:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1705:5:9",
														"nodeType": "YulTypedName",
														"src": "1705:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1715:7:9",
														"nodeType": "YulTypedName",
														"src": "1715:7:9",
														"type": ""
													}
												],
												"src": "1678:126:9"
											},
											{
												"body": {
													"nativeSrc": "1855:51:9",
													"nodeType": "YulBlock",
													"src": "1855:51:9",
													"statements": [
														{
															"nativeSrc": "1865:35:9",
															"nodeType": "YulAssignment",
															"src": "1865:35:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1894:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "1894:5:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1876:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "1876:17:9"
																},
																"nativeSrc": "1876:24:9",
																"nodeType": "YulFunctionCall",
																"src": "1876:24:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1865:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "1865:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1810:96:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1837:5:9",
														"nodeType": "YulTypedName",
														"src": "1837:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1847:7:9",
														"nodeType": "YulTypedName",
														"src": "1847:7:9",
														"type": ""
													}
												],
												"src": "1810:96:9"
											},
											{
												"body": {
													"nativeSrc": "1955:79:9",
													"nodeType": "YulBlock",
													"src": "1955:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2012:16:9",
																"nodeType": "YulBlock",
																"src": "2012:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2021:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2021:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2024:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2024:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2014:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2014:6:9"
																			},
																			"nativeSrc": "2014:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2014:12:9"
																		},
																		"nativeSrc": "2014:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2014:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1978:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "1978:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2003:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2003:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1985:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "1985:17:9"
																				},
																				"nativeSrc": "1985:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "1985:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1975:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "1975:2:9"
																		},
																		"nativeSrc": "1975:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "1975:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1968:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "1968:6:9"
																},
																"nativeSrc": "1968:43:9",
																"nodeType": "YulFunctionCall",
																"src": "1968:43:9"
															},
															"nativeSrc": "1965:63:9",
															"nodeType": "YulIf",
															"src": "1965:63:9"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1912:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1948:5:9",
														"nodeType": "YulTypedName",
														"src": "1948:5:9",
														"type": ""
													}
												],
												"src": "1912:122:9"
											},
											{
												"body": {
													"nativeSrc": "2092:87:9",
													"nodeType": "YulBlock",
													"src": "2092:87:9",
													"statements": [
														{
															"nativeSrc": "2102:29:9",
															"nodeType": "YulAssignment",
															"src": "2102:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2124:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2124:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2111:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2111:12:9"
																},
																"nativeSrc": "2111:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2111:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2102:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2102:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2167:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2167:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2140:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2140:26:9"
																},
																"nativeSrc": "2140:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2140:33:9"
															},
															"nativeSrc": "2140:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2140:33:9"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2040:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2070:6:9",
														"nodeType": "YulTypedName",
														"src": "2070:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2078:3:9",
														"nodeType": "YulTypedName",
														"src": "2078:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2086:5:9",
														"nodeType": "YulTypedName",
														"src": "2086:5:9",
														"type": ""
													}
												],
												"src": "2040:139:9"
											},
											{
												"body": {
													"nativeSrc": "2230:32:9",
													"nodeType": "YulBlock",
													"src": "2230:32:9",
													"statements": [
														{
															"nativeSrc": "2240:16:9",
															"nodeType": "YulAssignment",
															"src": "2240:16:9",
															"value": {
																"name": "value",
																"nativeSrc": "2251:5:9",
																"nodeType": "YulIdentifier",
																"src": "2251:5:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2240:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "2240:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2185:77:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2212:5:9",
														"nodeType": "YulTypedName",
														"src": "2212:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2222:7:9",
														"nodeType": "YulTypedName",
														"src": "2222:7:9",
														"type": ""
													}
												],
												"src": "2185:77:9"
											},
											{
												"body": {
													"nativeSrc": "2311:79:9",
													"nodeType": "YulBlock",
													"src": "2311:79:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2368:16:9",
																"nodeType": "YulBlock",
																"src": "2368:16:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2377:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2377:1:9",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2380:1:9",
																					"nodeType": "YulLiteral",
																					"src": "2380:1:9",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2370:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "2370:6:9"
																			},
																			"nativeSrc": "2370:12:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2370:12:9"
																		},
																		"nativeSrc": "2370:12:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2370:12:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2334:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "2334:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2359:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "2359:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2341:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "2341:17:9"
																				},
																				"nativeSrc": "2341:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2341:24:9"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2331:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "2331:2:9"
																		},
																		"nativeSrc": "2331:35:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2331:35:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2324:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "2324:6:9"
																},
																"nativeSrc": "2324:43:9",
																"nodeType": "YulFunctionCall",
																"src": "2324:43:9"
															},
															"nativeSrc": "2321:63:9",
															"nodeType": "YulIf",
															"src": "2321:63:9"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2268:122:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2304:5:9",
														"nodeType": "YulTypedName",
														"src": "2304:5:9",
														"type": ""
													}
												],
												"src": "2268:122:9"
											},
											{
												"body": {
													"nativeSrc": "2448:87:9",
													"nodeType": "YulBlock",
													"src": "2448:87:9",
													"statements": [
														{
															"nativeSrc": "2458:29:9",
															"nodeType": "YulAssignment",
															"src": "2458:29:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2480:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "2480:6:9"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2467:12:9",
																	"nodeType": "YulIdentifier",
																	"src": "2467:12:9"
																},
																"nativeSrc": "2467:20:9",
																"nodeType": "YulFunctionCall",
																"src": "2467:20:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2458:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "2458:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2523:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "2523:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2496:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "2496:26:9"
																},
																"nativeSrc": "2496:33:9",
																"nodeType": "YulFunctionCall",
																"src": "2496:33:9"
															},
															"nativeSrc": "2496:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "2496:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2396:139:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2426:6:9",
														"nodeType": "YulTypedName",
														"src": "2426:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2434:3:9",
														"nodeType": "YulTypedName",
														"src": "2434:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2442:5:9",
														"nodeType": "YulTypedName",
														"src": "2442:5:9",
														"type": ""
													}
												],
												"src": "2396:139:9"
											},
											{
												"body": {
													"nativeSrc": "2624:391:9",
													"nodeType": "YulBlock",
													"src": "2624:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "2670:83:9",
																"nodeType": "YulBlock",
																"src": "2670:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2672:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "2672:77:9"
																			},
																			"nativeSrc": "2672:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "2672:79:9"
																		},
																		"nativeSrc": "2672:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "2672:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2645:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2645:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2654:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "2654:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2641:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "2641:3:9"
																		},
																		"nativeSrc": "2641:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2641:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2666:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2666:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2637:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "2637:3:9"
																},
																"nativeSrc": "2637:32:9",
																"nodeType": "YulFunctionCall",
																"src": "2637:32:9"
															},
															"nativeSrc": "2634:119:9",
															"nodeType": "YulIf",
															"src": "2634:119:9"
														},
														{
															"nativeSrc": "2763:117:9",
															"nodeType": "YulBlock",
															"src": "2763:117:9",
															"statements": [
																{
																	"nativeSrc": "2778:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2778:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2792:1:9",
																		"nodeType": "YulLiteral",
																		"src": "2792:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2782:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2782:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2807:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2807:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2842:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2842:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2853:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2853:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2838:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2838:3:9"
																				},
																				"nativeSrc": "2838:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2838:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2862:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2862:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2817:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2817:20:9"
																		},
																		"nativeSrc": "2817:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2817:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2807:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2807:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2890:118:9",
															"nodeType": "YulBlock",
															"src": "2890:118:9",
															"statements": [
																{
																	"nativeSrc": "2905:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2905:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2919:2:9",
																		"nodeType": "YulLiteral",
																		"src": "2919:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2909:6:9",
																			"nodeType": "YulTypedName",
																			"src": "2909:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2935:63:9",
																	"nodeType": "YulAssignment",
																	"src": "2935:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2970:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "2970:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2981:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "2981:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2966:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "2966:3:9"
																				},
																				"nativeSrc": "2966:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "2966:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2990:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "2990:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2945:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "2945:20:9"
																		},
																		"nativeSrc": "2945:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "2945:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2935:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "2935:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2541:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2586:9:9",
														"nodeType": "YulTypedName",
														"src": "2586:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2597:7:9",
														"nodeType": "YulTypedName",
														"src": "2597:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2609:6:9",
														"nodeType": "YulTypedName",
														"src": "2609:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2617:6:9",
														"nodeType": "YulTypedName",
														"src": "2617:6:9",
														"type": ""
													}
												],
												"src": "2541:474:9"
											},
											{
												"body": {
													"nativeSrc": "3063:48:9",
													"nodeType": "YulBlock",
													"src": "3063:48:9",
													"statements": [
														{
															"nativeSrc": "3073:32:9",
															"nodeType": "YulAssignment",
															"src": "3073:32:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3098:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3098:5:9"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3091:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "3091:6:9"
																		},
																		"nativeSrc": "3091:13:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3091:13:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3084:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3084:6:9"
																},
																"nativeSrc": "3084:21:9",
																"nodeType": "YulFunctionCall",
																"src": "3084:21:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3073:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "3073:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3021:90:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3045:5:9",
														"nodeType": "YulTypedName",
														"src": "3045:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3055:7:9",
														"nodeType": "YulTypedName",
														"src": "3055:7:9",
														"type": ""
													}
												],
												"src": "3021:90:9"
											},
											{
												"body": {
													"nativeSrc": "3176:50:9",
													"nodeType": "YulBlock",
													"src": "3176:50:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3193:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3193:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3213:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3213:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3198:14:9",
																			"nodeType": "YulIdentifier",
																			"src": "3198:14:9"
																		},
																		"nativeSrc": "3198:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:21:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3186:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3186:6:9"
																},
																"nativeSrc": "3186:34:9",
																"nodeType": "YulFunctionCall",
																"src": "3186:34:9"
															},
															"nativeSrc": "3186:34:9",
															"nodeType": "YulExpressionStatement",
															"src": "3186:34:9"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3117:109:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3164:5:9",
														"nodeType": "YulTypedName",
														"src": "3164:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3171:3:9",
														"nodeType": "YulTypedName",
														"src": "3171:3:9",
														"type": ""
													}
												],
												"src": "3117:109:9"
											},
											{
												"body": {
													"nativeSrc": "3324:118:9",
													"nodeType": "YulBlock",
													"src": "3324:118:9",
													"statements": [
														{
															"nativeSrc": "3334:26:9",
															"nodeType": "YulAssignment",
															"src": "3334:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3346:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3346:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3357:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3357:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3342:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3342:3:9"
																},
																"nativeSrc": "3342:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3342:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3334:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3334:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3408:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3408:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3421:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3421:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3432:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3432:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3417:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3417:3:9"
																		},
																		"nativeSrc": "3417:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3417:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3370:37:9",
																	"nodeType": "YulIdentifier",
																	"src": "3370:37:9"
																},
																"nativeSrc": "3370:65:9",
																"nodeType": "YulFunctionCall",
																"src": "3370:65:9"
															},
															"nativeSrc": "3370:65:9",
															"nodeType": "YulExpressionStatement",
															"src": "3370:65:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3232:210:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3296:9:9",
														"nodeType": "YulTypedName",
														"src": "3296:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3308:6:9",
														"nodeType": "YulTypedName",
														"src": "3308:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3319:4:9",
														"nodeType": "YulTypedName",
														"src": "3319:4:9",
														"type": ""
													}
												],
												"src": "3232:210:9"
											},
											{
												"body": {
													"nativeSrc": "3513:53:9",
													"nodeType": "YulBlock",
													"src": "3513:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3530:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "3530:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3553:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "3553:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3535:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "3535:17:9"
																		},
																		"nativeSrc": "3535:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3535:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3523:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "3523:6:9"
																},
																"nativeSrc": "3523:37:9",
																"nodeType": "YulFunctionCall",
																"src": "3523:37:9"
															},
															"nativeSrc": "3523:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "3523:37:9"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3448:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3501:5:9",
														"nodeType": "YulTypedName",
														"src": "3501:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3508:3:9",
														"nodeType": "YulTypedName",
														"src": "3508:3:9",
														"type": ""
													}
												],
												"src": "3448:118:9"
											},
											{
												"body": {
													"nativeSrc": "3670:124:9",
													"nodeType": "YulBlock",
													"src": "3670:124:9",
													"statements": [
														{
															"nativeSrc": "3680:26:9",
															"nodeType": "YulAssignment",
															"src": "3680:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3703:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3688:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3688:3:9"
																},
																"nativeSrc": "3688:18:9",
																"nodeType": "YulFunctionCall",
																"src": "3688:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3680:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "3680:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3760:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "3760:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3784:1:9",
																				"nodeType": "YulLiteral",
																				"src": "3784:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3769:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:9"
																		},
																		"nativeSrc": "3769:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3769:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3716:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "3716:43:9"
																},
																"nativeSrc": "3716:71:9",
																"nodeType": "YulFunctionCall",
																"src": "3716:71:9"
															},
															"nativeSrc": "3716:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "3716:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3572:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3642:9:9",
														"nodeType": "YulTypedName",
														"src": "3642:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3654:6:9",
														"nodeType": "YulTypedName",
														"src": "3654:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3665:4:9",
														"nodeType": "YulTypedName",
														"src": "3665:4:9",
														"type": ""
													}
												],
												"src": "3572:222:9"
											},
											{
												"body": {
													"nativeSrc": "3900:519:9",
													"nodeType": "YulBlock",
													"src": "3900:519:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "3946:83:9",
																"nodeType": "YulBlock",
																"src": "3946:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3948:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "3948:77:9"
																			},
																			"nativeSrc": "3948:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "3948:79:9"
																		},
																		"nativeSrc": "3948:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "3948:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3921:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "3921:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3930:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "3930:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3917:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "3917:3:9"
																		},
																		"nativeSrc": "3917:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "3917:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3942:2:9",
																		"nodeType": "YulLiteral",
																		"src": "3942:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3913:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "3913:3:9"
																},
																"nativeSrc": "3913:32:9",
																"nodeType": "YulFunctionCall",
																"src": "3913:32:9"
															},
															"nativeSrc": "3910:119:9",
															"nodeType": "YulIf",
															"src": "3910:119:9"
														},
														{
															"nativeSrc": "4039:117:9",
															"nodeType": "YulBlock",
															"src": "4039:117:9",
															"statements": [
																{
																	"nativeSrc": "4054:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4054:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4068:1:9",
																		"nodeType": "YulLiteral",
																		"src": "4068:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4058:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4058:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4083:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4083:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4118:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4118:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4129:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4129:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4114:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4114:3:9"
																				},
																				"nativeSrc": "4114:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4114:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4138:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4138:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4093:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4093:20:9"
																		},
																		"nativeSrc": "4093:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4083:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4083:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4166:118:9",
															"nodeType": "YulBlock",
															"src": "4166:118:9",
															"statements": [
																{
																	"nativeSrc": "4181:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4181:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4195:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4195:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4185:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4185:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4211:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4211:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4246:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4246:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4257:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4257:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4242:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4242:3:9"
																				},
																				"nativeSrc": "4242:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4242:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4266:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4266:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4221:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4221:20:9"
																		},
																		"nativeSrc": "4221:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4221:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4211:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4211:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4294:118:9",
															"nodeType": "YulBlock",
															"src": "4294:118:9",
															"statements": [
																{
																	"nativeSrc": "4309:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4309:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4323:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4323:2:9",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4313:6:9",
																			"nodeType": "YulTypedName",
																			"src": "4313:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4339:63:9",
																	"nodeType": "YulAssignment",
																	"src": "4339:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4374:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "4374:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4385:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "4385:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4370:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4370:3:9"
																				},
																				"nativeSrc": "4370:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4370:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4394:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4394:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4349:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "4349:20:9"
																		},
																		"nativeSrc": "4349:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4349:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4339:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4339:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3800:619:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3854:9:9",
														"nodeType": "YulTypedName",
														"src": "3854:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3865:7:9",
														"nodeType": "YulTypedName",
														"src": "3865:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3877:6:9",
														"nodeType": "YulTypedName",
														"src": "3877:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3885:6:9",
														"nodeType": "YulTypedName",
														"src": "3885:6:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3893:6:9",
														"nodeType": "YulTypedName",
														"src": "3893:6:9",
														"type": ""
													}
												],
												"src": "3800:619:9"
											},
											{
												"body": {
													"nativeSrc": "4468:43:9",
													"nodeType": "YulBlock",
													"src": "4468:43:9",
													"statements": [
														{
															"nativeSrc": "4478:27:9",
															"nodeType": "YulAssignment",
															"src": "4478:27:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4500:4:9",
																		"nodeType": "YulLiteral",
																		"src": "4500:4:9",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4489:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4489:3:9"
																},
																"nativeSrc": "4489:16:9",
																"nodeType": "YulFunctionCall",
																"src": "4489:16:9"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4478:7:9",
																	"nodeType": "YulIdentifier",
																	"src": "4478:7:9"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4425:86:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4450:5:9",
														"nodeType": "YulTypedName",
														"src": "4450:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4460:7:9",
														"nodeType": "YulTypedName",
														"src": "4460:7:9",
														"type": ""
													}
												],
												"src": "4425:86:9"
											},
											{
												"body": {
													"nativeSrc": "4578:51:9",
													"nodeType": "YulBlock",
													"src": "4578:51:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4595:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "4595:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4616:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "4616:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4600:15:9",
																			"nodeType": "YulIdentifier",
																			"src": "4600:15:9"
																		},
																		"nativeSrc": "4600:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4600:22:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4588:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "4588:6:9"
																},
																"nativeSrc": "4588:35:9",
																"nodeType": "YulFunctionCall",
																"src": "4588:35:9"
															},
															"nativeSrc": "4588:35:9",
															"nodeType": "YulExpressionStatement",
															"src": "4588:35:9"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4517:112:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4566:5:9",
														"nodeType": "YulTypedName",
														"src": "4566:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4573:3:9",
														"nodeType": "YulTypedName",
														"src": "4573:3:9",
														"type": ""
													}
												],
												"src": "4517:112:9"
											},
											{
												"body": {
													"nativeSrc": "4729:120:9",
													"nodeType": "YulBlock",
													"src": "4729:120:9",
													"statements": [
														{
															"nativeSrc": "4739:26:9",
															"nodeType": "YulAssignment",
															"src": "4739:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4751:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "4751:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4762:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4762:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4747:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4747:3:9"
																},
																"nativeSrc": "4747:18:9",
																"nodeType": "YulFunctionCall",
																"src": "4747:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4739:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "4739:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4815:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "4815:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4828:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4828:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4839:1:9",
																				"nodeType": "YulLiteral",
																				"src": "4839:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4824:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4824:3:9"
																		},
																		"nativeSrc": "4824:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4824:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4775:39:9",
																	"nodeType": "YulIdentifier",
																	"src": "4775:39:9"
																},
																"nativeSrc": "4775:67:9",
																"nodeType": "YulFunctionCall",
																"src": "4775:67:9"
															},
															"nativeSrc": "4775:67:9",
															"nodeType": "YulExpressionStatement",
															"src": "4775:67:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4635:214:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4701:9:9",
														"nodeType": "YulTypedName",
														"src": "4701:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4713:6:9",
														"nodeType": "YulTypedName",
														"src": "4713:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4724:4:9",
														"nodeType": "YulTypedName",
														"src": "4724:4:9",
														"type": ""
													}
												],
												"src": "4635:214:9"
											},
											{
												"body": {
													"nativeSrc": "4921:263:9",
													"nodeType": "YulBlock",
													"src": "4921:263:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "4967:83:9",
																"nodeType": "YulBlock",
																"src": "4967:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4969:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "4969:77:9"
																			},
																			"nativeSrc": "4969:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "4969:79:9"
																		},
																		"nativeSrc": "4969:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "4969:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4942:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "4942:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4951:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "4951:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4938:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4938:3:9"
																		},
																		"nativeSrc": "4938:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4938:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4963:2:9",
																		"nodeType": "YulLiteral",
																		"src": "4963:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4934:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "4934:3:9"
																},
																"nativeSrc": "4934:32:9",
																"nodeType": "YulFunctionCall",
																"src": "4934:32:9"
															},
															"nativeSrc": "4931:119:9",
															"nodeType": "YulIf",
															"src": "4931:119:9"
														},
														{
															"nativeSrc": "5060:117:9",
															"nodeType": "YulBlock",
															"src": "5060:117:9",
															"statements": [
																{
																	"nativeSrc": "5075:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5075:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5089:1:9",
																		"nodeType": "YulLiteral",
																		"src": "5089:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5079:6:9",
																			"nodeType": "YulTypedName",
																			"src": "5079:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5104:63:9",
																	"nodeType": "YulAssignment",
																	"src": "5104:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5139:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5139:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5150:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "5150:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5135:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "5135:3:9"
																				},
																				"nativeSrc": "5135:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5135:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5159:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "5159:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5114:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "5114:20:9"
																		},
																		"nativeSrc": "5114:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5114:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5104:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5104:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4855:329:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4891:9:9",
														"nodeType": "YulTypedName",
														"src": "4891:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4902:7:9",
														"nodeType": "YulTypedName",
														"src": "4902:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4914:6:9",
														"nodeType": "YulTypedName",
														"src": "4914:6:9",
														"type": ""
													}
												],
												"src": "4855:329:9"
											},
											{
												"body": {
													"nativeSrc": "5255:53:9",
													"nodeType": "YulBlock",
													"src": "5255:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5272:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "5272:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5295:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5295:5:9"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5277:17:9",
																			"nodeType": "YulIdentifier",
																			"src": "5277:17:9"
																		},
																		"nativeSrc": "5277:24:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5277:24:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5265:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "5265:6:9"
																},
																"nativeSrc": "5265:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5265:37:9"
															},
															"nativeSrc": "5265:37:9",
															"nodeType": "YulExpressionStatement",
															"src": "5265:37:9"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5190:118:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5243:5:9",
														"nodeType": "YulTypedName",
														"src": "5243:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5250:3:9",
														"nodeType": "YulTypedName",
														"src": "5250:3:9",
														"type": ""
													}
												],
												"src": "5190:118:9"
											},
											{
												"body": {
													"nativeSrc": "5412:124:9",
													"nodeType": "YulBlock",
													"src": "5412:124:9",
													"statements": [
														{
															"nativeSrc": "5422:26:9",
															"nodeType": "YulAssignment",
															"src": "5422:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5434:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "5434:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5445:2:9",
																		"nodeType": "YulLiteral",
																		"src": "5445:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5430:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5430:3:9"
																},
																"nativeSrc": "5430:18:9",
																"nodeType": "YulFunctionCall",
																"src": "5430:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5422:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "5422:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5502:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5515:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5515:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5526:1:9",
																				"nodeType": "YulLiteral",
																				"src": "5526:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5511:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5511:3:9"
																		},
																		"nativeSrc": "5511:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5511:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5458:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "5458:43:9"
																},
																"nativeSrc": "5458:71:9",
																"nodeType": "YulFunctionCall",
																"src": "5458:71:9"
															},
															"nativeSrc": "5458:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "5458:71:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5314:222:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5384:9:9",
														"nodeType": "YulTypedName",
														"src": "5384:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5396:6:9",
														"nodeType": "YulTypedName",
														"src": "5396:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5407:4:9",
														"nodeType": "YulTypedName",
														"src": "5407:4:9",
														"type": ""
													}
												],
												"src": "5314:222:9"
											},
											{
												"body": {
													"nativeSrc": "5574:28:9",
													"nodeType": "YulBlock",
													"src": "5574:28:9",
													"statements": [
														{
															"nativeSrc": "5584:12:9",
															"nodeType": "YulAssignment",
															"src": "5584:12:9",
															"value": {
																"name": "value",
																"nativeSrc": "5591:5:9",
																"nodeType": "YulIdentifier",
																"src": "5591:5:9"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5584:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "5584:3:9"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5542:60:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5560:5:9",
														"nodeType": "YulTypedName",
														"src": "5560:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5570:3:9",
														"nodeType": "YulTypedName",
														"src": "5570:3:9",
														"type": ""
													}
												],
												"src": "5542:60:9"
											},
											{
												"body": {
													"nativeSrc": "5668:82:9",
													"nodeType": "YulBlock",
													"src": "5668:82:9",
													"statements": [
														{
															"nativeSrc": "5678:66:9",
															"nodeType": "YulAssignment",
															"src": "5678:66:9",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5736:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5736:5:9"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5718:17:9",
																					"nodeType": "YulIdentifier",
																					"src": "5718:17:9"
																				},
																				"nativeSrc": "5718:24:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5718:24:9"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5709:8:9",
																			"nodeType": "YulIdentifier",
																			"src": "5709:8:9"
																		},
																		"nativeSrc": "5709:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5709:34:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5691:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "5691:17:9"
																},
																"nativeSrc": "5691:53:9",
																"nodeType": "YulFunctionCall",
																"src": "5691:53:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5678:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5678:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5608:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5648:5:9",
														"nodeType": "YulTypedName",
														"src": "5648:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5658:9:9",
														"nodeType": "YulTypedName",
														"src": "5658:9:9",
														"type": ""
													}
												],
												"src": "5608:142:9"
											},
											{
												"body": {
													"nativeSrc": "5816:66:9",
													"nodeType": "YulBlock",
													"src": "5816:66:9",
													"statements": [
														{
															"nativeSrc": "5826:50:9",
															"nodeType": "YulAssignment",
															"src": "5826:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5870:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "5870:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5839:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5839:30:9"
																},
																"nativeSrc": "5839:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5839:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5826:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5826:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5756:126:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5796:5:9",
														"nodeType": "YulTypedName",
														"src": "5796:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5806:9:9",
														"nodeType": "YulTypedName",
														"src": "5806:9:9",
														"type": ""
													}
												],
												"src": "5756:126:9"
											},
											{
												"body": {
													"nativeSrc": "5964:66:9",
													"nodeType": "YulBlock",
													"src": "5964:66:9",
													"statements": [
														{
															"nativeSrc": "5974:50:9",
															"nodeType": "YulAssignment",
															"src": "5974:50:9",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6018:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "6018:5:9"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5987:30:9",
																	"nodeType": "YulIdentifier",
																	"src": "5987:30:9"
																},
																"nativeSrc": "5987:37:9",
																"nodeType": "YulFunctionCall",
																"src": "5987:37:9"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5974:9:9",
																	"nodeType": "YulIdentifier",
																	"src": "5974:9:9"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1020_to_t_address",
												"nativeSrc": "5888:142:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5944:5:9",
														"nodeType": "YulTypedName",
														"src": "5944:5:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5954:9:9",
														"nodeType": "YulTypedName",
														"src": "5954:9:9",
														"type": ""
													}
												],
												"src": "5888:142:9"
											},
											{
												"body": {
													"nativeSrc": "6117:82:9",
													"nodeType": "YulBlock",
													"src": "6117:82:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6134:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "6134:3:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6186:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6186:5:9"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1020_to_t_address",
																			"nativeSrc": "6139:46:9",
																			"nodeType": "YulIdentifier",
																			"src": "6139:46:9"
																		},
																		"nativeSrc": "6139:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6139:53:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6127:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6127:6:9"
																},
																"nativeSrc": "6127:66:9",
																"nodeType": "YulFunctionCall",
																"src": "6127:66:9"
															},
															"nativeSrc": "6127:66:9",
															"nodeType": "YulExpressionStatement",
															"src": "6127:66:9"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1020_to_t_address_fromStack",
												"nativeSrc": "6036:163:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6105:5:9",
														"nodeType": "YulTypedName",
														"src": "6105:5:9",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6112:3:9",
														"nodeType": "YulTypedName",
														"src": "6112:3:9",
														"type": ""
													}
												],
												"src": "6036:163:9"
											},
											{
												"body": {
													"nativeSrc": "6319:140:9",
													"nodeType": "YulBlock",
													"src": "6319:140:9",
													"statements": [
														{
															"nativeSrc": "6329:26:9",
															"nodeType": "YulAssignment",
															"src": "6329:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6341:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "6341:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6352:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6352:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6337:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6337:3:9"
																},
																"nativeSrc": "6337:18:9",
																"nodeType": "YulFunctionCall",
																"src": "6337:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6329:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "6329:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6425:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "6425:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6438:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6438:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6449:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6449:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6434:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6434:3:9"
																		},
																		"nativeSrc": "6434:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6434:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1020_to_t_address_fromStack",
																	"nativeSrc": "6365:59:9",
																	"nodeType": "YulIdentifier",
																	"src": "6365:59:9"
																},
																"nativeSrc": "6365:87:9",
																"nodeType": "YulFunctionCall",
																"src": "6365:87:9"
															},
															"nativeSrc": "6365:87:9",
															"nodeType": "YulExpressionStatement",
															"src": "6365:87:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1020__to_t_address__fromStack_reversed",
												"nativeSrc": "6205:254:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6291:9:9",
														"nodeType": "YulTypedName",
														"src": "6291:9:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6303:6:9",
														"nodeType": "YulTypedName",
														"src": "6303:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6314:4:9",
														"nodeType": "YulTypedName",
														"src": "6314:4:9",
														"type": ""
													}
												],
												"src": "6205:254:9"
											},
											{
												"body": {
													"nativeSrc": "6548:391:9",
													"nodeType": "YulBlock",
													"src": "6548:391:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "6594:83:9",
																"nodeType": "YulBlock",
																"src": "6594:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6596:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "6596:77:9"
																			},
																			"nativeSrc": "6596:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "6596:79:9"
																		},
																		"nativeSrc": "6596:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "6596:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6569:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6569:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6578:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "6578:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6565:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6565:3:9"
																		},
																		"nativeSrc": "6565:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6565:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6590:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6590:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6561:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "6561:3:9"
																},
																"nativeSrc": "6561:32:9",
																"nodeType": "YulFunctionCall",
																"src": "6561:32:9"
															},
															"nativeSrc": "6558:119:9",
															"nodeType": "YulIf",
															"src": "6558:119:9"
														},
														{
															"nativeSrc": "6687:117:9",
															"nodeType": "YulBlock",
															"src": "6687:117:9",
															"statements": [
																{
																	"nativeSrc": "6702:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6702:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6716:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6716:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6706:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6706:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6731:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6731:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6766:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6766:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6777:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6777:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6762:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6762:3:9"
																				},
																				"nativeSrc": "6762:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6762:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6786:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6786:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6741:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6741:20:9"
																		},
																		"nativeSrc": "6741:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6741:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6731:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6731:6:9"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6814:118:9",
															"nodeType": "YulBlock",
															"src": "6814:118:9",
															"statements": [
																{
																	"nativeSrc": "6829:16:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6829:16:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6843:2:9",
																		"nodeType": "YulLiteral",
																		"src": "6843:2:9",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6833:6:9",
																			"nodeType": "YulTypedName",
																			"src": "6833:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6859:63:9",
																	"nodeType": "YulAssignment",
																	"src": "6859:63:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6894:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "6894:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6905:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "6905:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6890:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6890:3:9"
																				},
																				"nativeSrc": "6890:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6890:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6914:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "6914:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6869:20:9",
																			"nodeType": "YulIdentifier",
																			"src": "6869:20:9"
																		},
																		"nativeSrc": "6869:53:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6869:53:9"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6859:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "6859:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6465:474:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6510:9:9",
														"nodeType": "YulTypedName",
														"src": "6510:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6521:7:9",
														"nodeType": "YulTypedName",
														"src": "6521:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6533:6:9",
														"nodeType": "YulTypedName",
														"src": "6533:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6541:6:9",
														"nodeType": "YulTypedName",
														"src": "6541:6:9",
														"type": ""
													}
												],
												"src": "6465:474:9"
											},
											{
												"body": {
													"nativeSrc": "6973:152:9",
													"nodeType": "YulBlock",
													"src": "6973:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6990:1:9",
																		"nodeType": "YulLiteral",
																		"src": "6990:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6993:77:9",
																		"nodeType": "YulLiteral",
																		"src": "6993:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6983:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "6983:6:9"
																},
																"nativeSrc": "6983:88:9",
																"nodeType": "YulFunctionCall",
																"src": "6983:88:9"
															},
															"nativeSrc": "6983:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "6983:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7087:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7087:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7090:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7090:4:9",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7080:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7080:6:9"
																},
																"nativeSrc": "7080:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7080:15:9"
															},
															"nativeSrc": "7080:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7080:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7111:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7111:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7114:4:9",
																		"nodeType": "YulLiteral",
																		"src": "7114:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7104:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7104:6:9"
																},
																"nativeSrc": "7104:15:9",
																"nodeType": "YulFunctionCall",
																"src": "7104:15:9"
															},
															"nativeSrc": "7104:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "7104:15:9"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "6945:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "6945:180:9"
											},
											{
												"body": {
													"nativeSrc": "7182:269:9",
													"nodeType": "YulBlock",
													"src": "7182:269:9",
													"statements": [
														{
															"nativeSrc": "7192:22:9",
															"nodeType": "YulAssignment",
															"src": "7192:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7206:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7206:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7212:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7212:1:9",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7202:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7202:3:9"
																},
																"nativeSrc": "7202:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7202:12:9"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7192:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7192:6:9"
																}
															]
														},
														{
															"nativeSrc": "7223:38:9",
															"nodeType": "YulVariableDeclaration",
															"src": "7223:38:9",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7253:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "7253:4:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7259:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7259:1:9",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7249:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7249:3:9"
																},
																"nativeSrc": "7249:12:9",
																"nodeType": "YulFunctionCall",
																"src": "7249:12:9"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7227:18:9",
																	"nodeType": "YulTypedName",
																	"src": "7227:18:9",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7300:51:9",
																"nodeType": "YulBlock",
																"src": "7300:51:9",
																"statements": [
																	{
																		"nativeSrc": "7314:27:9",
																		"nodeType": "YulAssignment",
																		"src": "7314:27:9",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7328:6:9",
																					"nodeType": "YulIdentifier",
																					"src": "7328:6:9"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7336:4:9",
																					"nodeType": "YulLiteral",
																					"src": "7336:4:9",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7324:3:9",
																				"nodeType": "YulIdentifier",
																				"src": "7324:3:9"
																			},
																			"nativeSrc": "7324:17:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7324:17:9"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7314:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7314:6:9"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7280:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7280:18:9"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7273:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "7273:6:9"
																},
																"nativeSrc": "7273:26:9",
																"nodeType": "YulFunctionCall",
																"src": "7273:26:9"
															},
															"nativeSrc": "7270:81:9",
															"nodeType": "YulIf",
															"src": "7270:81:9"
														},
														{
															"body": {
																"nativeSrc": "7403:42:9",
																"nodeType": "YulBlock",
																"src": "7403:42:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7417:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:9"
																			},
																			"nativeSrc": "7417:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:9"
																		},
																		"nativeSrc": "7417:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7367:18:9",
																		"nodeType": "YulIdentifier",
																		"src": "7367:18:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7390:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "7390:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7398:2:9",
																				"nodeType": "YulLiteral",
																				"src": "7398:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7387:2:9",
																			"nodeType": "YulIdentifier",
																			"src": "7387:2:9"
																		},
																		"nativeSrc": "7387:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7387:14:9"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7364:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "7364:2:9"
																},
																"nativeSrc": "7364:38:9",
																"nodeType": "YulFunctionCall",
																"src": "7364:38:9"
															},
															"nativeSrc": "7361:84:9",
															"nodeType": "YulIf",
															"src": "7361:84:9"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7131:320:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7166:4:9",
														"nodeType": "YulTypedName",
														"src": "7166:4:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7175:6:9",
														"nodeType": "YulTypedName",
														"src": "7175:6:9",
														"type": ""
													}
												],
												"src": "7131:320:9"
											},
											{
												"body": {
													"nativeSrc": "7520:80:9",
													"nodeType": "YulBlock",
													"src": "7520:80:9",
													"statements": [
														{
															"nativeSrc": "7530:22:9",
															"nodeType": "YulAssignment",
															"src": "7530:22:9",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7545:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "7545:6:9"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7539:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7539:5:9"
																},
																"nativeSrc": "7539:13:9",
																"nodeType": "YulFunctionCall",
																"src": "7539:13:9"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7530:5:9",
																	"nodeType": "YulIdentifier",
																	"src": "7530:5:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7588:5:9",
																		"nodeType": "YulIdentifier",
																		"src": "7588:5:9"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7561:26:9",
																	"nodeType": "YulIdentifier",
																	"src": "7561:26:9"
																},
																"nativeSrc": "7561:33:9",
																"nodeType": "YulFunctionCall",
																"src": "7561:33:9"
															},
															"nativeSrc": "7561:33:9",
															"nodeType": "YulExpressionStatement",
															"src": "7561:33:9"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "7457:143:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7498:6:9",
														"nodeType": "YulTypedName",
														"src": "7498:6:9",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7506:3:9",
														"nodeType": "YulTypedName",
														"src": "7506:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7514:5:9",
														"nodeType": "YulTypedName",
														"src": "7514:5:9",
														"type": ""
													}
												],
												"src": "7457:143:9"
											},
											{
												"body": {
													"nativeSrc": "7683:274:9",
													"nodeType": "YulBlock",
													"src": "7683:274:9",
													"statements": [
														{
															"body": {
																"nativeSrc": "7729:83:9",
																"nodeType": "YulBlock",
																"src": "7729:83:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7731:77:9",
																				"nodeType": "YulIdentifier",
																				"src": "7731:77:9"
																			},
																			"nativeSrc": "7731:79:9",
																			"nodeType": "YulFunctionCall",
																			"src": "7731:79:9"
																		},
																		"nativeSrc": "7731:79:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "7731:79:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7704:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7704:7:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7713:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "7713:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "7700:3:9"
																		},
																		"nativeSrc": "7700:23:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7700:23:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7725:2:9",
																		"nodeType": "YulLiteral",
																		"src": "7725:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7696:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "7696:3:9"
																},
																"nativeSrc": "7696:32:9",
																"nodeType": "YulFunctionCall",
																"src": "7696:32:9"
															},
															"nativeSrc": "7693:119:9",
															"nodeType": "YulIf",
															"src": "7693:119:9"
														},
														{
															"nativeSrc": "7822:128:9",
															"nodeType": "YulBlock",
															"src": "7822:128:9",
															"statements": [
																{
																	"nativeSrc": "7837:15:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7837:15:9",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7851:1:9",
																		"nodeType": "YulLiteral",
																		"src": "7851:1:9",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7841:6:9",
																			"nodeType": "YulTypedName",
																			"src": "7841:6:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7866:74:9",
																	"nodeType": "YulAssignment",
																	"src": "7866:74:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7912:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "7912:9:9"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7923:6:9",
																						"nodeType": "YulIdentifier",
																						"src": "7923:6:9"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7908:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "7908:3:9"
																				},
																				"nativeSrc": "7908:22:9",
																				"nodeType": "YulFunctionCall",
																				"src": "7908:22:9"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7932:7:9",
																				"nodeType": "YulIdentifier",
																				"src": "7932:7:9"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "7876:31:9",
																			"nodeType": "YulIdentifier",
																			"src": "7876:31:9"
																		},
																		"nativeSrc": "7876:64:9",
																		"nodeType": "YulFunctionCall",
																		"src": "7876:64:9"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7866:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "7866:6:9"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "7606:351:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7653:9:9",
														"nodeType": "YulTypedName",
														"src": "7653:9:9",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7664:7:9",
														"nodeType": "YulTypedName",
														"src": "7664:7:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7676:6:9",
														"nodeType": "YulTypedName",
														"src": "7676:6:9",
														"type": ""
													}
												],
												"src": "7606:351:9"
											},
											{
												"body": {
													"nativeSrc": "8069:73:9",
													"nodeType": "YulBlock",
													"src": "8069:73:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8091:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "8091:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8099:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8099:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8087:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8087:3:9"
																		},
																		"nativeSrc": "8087:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8087:14:9"
																	},
																	{
																		"hexValue": "596f75206d757374206f776e206174206c65617374206f6e65204e4654",
																		"kind": "string",
																		"nativeSrc": "8103:31:9",
																		"nodeType": "YulLiteral",
																		"src": "8103:31:9",
																		"type": "",
																		"value": "You must own at least one NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8080:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8080:6:9"
																},
																"nativeSrc": "8080:55:9",
																"nodeType": "YulFunctionCall",
																"src": "8080:55:9"
															},
															"nativeSrc": "8080:55:9",
															"nodeType": "YulExpressionStatement",
															"src": "8080:55:9"
														}
													]
												},
												"name": "store_literal_in_memory_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c",
												"nativeSrc": "7963:179:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8061:6:9",
														"nodeType": "YulTypedName",
														"src": "8061:6:9",
														"type": ""
													}
												],
												"src": "7963:179:9"
											},
											{
												"body": {
													"nativeSrc": "8294:220:9",
													"nodeType": "YulBlock",
													"src": "8294:220:9",
													"statements": [
														{
															"nativeSrc": "8304:74:9",
															"nodeType": "YulAssignment",
															"src": "8304:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8370:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8370:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8375:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8375:2:9",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8311:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "8311:58:9"
																},
																"nativeSrc": "8311:67:9",
																"nodeType": "YulFunctionCall",
																"src": "8311:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8304:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8304:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8476:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8476:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c",
																	"nativeSrc": "8387:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "8387:88:9"
																},
																"nativeSrc": "8387:93:9",
																"nodeType": "YulFunctionCall",
																"src": "8387:93:9"
															},
															"nativeSrc": "8387:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "8387:93:9"
														},
														{
															"nativeSrc": "8489:19:9",
															"nodeType": "YulAssignment",
															"src": "8489:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8500:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "8500:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8505:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8505:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8496:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8496:3:9"
																},
																"nativeSrc": "8496:12:9",
																"nodeType": "YulFunctionCall",
																"src": "8496:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8489:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8489:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8148:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8282:3:9",
														"nodeType": "YulTypedName",
														"src": "8282:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8290:3:9",
														"nodeType": "YulTypedName",
														"src": "8290:3:9",
														"type": ""
													}
												],
												"src": "8148:366:9"
											},
											{
												"body": {
													"nativeSrc": "8691:248:9",
													"nodeType": "YulBlock",
													"src": "8691:248:9",
													"statements": [
														{
															"nativeSrc": "8701:26:9",
															"nodeType": "YulAssignment",
															"src": "8701:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8713:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "8713:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8724:2:9",
																		"nodeType": "YulLiteral",
																		"src": "8724:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8709:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "8709:3:9"
																},
																"nativeSrc": "8709:18:9",
																"nodeType": "YulFunctionCall",
																"src": "8709:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8701:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8701:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8748:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8748:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8759:1:9",
																				"nodeType": "YulLiteral",
																				"src": "8759:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8744:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8744:3:9"
																		},
																		"nativeSrc": "8744:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8744:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8767:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "8767:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8773:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "8773:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8763:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "8763:3:9"
																		},
																		"nativeSrc": "8763:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "8763:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8737:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8737:6:9"
																},
																"nativeSrc": "8737:47:9",
																"nodeType": "YulFunctionCall",
																"src": "8737:47:9"
															},
															"nativeSrc": "8737:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "8737:47:9"
														},
														{
															"nativeSrc": "8793:139:9",
															"nodeType": "YulAssignment",
															"src": "8793:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8927:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "8927:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8801:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "8801:124:9"
																},
																"nativeSrc": "8801:131:9",
																"nodeType": "YulFunctionCall",
																"src": "8801:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8793:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "8793:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8520:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8671:9:9",
														"nodeType": "YulTypedName",
														"src": "8671:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8686:4:9",
														"nodeType": "YulTypedName",
														"src": "8686:4:9",
														"type": ""
													}
												],
												"src": "8520:419:9"
											},
											{
												"body": {
													"nativeSrc": "8973:152:9",
													"nodeType": "YulBlock",
													"src": "8973:152:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8990:1:9",
																		"nodeType": "YulLiteral",
																		"src": "8990:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8993:77:9",
																		"nodeType": "YulLiteral",
																		"src": "8993:77:9",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8983:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:9"
																},
																"nativeSrc": "8983:88:9",
																"nodeType": "YulFunctionCall",
																"src": "8983:88:9"
															},
															"nativeSrc": "8983:88:9",
															"nodeType": "YulExpressionStatement",
															"src": "8983:88:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9087:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9087:1:9",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9090:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9090:4:9",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9080:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9080:6:9"
																},
																"nativeSrc": "9080:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9080:15:9"
															},
															"nativeSrc": "9080:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9080:15:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9111:1:9",
																		"nodeType": "YulLiteral",
																		"src": "9111:1:9",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9114:4:9",
																		"nodeType": "YulLiteral",
																		"src": "9114:4:9",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9104:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9104:6:9"
																},
																"nativeSrc": "9104:15:9",
																"nodeType": "YulFunctionCall",
																"src": "9104:15:9"
															},
															"nativeSrc": "9104:15:9",
															"nodeType": "YulExpressionStatement",
															"src": "9104:15:9"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8945:180:9",
												"nodeType": "YulFunctionDefinition",
												"src": "8945:180:9"
											},
											{
												"body": {
													"nativeSrc": "9175:147:9",
													"nodeType": "YulBlock",
													"src": "9175:147:9",
													"statements": [
														{
															"nativeSrc": "9185:25:9",
															"nodeType": "YulAssignment",
															"src": "9185:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9208:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9208:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9190:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9190:17:9"
																},
																"nativeSrc": "9190:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9190:20:9"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9185:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9185:1:9"
																}
															]
														},
														{
															"nativeSrc": "9219:25:9",
															"nodeType": "YulAssignment",
															"src": "9219:25:9",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9242:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9242:1:9"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9224:17:9",
																	"nodeType": "YulIdentifier",
																	"src": "9224:17:9"
																},
																"nativeSrc": "9224:20:9",
																"nodeType": "YulFunctionCall",
																"src": "9224:20:9"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9219:1:9",
																	"nodeType": "YulIdentifier",
																	"src": "9219:1:9"
																}
															]
														},
														{
															"nativeSrc": "9253:16:9",
															"nodeType": "YulAssignment",
															"src": "9253:16:9",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9264:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9264:1:9"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9267:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9267:1:9"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9260:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9260:3:9"
																},
																"nativeSrc": "9260:9:9",
																"nodeType": "YulFunctionCall",
																"src": "9260:9:9"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9253:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9253:3:9"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9293:22:9",
																"nodeType": "YulBlock",
																"src": "9293:22:9",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9295:16:9",
																				"nodeType": "YulIdentifier",
																				"src": "9295:16:9"
																			},
																			"nativeSrc": "9295:18:9",
																			"nodeType": "YulFunctionCall",
																			"src": "9295:18:9"
																		},
																		"nativeSrc": "9295:18:9",
																		"nodeType": "YulExpressionStatement",
																		"src": "9295:18:9"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9285:1:9",
																		"nodeType": "YulIdentifier",
																		"src": "9285:1:9"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9288:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9288:3:9"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9282:2:9",
																	"nodeType": "YulIdentifier",
																	"src": "9282:2:9"
																},
																"nativeSrc": "9282:10:9",
																"nodeType": "YulFunctionCall",
																"src": "9282:10:9"
															},
															"nativeSrc": "9279:36:9",
															"nodeType": "YulIf",
															"src": "9279:36:9"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9131:191:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9162:1:9",
														"nodeType": "YulTypedName",
														"src": "9162:1:9",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9165:1:9",
														"nodeType": "YulTypedName",
														"src": "9165:1:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9171:3:9",
														"nodeType": "YulTypedName",
														"src": "9171:3:9",
														"type": ""
													}
												],
												"src": "9131:191:9"
											},
											{
												"body": {
													"nativeSrc": "9434:128:9",
													"nodeType": "YulBlock",
													"src": "9434:128:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9456:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9456:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9464:1:9",
																				"nodeType": "YulLiteral",
																				"src": "9464:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9452:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9452:3:9"
																		},
																		"nativeSrc": "9452:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9452:14:9"
																	},
																	{
																		"hexValue": "596f752063616e206f6e6c79207265717565737420746f6b656e73206f6e6365",
																		"kind": "string",
																		"nativeSrc": "9468:34:9",
																		"nodeType": "YulLiteral",
																		"src": "9468:34:9",
																		"type": "",
																		"value": "You can only request tokens once"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9445:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9445:6:9"
																},
																"nativeSrc": "9445:58:9",
																"nodeType": "YulFunctionCall",
																"src": "9445:58:9"
															},
															"nativeSrc": "9445:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "9445:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9524:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "9524:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9532:2:9",
																				"nodeType": "YulLiteral",
																				"src": "9532:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9520:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "9520:3:9"
																		},
																		"nativeSrc": "9520:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "9520:15:9"
																	},
																	{
																		"hexValue": "20657665727920323420686f757273",
																		"kind": "string",
																		"nativeSrc": "9537:17:9",
																		"nodeType": "YulLiteral",
																		"src": "9537:17:9",
																		"type": "",
																		"value": " every 24 hours"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9513:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "9513:6:9"
																},
																"nativeSrc": "9513:42:9",
																"nodeType": "YulFunctionCall",
																"src": "9513:42:9"
															},
															"nativeSrc": "9513:42:9",
															"nodeType": "YulExpressionStatement",
															"src": "9513:42:9"
														}
													]
												},
												"name": "store_literal_in_memory_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25",
												"nativeSrc": "9328:234:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9426:6:9",
														"nodeType": "YulTypedName",
														"src": "9426:6:9",
														"type": ""
													}
												],
												"src": "9328:234:9"
											},
											{
												"body": {
													"nativeSrc": "9714:220:9",
													"nodeType": "YulBlock",
													"src": "9714:220:9",
													"statements": [
														{
															"nativeSrc": "9724:74:9",
															"nodeType": "YulAssignment",
															"src": "9724:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9790:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9790:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9795:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9795:2:9",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9731:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "9731:58:9"
																},
																"nativeSrc": "9731:67:9",
																"nodeType": "YulFunctionCall",
																"src": "9731:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9724:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9724:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9896:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9896:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25",
																	"nativeSrc": "9807:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "9807:88:9"
																},
																"nativeSrc": "9807:93:9",
																"nodeType": "YulFunctionCall",
																"src": "9807:93:9"
															},
															"nativeSrc": "9807:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "9807:93:9"
														},
														{
															"nativeSrc": "9909:19:9",
															"nodeType": "YulAssignment",
															"src": "9909:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9920:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "9920:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9925:2:9",
																		"nodeType": "YulLiteral",
																		"src": "9925:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9916:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9916:3:9"
																},
																"nativeSrc": "9916:12:9",
																"nodeType": "YulFunctionCall",
																"src": "9916:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9909:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "9909:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9568:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9702:3:9",
														"nodeType": "YulTypedName",
														"src": "9702:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9710:3:9",
														"nodeType": "YulTypedName",
														"src": "9710:3:9",
														"type": ""
													}
												],
												"src": "9568:366:9"
											},
											{
												"body": {
													"nativeSrc": "10111:248:9",
													"nodeType": "YulBlock",
													"src": "10111:248:9",
													"statements": [
														{
															"nativeSrc": "10121:26:9",
															"nodeType": "YulAssignment",
															"src": "10121:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10133:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "10133:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10144:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10144:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10129:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10129:3:9"
																},
																"nativeSrc": "10129:18:9",
																"nodeType": "YulFunctionCall",
																"src": "10129:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10121:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10121:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10168:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10168:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10179:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10179:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10164:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10164:3:9"
																		},
																		"nativeSrc": "10164:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10164:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10187:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "10187:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10193:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "10193:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10183:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10183:3:9"
																		},
																		"nativeSrc": "10183:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10183:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10157:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10157:6:9"
																},
																"nativeSrc": "10157:47:9",
																"nodeType": "YulFunctionCall",
																"src": "10157:47:9"
															},
															"nativeSrc": "10157:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "10157:47:9"
														},
														{
															"nativeSrc": "10213:139:9",
															"nodeType": "YulAssignment",
															"src": "10213:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10347:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "10347:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10221:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "10221:124:9"
																},
																"nativeSrc": "10221:131:9",
																"nodeType": "YulFunctionCall",
																"src": "10221:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10213:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "10213:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9940:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10091:9:9",
														"nodeType": "YulTypedName",
														"src": "10091:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10106:4:9",
														"nodeType": "YulTypedName",
														"src": "10106:4:9",
														"type": ""
													}
												],
												"src": "9940:419:9"
											},
											{
												"body": {
													"nativeSrc": "10471:114:9",
													"nodeType": "YulBlock",
													"src": "10471:114:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10493:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10493:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10501:1:9",
																				"nodeType": "YulLiteral",
																				"src": "10501:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10489:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10489:3:9"
																		},
																		"nativeSrc": "10489:14:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10489:14:9"
																	},
																	{
																		"hexValue": "52656e6f756e63696e67206f776e6572736869702069732064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "10505:34:9",
																		"nodeType": "YulLiteral",
																		"src": "10505:34:9",
																		"type": "",
																		"value": "Renouncing ownership is disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10482:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10482:6:9"
																},
																"nativeSrc": "10482:58:9",
																"nodeType": "YulFunctionCall",
																"src": "10482:58:9"
															},
															"nativeSrc": "10482:58:9",
															"nodeType": "YulExpressionStatement",
															"src": "10482:58:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10561:6:9",
																				"nodeType": "YulIdentifier",
																				"src": "10561:6:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10569:2:9",
																				"nodeType": "YulLiteral",
																				"src": "10569:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10557:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "10557:3:9"
																		},
																		"nativeSrc": "10557:15:9",
																		"nodeType": "YulFunctionCall",
																		"src": "10557:15:9"
																	},
																	{
																		"hexValue": "2e",
																		"kind": "string",
																		"nativeSrc": "10574:3:9",
																		"nodeType": "YulLiteral",
																		"src": "10574:3:9",
																		"type": "",
																		"value": "."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10550:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "10550:6:9"
																},
																"nativeSrc": "10550:28:9",
																"nodeType": "YulFunctionCall",
																"src": "10550:28:9"
															},
															"nativeSrc": "10550:28:9",
															"nodeType": "YulExpressionStatement",
															"src": "10550:28:9"
														}
													]
												},
												"name": "store_literal_in_memory_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3",
												"nativeSrc": "10365:220:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10463:6:9",
														"nodeType": "YulTypedName",
														"src": "10463:6:9",
														"type": ""
													}
												],
												"src": "10365:220:9"
											},
											{
												"body": {
													"nativeSrc": "10737:220:9",
													"nodeType": "YulBlock",
													"src": "10737:220:9",
													"statements": [
														{
															"nativeSrc": "10747:74:9",
															"nodeType": "YulAssignment",
															"src": "10747:74:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10813:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10813:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10818:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10818:2:9",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10754:58:9",
																	"nodeType": "YulIdentifier",
																	"src": "10754:58:9"
																},
																"nativeSrc": "10754:67:9",
																"nodeType": "YulFunctionCall",
																"src": "10754:67:9"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10747:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10747:3:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10919:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10919:3:9"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3",
																	"nativeSrc": "10830:88:9",
																	"nodeType": "YulIdentifier",
																	"src": "10830:88:9"
																},
																"nativeSrc": "10830:93:9",
																"nodeType": "YulFunctionCall",
																"src": "10830:93:9"
															},
															"nativeSrc": "10830:93:9",
															"nodeType": "YulExpressionStatement",
															"src": "10830:93:9"
														},
														{
															"nativeSrc": "10932:19:9",
															"nodeType": "YulAssignment",
															"src": "10932:19:9",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10943:3:9",
																		"nodeType": "YulIdentifier",
																		"src": "10943:3:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10948:2:9",
																		"nodeType": "YulLiteral",
																		"src": "10948:2:9",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10939:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10939:3:9"
																},
																"nativeSrc": "10939:12:9",
																"nodeType": "YulFunctionCall",
																"src": "10939:12:9"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10932:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "10932:3:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10591:366:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10725:3:9",
														"nodeType": "YulTypedName",
														"src": "10725:3:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10733:3:9",
														"nodeType": "YulTypedName",
														"src": "10733:3:9",
														"type": ""
													}
												],
												"src": "10591:366:9"
											},
											{
												"body": {
													"nativeSrc": "11134:248:9",
													"nodeType": "YulBlock",
													"src": "11134:248:9",
													"statements": [
														{
															"nativeSrc": "11144:26:9",
															"nodeType": "YulAssignment",
															"src": "11144:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11156:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11156:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11167:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11167:2:9",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11152:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11152:3:9"
																},
																"nativeSrc": "11152:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11152:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11144:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11144:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11191:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11191:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11202:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11202:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11187:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11187:3:9"
																		},
																		"nativeSrc": "11187:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11187:17:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11210:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "11210:4:9"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11216:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11206:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11206:3:9"
																		},
																		"nativeSrc": "11206:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11206:20:9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11180:6:9",
																	"nodeType": "YulIdentifier",
																	"src": "11180:6:9"
																},
																"nativeSrc": "11180:47:9",
																"nodeType": "YulFunctionCall",
																"src": "11180:47:9"
															},
															"nativeSrc": "11180:47:9",
															"nodeType": "YulExpressionStatement",
															"src": "11180:47:9"
														},
														{
															"nativeSrc": "11236:139:9",
															"nodeType": "YulAssignment",
															"src": "11236:139:9",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11370:4:9",
																		"nodeType": "YulIdentifier",
																		"src": "11370:4:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11244:124:9",
																	"nodeType": "YulIdentifier",
																	"src": "11244:124:9"
																},
																"nativeSrc": "11244:131:9",
																"nodeType": "YulFunctionCall",
																"src": "11244:131:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11236:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11236:4:9"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10963:419:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11114:9:9",
														"nodeType": "YulTypedName",
														"src": "11114:9:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11129:4:9",
														"nodeType": "YulTypedName",
														"src": "11129:4:9",
														"type": ""
													}
												],
												"src": "10963:419:9"
											},
											{
												"body": {
													"nativeSrc": "11542:288:9",
													"nodeType": "YulBlock",
													"src": "11542:288:9",
													"statements": [
														{
															"nativeSrc": "11552:26:9",
															"nodeType": "YulAssignment",
															"src": "11552:26:9",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11564:9:9",
																		"nodeType": "YulIdentifier",
																		"src": "11564:9:9"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11575:2:9",
																		"nodeType": "YulLiteral",
																		"src": "11575:2:9",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11560:3:9",
																	"nodeType": "YulIdentifier",
																	"src": "11560:3:9"
																},
																"nativeSrc": "11560:18:9",
																"nodeType": "YulFunctionCall",
																"src": "11560:18:9"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11552:4:9",
																	"nodeType": "YulIdentifier",
																	"src": "11552:4:9"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11632:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11632:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11645:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11645:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11656:1:9",
																				"nodeType": "YulLiteral",
																				"src": "11656:1:9",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11641:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11641:3:9"
																		},
																		"nativeSrc": "11641:17:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11641:17:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11588:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11588:43:9"
																},
																"nativeSrc": "11588:71:9",
																"nodeType": "YulFunctionCall",
																"src": "11588:71:9"
															},
															"nativeSrc": "11588:71:9",
															"nodeType": "YulExpressionStatement",
															"src": "11588:71:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11713:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11713:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11726:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11726:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11737:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11737:2:9",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11722:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11722:3:9"
																		},
																		"nativeSrc": "11722:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11722:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11669:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11669:43:9"
																},
																"nativeSrc": "11669:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11669:72:9"
															},
															"nativeSrc": "11669:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11669:72:9"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "11795:6:9",
																		"nodeType": "YulIdentifier",
																		"src": "11795:6:9"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11808:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "11808:9:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11819:2:9",
																				"nodeType": "YulLiteral",
																				"src": "11819:2:9",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11804:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "11804:3:9"
																		},
																		"nativeSrc": "11804:18:9",
																		"nodeType": "YulFunctionCall",
																		"src": "11804:18:9"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "11751:43:9",
																	"nodeType": "YulIdentifier",
																	"src": "11751:43:9"
																},
																"nativeSrc": "11751:72:9",
																"nodeType": "YulFunctionCall",
																"src": "11751:72:9"
															},
															"nativeSrc": "11751:72:9",
															"nodeType": "YulExpressionStatement",
															"src": "11751:72:9"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "11388:442:9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11498:9:9",
														"nodeType": "YulTypedName",
														"src": "11498:9:9",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11510:6:9",
														"nodeType": "YulTypedName",
														"src": "11510:6:9",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11518:6:9",
														"nodeType": "YulTypedName",
														"src": "11518:6:9",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11526:6:9",
														"nodeType": "YulTypedName",
														"src": "11526:6:9",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11537:4:9",
														"nodeType": "YulTypedName",
														"src": "11537:4:9",
														"type": ""
													}
												],
												"src": "11388:442:9"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC721_$1020_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$1020_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1020_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1020__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$1020_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must own at least one NFT\")\n\n    }\n\n    function abi_encode_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can only request tokens once\")\n\n        mstore(add(memPtr, 32), \" every 24 hours\")\n\n    }\n\n    function abi_encode_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Renouncing ownership is disabled\")\n\n        mstore(add(memPtr, 32), \".\")\n\n    }\n\n    function abi_encode_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 9,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100f55760003560e01c8063715018a611610097578063a9059cbb11610066578063a9059cbb14610264578063d56d229d14610294578063dd62ed3e146102b2578063f2fde38b146102e2576100f5565b8063715018a6146101ee5780638da5cb5b146101f857806395d89b4114610216578063a0662d8914610234576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce56714610196578063359cf2b7146101b457806370a08231146101be576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b6101026102fe565b60405161010f919061106d565b60405180910390f35b610132600480360381019061012d9190611128565b610390565b60405161013f9190611183565b60405180910390f35b6101506103b3565b60405161015d91906111ad565b60405180910390f35b610180600480360381019061017b91906111c8565b6103bd565b60405161018d9190611183565b60405180910390f35b61019e6103ec565b6040516101ab9190611237565b60405180910390f35b6101bc6103f5565b005b6101d860048036038101906101d39190611252565b6105bb565b6040516101e591906111ad565b60405180910390f35b6101f6610603565b005b610200610646565b60405161020d919061128e565b60405180910390f35b61021e610670565b60405161022b919061106d565b60405180910390f35b61024e60048036038101906102499190611252565b610702565b60405161025b91906111ad565b60405180910390f35b61027e60048036038101906102799190611128565b61071a565b60405161028b9190611183565b60405180910390f35b61029c61073d565b6040516102a99190611308565b60405180910390f35b6102cc60048036038101906102c79190611323565b610763565b6040516102d991906111ad565b60405180910390f35b6102fc60048036038101906102f79190611252565b6107ea565b005b60606003805461030d90611392565b80601f016020809104026020016040519081016040528092919081815260200182805461033990611392565b80156103865780601f1061035b57610100808354040283529160200191610386565b820191906000526020600020905b81548152906001019060200180831161036957829003601f168201915b5050505050905090565b60008061039b610870565b90506103a8818585610878565b600191505092915050565b6000600254905090565b6000806103c8610870565b90506103d585828561088a565b6103e085858561091e565b60019150509392505050565b60006012905090565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b8152600401610452919061128e565b602060405180830381865afa15801561046f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061049391906113d8565b116104d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ca90611451565b60405180910390fd5b62015180600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461052191906114a0565b421015610563576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055a90611546565b60405180910390fd5b61057533671bc16d674ec80000610a12565b42600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61060b610a94565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063d906115d8565b60405180910390fd5b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60606004805461067f90611392565b80601f01602080910402602001604051908101604052809291908181526020018280546106ab90611392565b80156106f85780601f106106cd576101008083540402835291602001916106f8565b820191906000526020600020905b8154815290600101906020018083116106db57829003601f168201915b5050505050905090565b60076020528060005260406000206000915090505481565b600080610725610870565b905061073281858561091e565b600191505092915050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6107f2610a94565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036108645760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161085b919061128e565b60405180910390fd5b61086d81610b1b565b50565b600033905090565b6108858383836001610be1565b505050565b60006108968484610763565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109185781811015610908578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108ff939291906115f8565b60405180910390fd5b61091784848484036000610be1565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109905760006040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610987919061128e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a025760006040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109f9919061128e565b60405180910390fd5b610a0d838383610db8565b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a845760006040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a7b919061128e565b60405180910390fd5b610a9060008383610db8565b5050565b610a9c610870565b73ffffffffffffffffffffffffffffffffffffffff16610aba610646565b73ffffffffffffffffffffffffffffffffffffffff1614610b1957610add610870565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610b10919061128e565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610c535760006040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610c4a919061128e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cc55760006040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610cbc919061128e565b60405180910390fd5b81600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508015610db2578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610da991906111ad565b60405180910390a35b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e0a578060026000828254610dfe91906114a0565b92505081905550610edd565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e96578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e8d939291906115f8565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f265780600260008282540392505081905550610f73565b806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610fd091906111ad565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611017578082015181840152602081019050610ffc565b60008484015250505050565b6000601f19601f8301169050919050565b600061103f82610fdd565b6110498185610fe8565b9350611059818560208601610ff9565b61106281611023565b840191505092915050565b600060208201905081810360008301526110878184611034565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110bf82611094565b9050919050565b6110cf816110b4565b81146110da57600080fd5b50565b6000813590506110ec816110c6565b92915050565b6000819050919050565b611105816110f2565b811461111057600080fd5b50565b600081359050611122816110fc565b92915050565b6000806040838503121561113f5761113e61108f565b5b600061114d858286016110dd565b925050602061115e85828601611113565b9150509250929050565b60008115159050919050565b61117d81611168565b82525050565b60006020820190506111986000830184611174565b92915050565b6111a7816110f2565b82525050565b60006020820190506111c2600083018461119e565b92915050565b6000806000606084860312156111e1576111e061108f565b5b60006111ef868287016110dd565b9350506020611200868287016110dd565b925050604061121186828701611113565b9150509250925092565b600060ff82169050919050565b6112318161121b565b82525050565b600060208201905061124c6000830184611228565b92915050565b6000602082840312156112685761126761108f565b5b6000611276848285016110dd565b91505092915050565b611288816110b4565b82525050565b60006020820190506112a3600083018461127f565b92915050565b6000819050919050565b60006112ce6112c96112c484611094565b6112a9565b611094565b9050919050565b60006112e0826112b3565b9050919050565b60006112f2826112d5565b9050919050565b611302816112e7565b82525050565b600060208201905061131d60008301846112f9565b92915050565b6000806040838503121561133a5761133961108f565b5b6000611348858286016110dd565b9250506020611359858286016110dd565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113aa57607f821691505b6020821081036113bd576113bc611363565b5b50919050565b6000815190506113d2816110fc565b92915050565b6000602082840312156113ee576113ed61108f565b5b60006113fc848285016113c3565b91505092915050565b7f596f75206d757374206f776e206174206c65617374206f6e65204e4654000000600082015250565b600061143b601d83610fe8565b915061144682611405565b602082019050919050565b6000602082019050818103600083015261146a8161142e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006114ab826110f2565b91506114b6836110f2565b92508282019050808211156114ce576114cd611471565b5b92915050565b7f596f752063616e206f6e6c79207265717565737420746f6b656e73206f6e636560008201527f20657665727920323420686f7572730000000000000000000000000000000000602082015250565b6000611530602f83610fe8565b915061153b826114d4565b604082019050919050565b6000602082019050818103600083015261155f81611523565b9050919050565b7f52656e6f756e63696e67206f776e6572736869702069732064697361626c656460008201527f2e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006115c2602183610fe8565b91506115cd82611566565b604082019050919050565b600060208201905081810360008301526115f1816115b5565b9050919050565b600060608201905061160d600083018661127f565b61161a602083018561119e565b611627604083018461119e565b94935050505056fea2646970667358221220c8442799913ab360b74ca417befbd558cb31daf6adee82332f4dc8a01d778d4964736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xA0662D89 EQ PUSH2 0x234 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x359CF2B7 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1BE JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x2FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x390 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x11C8 JUMP JUMPDEST PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x3F5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D3 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x5BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E5 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F6 PUSH2 0x603 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x200 PUSH2 0x646 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x21E PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x106D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1183 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0x73D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1323 JUMP JUMPDEST PUSH2 0x763 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH2 0x7EA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x30D SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x339 SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x386 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x35B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x386 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x369 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x39B PUSH2 0x870 JUMP JUMPDEST SWAP1 POP PUSH2 0x3A8 DUP2 DUP6 DUP6 PUSH2 0x878 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3C8 PUSH2 0x870 JUMP JUMPDEST SWAP1 POP PUSH2 0x3D5 DUP6 DUP3 DUP6 PUSH2 0x88A JUMP JUMPDEST PUSH2 0x3E0 DUP6 DUP6 DUP6 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x452 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x493 SWAP2 SWAP1 PUSH2 0x13D8 JUMP JUMPDEST GT PUSH2 0x4D3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4CA SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x15180 PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x521 SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x55A SWAP1 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x575 CALLER PUSH8 0x1BC16D674EC80000 PUSH2 0xA12 JUMP JUMPDEST TIMESTAMP PUSH1 0x7 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x60B PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63D SWAP1 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x67F SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6AB SWAP1 PUSH2 0x1392 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x725 PUSH2 0x870 JUMP JUMPDEST SWAP1 POP PUSH2 0x732 DUP2 DUP6 DUP6 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7F2 PUSH2 0xA94 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x864 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x85B SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x86D DUP2 PUSH2 0xB1B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x885 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xBE1 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x896 DUP5 DUP5 PUSH2 0x763 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x918 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x908 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8FF SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x917 DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xBE1 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x990 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x987 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA02 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA0D DUP4 DUP4 DUP4 PUSH2 0xDB8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA7B SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA90 PUSH1 0x0 DUP4 DUP4 PUSH2 0xDB8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xA9C PUSH2 0x870 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xABA PUSH2 0x646 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB19 JUMPI PUSH2 0xADD PUSH2 0x870 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB10 SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC53 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCC5 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBC SWAP2 SWAP1 PUSH2 0x128E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xDB2 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xDA9 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE0A JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xDFE SWAP2 SWAP1 PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEDD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE96 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE8D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x15F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF26 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF73 JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xFD0 SWAP2 SWAP1 PUSH2 0x11AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1017 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFFC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103F DUP3 PUSH2 0xFDD JUMP JUMPDEST PUSH2 0x1049 DUP2 DUP6 PUSH2 0xFE8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1059 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xFF9 JUMP JUMPDEST PUSH2 0x1062 DUP2 PUSH2 0x1023 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1087 DUP2 DUP5 PUSH2 0x1034 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10BF DUP3 PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CF DUP2 PUSH2 0x10B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x10DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EC DUP2 PUSH2 0x10C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1105 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP2 EQ PUSH2 0x1110 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1122 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x113F JUMPI PUSH2 0x113E PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114D DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x115E DUP6 DUP3 DUP7 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x117D DUP2 PUSH2 0x1168 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1198 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1174 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x11A7 DUP2 PUSH2 0x10F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x119E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11E1 JUMPI PUSH2 0x11E0 PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x11EF DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1200 DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1211 DUP7 DUP3 DUP8 ADD PUSH2 0x1113 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1231 DUP2 PUSH2 0x121B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1228 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1268 JUMPI PUSH2 0x1267 PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1276 DUP5 DUP3 DUP6 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1288 DUP2 PUSH2 0x10B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x127F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12CE PUSH2 0x12C9 PUSH2 0x12C4 DUP5 PUSH2 0x1094 JUMP JUMPDEST PUSH2 0x12A9 JUMP JUMPDEST PUSH2 0x1094 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E0 DUP3 PUSH2 0x12B3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12F2 DUP3 PUSH2 0x12D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1302 DUP2 PUSH2 0x12E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x131D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x12F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133A JUMPI PUSH2 0x1339 PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1348 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1359 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x13AA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x13BD JUMPI PUSH2 0x13BC PUSH2 0x1363 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x13D2 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13EE JUMPI PUSH2 0x13ED PUSH2 0x108F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x13FC DUP5 DUP3 DUP6 ADD PUSH2 0x13C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F75206D757374206F776E206174206C65617374206F6E65204E4654000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x143B PUSH1 0x1D DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1446 DUP3 PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x146A DUP2 PUSH2 0x142E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x14AB DUP3 PUSH2 0x10F2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14B6 DUP4 PUSH2 0x10F2 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14CE JUMPI PUSH2 0x14CD PUSH2 0x1471 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E206F6E6C79207265717565737420746F6B656E73206F6E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20657665727920323420686F7572730000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1530 PUSH1 0x2F DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x153B DUP3 PUSH2 0x14D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x155F DUP2 PUSH2 0x1523 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x52656E6F756E63696E67206F776E6572736869702069732064697361626C6564 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x2E00000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15C2 PUSH1 0x21 DUP4 PUSH2 0xFE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x15CD DUP3 PUSH2 0x1566 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15F1 DUP2 PUSH2 0x15B5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x160D PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x127F JUMP JUMPDEST PUSH2 0x161A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x119E JUMP JUMPDEST PUSH2 0x1627 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x119E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 DIFFICULTY 0x27 SWAP10 SWAP2 GASPRICE 0xB3 PUSH1 0xB7 0x4C LOG4 OR 0xBE 0xFB 0xD5 PC 0xCB BALANCE 0xDA 0xF6 0xAD 0xEE DUP3 CALLER 0x2F 0x4D 0xC8 LOG0 SAR PUSH24 0x8D4964736F6C634300081900330000000000000000000000 ",
							"sourceMap": "226:1110:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;927:407:8;;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;707:120:8;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;312:50:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;280:26:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:89:2;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;3144:97::-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;927:407:8:-;1013:1;977:11;;;;;;;;;;;:21;;;999:10;977:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;969:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;1115:6;1085:15;:27;1101:10;1085:27;;;;;;;;;;;;;;;;:36;;;;:::i;:::-;1066:15;:55;;1058:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;1184:27;1190:10;1202:8;1184:5;:27::i;:::-;1271:15;1241;:27;1257:10;1241:27;;;;;;;;;;;;;;;:45;;;;927:407::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;707:120:8:-;1531:13:0;:11;:13::i;:::-;777:43:8::1;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0::0;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2276:93:2:-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;312:50:8:-;;;;;;;;;;;;;;;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;280:26:8:-;;;;;;;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;7721:208::-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9949:432:2:-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:248::-;369:1;379:113;393:6;390:1;387:13;379:113;;;478:1;473:3;469:11;463:18;459:1;454:3;450:11;443:39;415:2;412:1;408:10;403:15;;379:113;;;526:1;517:6;512:3;508:16;501:27;349:186;287:248;;;:::o;541:102::-;582:6;633:2;629:7;624:2;617:5;613:14;609:28;599:38;;541:102;;;:::o;649:377::-;737:3;765:39;798:5;765:39;:::i;:::-;820:71;884:6;879:3;820:71;:::i;:::-;813:78;;900:65;958:6;953:3;946:4;939:5;935:16;900:65;:::i;:::-;990:29;1012:6;990:29;:::i;:::-;985:3;981:39;974:46;;741:285;649:377;;;;:::o;1032:313::-;1145:4;1183:2;1172:9;1168:18;1160:26;;1232:9;1226:4;1222:20;1218:1;1207:9;1203:17;1196:47;1260:78;1333:4;1324:6;1260:78;:::i;:::-;1252:86;;1032:313;;;;:::o;1432:117::-;1541:1;1538;1531:12;1678:126;1715:7;1755:42;1748:5;1744:54;1733:65;;1678:126;;;:::o;1810:96::-;1847:7;1876:24;1894:5;1876:24;:::i;:::-;1865:35;;1810:96;;;:::o;1912:122::-;1985:24;2003:5;1985:24;:::i;:::-;1978:5;1975:35;1965:63;;2024:1;2021;2014:12;1965:63;1912:122;:::o;2040:139::-;2086:5;2124:6;2111:20;2102:29;;2140:33;2167:5;2140:33;:::i;:::-;2040:139;;;;:::o;2185:77::-;2222:7;2251:5;2240:16;;2185:77;;;:::o;2268:122::-;2341:24;2359:5;2341:24;:::i;:::-;2334:5;2331:35;2321:63;;2380:1;2377;2370:12;2321:63;2268:122;:::o;2396:139::-;2442:5;2480:6;2467:20;2458:29;;2496:33;2523:5;2496:33;:::i;:::-;2396:139;;;;:::o;2541:474::-;2609:6;2617;2666:2;2654:9;2645:7;2641:23;2637:32;2634:119;;;2672:79;;:::i;:::-;2634:119;2792:1;2817:53;2862:7;2853:6;2842:9;2838:22;2817:53;:::i;:::-;2807:63;;2763:117;2919:2;2945:53;2990:7;2981:6;2970:9;2966:22;2945:53;:::i;:::-;2935:63;;2890:118;2541:474;;;;;:::o;3021:90::-;3055:7;3098:5;3091:13;3084:21;3073:32;;3021:90;;;:::o;3117:109::-;3198:21;3213:5;3198:21;:::i;:::-;3193:3;3186:34;3117:109;;:::o;3232:210::-;3319:4;3357:2;3346:9;3342:18;3334:26;;3370:65;3432:1;3421:9;3417:17;3408:6;3370:65;:::i;:::-;3232:210;;;;:::o;3448:118::-;3535:24;3553:5;3535:24;:::i;:::-;3530:3;3523:37;3448:118;;:::o;3572:222::-;3665:4;3703:2;3692:9;3688:18;3680:26;;3716:71;3784:1;3773:9;3769:17;3760:6;3716:71;:::i;:::-;3572:222;;;;:::o;3800:619::-;3877:6;3885;3893;3942:2;3930:9;3921:7;3917:23;3913:32;3910:119;;;3948:79;;:::i;:::-;3910:119;4068:1;4093:53;4138:7;4129:6;4118:9;4114:22;4093:53;:::i;:::-;4083:63;;4039:117;4195:2;4221:53;4266:7;4257:6;4246:9;4242:22;4221:53;:::i;:::-;4211:63;;4166:118;4323:2;4349:53;4394:7;4385:6;4374:9;4370:22;4349:53;:::i;:::-;4339:63;;4294:118;3800:619;;;;;:::o;4425:86::-;4460:7;4500:4;4493:5;4489:16;4478:27;;4425:86;;;:::o;4517:112::-;4600:22;4616:5;4600:22;:::i;:::-;4595:3;4588:35;4517:112;;:::o;4635:214::-;4724:4;4762:2;4751:9;4747:18;4739:26;;4775:67;4839:1;4828:9;4824:17;4815:6;4775:67;:::i;:::-;4635:214;;;;:::o;4855:329::-;4914:6;4963:2;4951:9;4942:7;4938:23;4934:32;4931:119;;;4969:79;;:::i;:::-;4931:119;5089:1;5114:53;5159:7;5150:6;5139:9;5135:22;5114:53;:::i;:::-;5104:63;;5060:117;4855:329;;;;:::o;5190:118::-;5277:24;5295:5;5277:24;:::i;:::-;5272:3;5265:37;5190:118;;:::o;5314:222::-;5407:4;5445:2;5434:9;5430:18;5422:26;;5458:71;5526:1;5515:9;5511:17;5502:6;5458:71;:::i;:::-;5314:222;;;;:::o;5542:60::-;5570:3;5591:5;5584:12;;5542:60;;;:::o;5608:142::-;5658:9;5691:53;5709:34;5718:24;5736:5;5718:24;:::i;:::-;5709:34;:::i;:::-;5691:53;:::i;:::-;5678:66;;5608:142;;;:::o;5756:126::-;5806:9;5839:37;5870:5;5839:37;:::i;:::-;5826:50;;5756:126;;;:::o;5888:142::-;5954:9;5987:37;6018:5;5987:37;:::i;:::-;5974:50;;5888:142;;;:::o;6036:163::-;6139:53;6186:5;6139:53;:::i;:::-;6134:3;6127:66;6036:163;;:::o;6205:254::-;6314:4;6352:2;6341:9;6337:18;6329:26;;6365:87;6449:1;6438:9;6434:17;6425:6;6365:87;:::i;:::-;6205:254;;;;:::o;6465:474::-;6533:6;6541;6590:2;6578:9;6569:7;6565:23;6561:32;6558:119;;;6596:79;;:::i;:::-;6558:119;6716:1;6741:53;6786:7;6777:6;6766:9;6762:22;6741:53;:::i;:::-;6731:63;;6687:117;6843:2;6869:53;6914:7;6905:6;6894:9;6890:22;6869:53;:::i;:::-;6859:63;;6814:118;6465:474;;;;;:::o;6945:180::-;6993:77;6990:1;6983:88;7090:4;7087:1;7080:15;7114:4;7111:1;7104:15;7131:320;7175:6;7212:1;7206:4;7202:12;7192:22;;7259:1;7253:4;7249:12;7280:18;7270:81;;7336:4;7328:6;7324:17;7314:27;;7270:81;7398:2;7390:6;7387:14;7367:18;7364:38;7361:84;;7417:18;;:::i;:::-;7361:84;7182:269;7131:320;;;:::o;7457:143::-;7514:5;7545:6;7539:13;7530:22;;7561:33;7588:5;7561:33;:::i;:::-;7457:143;;;;:::o;7606:351::-;7676:6;7725:2;7713:9;7704:7;7700:23;7696:32;7693:119;;;7731:79;;:::i;:::-;7693:119;7851:1;7876:64;7932:7;7923:6;7912:9;7908:22;7876:64;:::i;:::-;7866:74;;7822:128;7606:351;;;;:::o;7963:179::-;8103:31;8099:1;8091:6;8087:14;8080:55;7963:179;:::o;8148:366::-;8290:3;8311:67;8375:2;8370:3;8311:67;:::i;:::-;8304:74;;8387:93;8476:3;8387:93;:::i;:::-;8505:2;8500:3;8496:12;8489:19;;8148:366;;;:::o;8520:419::-;8686:4;8724:2;8713:9;8709:18;8701:26;;8773:9;8767:4;8763:20;8759:1;8748:9;8744:17;8737:47;8801:131;8927:4;8801:131;:::i;:::-;8793:139;;8520:419;;;:::o;8945:180::-;8993:77;8990:1;8983:88;9090:4;9087:1;9080:15;9114:4;9111:1;9104:15;9131:191;9171:3;9190:20;9208:1;9190:20;:::i;:::-;9185:25;;9224:20;9242:1;9224:20;:::i;:::-;9219:25;;9267:1;9264;9260:9;9253:16;;9288:3;9285:1;9282:10;9279:36;;;9295:18;;:::i;:::-;9279:36;9131:191;;;;:::o;9328:234::-;9468:34;9464:1;9456:6;9452:14;9445:58;9537:17;9532:2;9524:6;9520:15;9513:42;9328:234;:::o;9568:366::-;9710:3;9731:67;9795:2;9790:3;9731:67;:::i;:::-;9724:74;;9807:93;9896:3;9807:93;:::i;:::-;9925:2;9920:3;9916:12;9909:19;;9568:366;;;:::o;9940:419::-;10106:4;10144:2;10133:9;10129:18;10121:26;;10193:9;10187:4;10183:20;10179:1;10168:9;10164:17;10157:47;10221:131;10347:4;10221:131;:::i;:::-;10213:139;;9940:419;;;:::o;10365:220::-;10505:34;10501:1;10493:6;10489:14;10482:58;10574:3;10569:2;10561:6;10557:15;10550:28;10365:220;:::o;10591:366::-;10733:3;10754:67;10818:2;10813:3;10754:67;:::i;:::-;10747:74;;10830:93;10919:3;10830:93;:::i;:::-;10948:2;10943:3;10939:12;10932:19;;10591:366;;;:::o;10963:419::-;11129:4;11167:2;11156:9;11152:18;11144:26;;11216:9;11210:4;11206:20;11202:1;11191:9;11187:17;11180:47;11244:131;11370:4;11244:131;:::i;:::-;11236:139;;10963:419;;;:::o;11388:442::-;11537:4;11575:2;11564:9;11560:18;11552:26;;11588:71;11656:1;11645:9;11641:17;11632:6;11588:71;:::i;:::-;11669:72;11737:2;11726:9;11722:18;11713:6;11669:72;:::i;:::-;11751;11819:2;11808:9;11804:18;11795:6;11751:72;:::i;:::-;11388:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1146600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2930",
								"decimals()": "388",
								"lastRequestedAt(address)": "2903",
								"name()": "infinite",
								"nftContract()": "infinite",
								"owner()": "2567",
								"renounceOwnership()": "infinite",
								"requestTokens()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2505",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 226,
									"end": 1336,
									"name": "PUSH",
									"source": 8,
									"value": "80"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "CALLVALUE",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 631,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 631,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 440,
									"end": 631,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 631,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "CODESIZE",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSHSIZE",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 440,
									"end": 631,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 631,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 440,
									"end": 631,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "tag",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 440,
									"end": 631,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 262,
									"end": 272,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "504C5A546F6B656E000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "504C5A0000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 530,
									"end": 541,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 508,
									"end": 519,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "6"
								},
								{
									"begin": 508,
									"end": 519,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "100"
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "OR",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 508,
									"end": 542,
									"modifierDepth": 1,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 552,
									"end": 575,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 558,
									"end": 568,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 8
								},
								{
									"begin": 570,
									"end": 574,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "D3C21BCECCEDA1000000"
								},
								{
									"begin": 552,
									"end": 557,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 552,
									"end": 557,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 552,
									"end": 557,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 8
								},
								{
									"begin": 552,
									"end": 575,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 552,
									"end": 575,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 8
								},
								{
									"begin": 552,
									"end": 575,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 552,
									"end": 575,
									"modifierDepth": 1,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 552,
									"end": 575,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 440,
									"end": 631,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7810,
									"end": 7811,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7798,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7791,
									"end": 7812,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7864,
									"end": 7865,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 7835,
									"end": 7867,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "tag",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7835,
									"end": 7867,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 7787,
									"end": 7878,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7903,
									"end": 7904,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7907,
									"end": 7914,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7916,
									"end": 7921,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7894,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 7887,
									"end": 7922,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7721,
									"end": 7929,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6376,
									"end": 6377,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6364,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6360,
									"end": 6378,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6512,
									"end": 6517,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6496,
									"end": 6508,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "30"
								},
								{
									"begin": 6496,
									"end": 6517,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6496,
									"end": 6517,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6567,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6579,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6580,
									"end": 6584,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6570,
									"end": 6585,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6548,
									"end": 6585,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6617,
									"end": 6622,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6614,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6603,
									"end": 6622,
									"name": "LT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6674,
									"end": 6678,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6680,
									"end": 6691,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6693,
									"end": 6698,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "34"
								},
								{
									"begin": 6649,
									"end": 6699,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "tag",
									"source": 2,
									"value": "33"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6649,
									"end": 6699,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "tag",
									"source": 2,
									"value": "32"
								},
								{
									"begin": 6599,
									"end": 6714,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6866,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6863,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6852,
									"end": 6871,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6843,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6844,
									"end": 6848,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6834,
									"end": 6849,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6834,
									"end": 6871,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6534,
									"end": 6896,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "tag",
									"source": 2,
									"value": "31"
								},
								{
									"begin": 6356,
									"end": 6896,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6924,
									"end": 6925,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6912,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 6910,
									"end": 6926,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 7089,
									"end": 7094,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 7073,
									"end": 7085,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7073,
									"end": 7094,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "35"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7301,
									"end": 7306,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7293,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7294,
									"end": 7296,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "KECCAK256",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7297,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 7284,
									"end": 7306,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "tag",
									"source": 2,
									"value": "36"
								},
								{
									"begin": 6906,
									"end": 7331,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7363,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7355,
									"end": 7359,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7365,
									"end": 7370,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "38"
								},
								{
									"begin": 7346,
									"end": 7371,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "tag",
									"source": 2,
									"value": "37"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 7346,
									"end": 7371,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6271,
									"end": 7378,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "42"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 9,
									"value": "75"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 9,
									"value": "77"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 9,
									"value": "78"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "44"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 9,
									"value": "83"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 9,
									"value": "82"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "45"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 9,
									"value": "84"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "tag",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1254,
									"end": 1260,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1293,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1282,
									"end": 1294,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1272,
									"end": 1294,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1202,
									"end": 1301,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "tag",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 1307,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1355,
									"end": 1432,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1352,
									"end": 1353,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1345,
									"end": 1433,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1452,
									"end": 1456,
									"name": "PUSH",
									"source": 9,
									"value": "41"
								},
								{
									"begin": 1449,
									"end": 1450,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1442,
									"end": 1457,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1476,
									"end": 1480,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1473,
									"end": 1474,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1466,
									"end": 1481,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "tag",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1493,
									"end": 1673,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1541,
									"end": 1618,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1538,
									"end": 1539,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1531,
									"end": 1619,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1638,
									"end": 1642,
									"name": "PUSH",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1635,
									"end": 1636,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 1628,
									"end": 1643,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 1662,
									"end": 1666,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1659,
									"end": 1660,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1652,
									"end": 1667,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "tag",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1723,
									"end": 1729,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1760,
									"end": 1761,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 1754,
									"end": 1758,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1750,
									"end": 1762,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1740,
									"end": 1762,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1807,
									"end": 1808,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1801,
									"end": 1805,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1797,
									"end": 1809,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1828,
									"end": 1846,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1884,
									"end": 1888,
									"name": "PUSH",
									"source": 9,
									"value": "7F"
								},
								{
									"begin": 1876,
									"end": 1882,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1872,
									"end": 1889,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1862,
									"end": 1889,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "tag",
									"source": 9,
									"value": "89"
								},
								{
									"begin": 1818,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1946,
									"end": 1948,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1938,
									"end": 1944,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 1935,
									"end": 1949,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 1915,
									"end": 1933,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1912,
									"end": 1950,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "48"
								},
								{
									"begin": 1965,
									"end": 1983,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "tag",
									"source": 9,
									"value": "91"
								},
								{
									"begin": 1965,
									"end": 1983,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "tag",
									"source": 9,
									"value": "90"
								},
								{
									"begin": 1909,
									"end": 1993,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1730,
									"end": 1999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1679,
									"end": 1999,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "tag",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2054,
									"end": 2058,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2077,
									"end": 2080,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2069,
									"end": 2080,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2100,
									"end": 2103,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2090,
									"end": 2104,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2134,
									"end": 2138,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2131,
									"end": 2132,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2113,
									"end": 2139,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2005,
									"end": 2146,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "tag",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2189,
									"end": 2195,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2236,
									"end": 2238,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2231,
									"end": 2233,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 2224,
									"end": 2229,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2220,
									"end": 2234,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2216,
									"end": 2239,
									"name": "DIV",
									"source": 9
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2206,
									"end": 2239,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2152,
									"end": 2245,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "tag",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2295,
									"end": 2303,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2345,
									"end": 2350,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2339,
									"end": 2343,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2335,
									"end": 2351,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2314,
									"end": 2351,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2251,
									"end": 2358,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "tag",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2433,
									"end": 2439,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2484,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 2471,
									"end": 2481,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2467,
									"end": 2485,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2536,
									"end": 2602,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2534,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2506,
									"end": 2603,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "tag",
									"source": 9,
									"value": "96"
								},
								{
									"begin": 2506,
									"end": 2603,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2654,
									"end": 2662,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2643,
									"end": 2652,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "52"
								},
								{
									"begin": 2624,
									"end": 2663,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "tag",
									"source": 9,
									"value": "97"
								},
								{
									"begin": 2624,
									"end": 2663,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "SWAP6",
									"source": 9
								},
								{
									"begin": 2612,
									"end": 2663,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2696,
									"end": 2700,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2692,
									"end": 2701,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2685,
									"end": 2690,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2681,
									"end": 2702,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2702,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2745,
									"end": 2749,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2735,
									"end": 2743,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 2731,
									"end": 2750,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2724,
									"end": 2729,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 2721,
									"end": 2751,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2711,
									"end": 2751,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2440,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2364,
									"end": 2757,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "tag",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2800,
									"end": 2807,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2829,
									"end": 2834,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2834,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2763,
									"end": 2840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "tag",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2874,
									"end": 2877,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2895,
									"end": 2900,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2888,
									"end": 2900,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2846,
									"end": 2906,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "tag",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2962,
									"end": 2971,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3040,
									"end": 3045,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 3022,
									"end": 3046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "tag",
									"source": 9,
									"value": "103"
								},
								{
									"begin": 3022,
									"end": 3046,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "55"
								},
								{
									"begin": 3013,
									"end": 3047,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "tag",
									"source": 9,
									"value": "102"
								},
								{
									"begin": 3013,
									"end": 3047,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 2995,
									"end": 3048,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "tag",
									"source": 9,
									"value": "101"
								},
								{
									"begin": 2995,
									"end": 3048,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2982,
									"end": 3048,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "tag",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3103,
									"end": 3106,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3124,
									"end": 3129,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3117,
									"end": 3129,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3060,
									"end": 3135,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "tag",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3282,
									"end": 3289,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "56"
								},
								{
									"begin": 3251,
									"end": 3290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "tag",
									"source": 9,
									"value": "106"
								},
								{
									"begin": 3251,
									"end": 3290,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3385,
									"end": 3401,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "57"
								},
								{
									"begin": 3361,
									"end": 3402,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "tag",
									"source": 9,
									"value": "108"
								},
								{
									"begin": 3361,
									"end": 3402,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3353,
									"end": 3359,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3346,
									"end": 3350,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3340,
									"end": 3351,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "53"
								},
								{
									"begin": 3312,
									"end": 3403,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "tag",
									"source": 9,
									"value": "107"
								},
								{
									"begin": 3312,
									"end": 3403,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3306,
									"end": 3310,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3299,
									"end": 3404,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 3217,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3141,
									"end": 3410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "tag",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3461,
									"end": 3464,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3416,
									"end": 3489,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3416,
									"end": 3489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "tag",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "59"
								},
								{
									"begin": 3572,
									"end": 3604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "tag",
									"source": 9,
									"value": "111"
								},
								{
									"begin": 3572,
									"end": 3604,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 3671,
									"end": 3677,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3663,
									"end": 3669,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3657,
									"end": 3661,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "58"
								},
								{
									"begin": 3613,
									"end": 3678,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "tag",
									"source": 9,
									"value": "112"
								},
								{
									"begin": 3613,
									"end": 3678,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3548,
									"end": 3684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3495,
									"end": 3684,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "tag",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3767,
									"end": 3770,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3760,
									"end": 3765,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3757,
									"end": 3771,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3858,
									"end": 3859,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 3851,
									"end": 3856,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 3821,
									"end": 3860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "tag",
									"source": 9,
									"value": "117"
								},
								{
									"begin": 3821,
									"end": 3860,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3794,
									"end": 3795,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 3787,
									"end": 3792,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 3783,
									"end": 3796,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 3774,
									"end": 3796,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "114"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "tag",
									"source": 9,
									"value": "116"
								},
								{
									"begin": 3750,
									"end": 3870,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3690,
									"end": 3876,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "tag",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3983,
									"end": 3985,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 3978,
									"end": 3981,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 3975,
									"end": 3986,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4049,
									"end": 4054,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 4017,
									"end": 4055,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "tag",
									"source": 9,
									"value": "120"
								},
								{
									"begin": 4017,
									"end": 4055,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4119,
									"end": 4129,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 4101,
									"end": 4130,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "tag",
									"source": 9,
									"value": "121"
								},
								{
									"begin": 4101,
									"end": 4130,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4091,
									"end": 4099,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4087,
									"end": 4131,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4284,
									"end": 4286,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4282,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 4305,
									"end": 4313,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4290,
									"end": 4313,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "tag",
									"source": 9,
									"value": "122"
								},
								{
									"begin": 4266,
									"end": 4315,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4402,
									"end": 4405,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "51"
								},
								{
									"begin": 4384,
									"end": 4406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "tag",
									"source": 9,
									"value": "124"
								},
								{
									"begin": 4384,
									"end": 4406,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4374,
									"end": 4382,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4370,
									"end": 4407,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 4357,
									"end": 4368,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "61"
								},
								{
									"begin": 4328,
									"end": 4408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "tag",
									"source": 9,
									"value": "123"
								},
								{
									"begin": 4328,
									"end": 4408,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3987,
									"end": 4418,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "tag",
									"source": 9,
									"value": "119"
								},
								{
									"begin": 3972,
									"end": 4418,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 3882,
									"end": 4425,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "tag",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4485,
									"end": 4493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4535,
									"end": 4540,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4529,
									"end": 4533,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4525,
									"end": 4541,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4504,
									"end": 4541,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4431,
									"end": 4548,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "tag",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4598,
									"end": 4604,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4679,
									"end": 4680,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4675,
									"end": 4681,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4667,
									"end": 4672,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 4664,
									"end": 4665,
									"name": "PUSH",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 4660,
									"end": 4673,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "63"
								},
								{
									"begin": 4631,
									"end": 4682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "tag",
									"source": 9,
									"value": "127"
								},
								{
									"begin": 4631,
									"end": 4682,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4627,
									"end": 4683,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 4712,
									"end": 4716,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 4706,
									"end": 4710,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4702,
									"end": 4717,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4692,
									"end": 4717,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4605,
									"end": 4723,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4554,
									"end": 4723,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "tag",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4804,
									"end": 4808,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 4975,
									"end": 4978,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4969,
									"end": 4973,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 4950,
									"end": 4979,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "tag",
									"source": 9,
									"value": "129"
								},
								{
									"begin": 4950,
									"end": 4979,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4942,
									"end": 4979,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5012,
									"end": 5015,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5009,
									"end": 5010,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 5005,
									"end": 5016,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 4999,
									"end": 5003,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 4996,
									"end": 5017,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 4988,
									"end": 5017,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 4728,
									"end": 5023,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "tag",
									"source": 9,
									"value": "9"
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 5178,
									"end": 5181,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "46"
								},
								{
									"begin": 5145,
									"end": 5182,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "tag",
									"source": 9,
									"value": "131"
								},
								{
									"begin": 5145,
									"end": 5182,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5247,
									"end": 5265,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5239,
									"end": 5245,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5236,
									"end": 5266,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "47"
								},
								{
									"begin": 5269,
									"end": 5287,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "tag",
									"source": 9,
									"value": "133"
								},
								{
									"begin": 5269,
									"end": 5287,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "tag",
									"source": 9,
									"value": "132"
								},
								{
									"begin": 5233,
									"end": 5289,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5345,
									"end": 5349,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5339,
									"end": 5350,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "49"
								},
								{
									"begin": 5313,
									"end": 5351,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "tag",
									"source": 9,
									"value": "134"
								},
								{
									"begin": 5313,
									"end": 5351,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5458,
									"end": 5464,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5450,
									"end": 5456,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "62"
								},
								{
									"begin": 5398,
									"end": 5465,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "tag",
									"source": 9,
									"value": "135"
								},
								{
									"begin": 5398,
									"end": 5465,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5492,
									"end": 5493,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5520,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5503,
									"end": 5520,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5548,
									"end": 5550,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5540,
									"end": 5546,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5537,
									"end": 5551,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 5565,
									"end": 5566,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6222,
									"end": 6223,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6239,
									"end": 6245,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6288,
									"end": 6297,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6283,
									"end": 6286,
									"name": "DUP8",
									"source": 9
								},
								{
									"begin": 6279,
									"end": 6298,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6273,
									"end": 6299,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6264,
									"end": 6299,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "tag",
									"source": 9,
									"value": "138"
								},
								{
									"begin": 6236,
									"end": 6313,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6399,
									"end": 6405,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 6392,
									"end": 6397,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "65"
								},
								{
									"begin": 6339,
									"end": 6406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "tag",
									"source": 9,
									"value": "139"
								},
								{
									"begin": 6339,
									"end": 6406,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6333,
									"end": 6337,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 6326,
									"end": 6407,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 6195,
									"end": 6417,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "tag",
									"source": 9,
									"value": "137"
								},
								{
									"begin": 5560,
									"end": 6178,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5612,
									"end": 5616,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 5608,
									"end": 5617,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 5600,
									"end": 5606,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5596,
									"end": 5618,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5678,
									"end": 5682,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "50"
								},
								{
									"begin": 5646,
									"end": 5683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "tag",
									"source": 9,
									"value": "140"
								},
								{
									"begin": 5646,
									"end": 5683,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5705,
									"end": 5706,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5733,
									"end": 5740,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5730,
									"end": 5731,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5727,
									"end": 5741,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 5812,
									"end": 5821,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 5807,
									"end": 5810,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 5803,
									"end": 5822,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5797,
									"end": 5823,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 5789,
									"end": 5795,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5782,
									"end": 5824,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5863,
									"end": 5864,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 5855,
									"end": 5861,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 5851,
									"end": 5865,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 5841,
									"end": 5865,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5910,
									"end": 5912,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5899,
									"end": 5908,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 5895,
									"end": 5913,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 5882,
									"end": 5913,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5756,
									"end": 5760,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 5753,
									"end": 5754,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 5749,
									"end": 5761,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 5744,
									"end": 5761,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "141"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "tag",
									"source": 9,
									"value": "143"
								},
								{
									"begin": 5719,
									"end": 5927,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5955,
									"end": 5961,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 5946,
									"end": 5953,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 5943,
									"end": 5962,
									"name": "LT",
									"source": 9
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 6013,
									"end": 6022,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6008,
									"end": 6011,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6004,
									"end": 6023,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 5998,
									"end": 6024,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6098,
									"end": 6102,
									"name": "PUSH",
									"source": 9,
									"value": "1F"
								},
								{
									"begin": 6090,
									"end": 6096,
									"name": "DUP10",
									"source": 9
								},
								{
									"begin": 6086,
									"end": 6103,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 6075,
									"end": 6084,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 6056,
									"end": 6104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "tag",
									"source": 9,
									"value": "145"
								},
								{
									"begin": 6056,
									"end": 6104,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6048,
									"end": 6054,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6041,
									"end": 6105,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5963,
									"end": 6119,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "tag",
									"source": 9,
									"value": "144"
								},
								{
									"begin": 5940,
									"end": 6119,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6165,
									"end": 6166,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 6161,
									"end": 6162,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 6153,
									"end": 6159,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6149,
									"end": 6163,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 6145,
									"end": 6167,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6139,
									"end": 6143,
									"name": "DUP9",
									"source": 9
								},
								{
									"begin": 6132,
									"end": 6168,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5567,
									"end": 6178,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "tag",
									"source": 9,
									"value": "136"
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 5530,
									"end": 6417,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5120,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 5028,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "43"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 9,
									"value": "147"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 9,
									"value": "149"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 9,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 9,
									"value": "152"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 9,
									"value": "153"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "67"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 9,
									"value": "155"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 9,
									"value": "154"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "54"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 9,
									"value": "157"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 9
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "66"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 9,
									"value": "159"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 9
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 9,
									"value": "160"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 9,
									"value": "161"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 9
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "68"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 9,
									"value": "163"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "tag",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 226,
									"end": 1336,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8442799913ab360b74ca417befbd558cb31daf6adee82332f4dc8a01d778d4964736f6c63430008190033",
									".code": [
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "D56D229D"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "DD62ED3E"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "F2FDE38B"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "715018A6"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "8DA5CB5B"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "95D89B41"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "12"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "A0662D89"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "18"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "313CE567"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "359CF2B7"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "6FDDE03"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "95EA7B3"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "18160DDD"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "tag",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 226,
											"end": 1336,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "tag",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 927,
											"end": 1334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "tag",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 707,
											"end": 827,
											"name": "tag",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 707,
											"end": 827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 707,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 707,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 707,
											"end": 827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 707,
											"end": 827,
											"name": "tag",
											"source": 8,
											"value": "51"
										},
										{
											"begin": 707,
											"end": 827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 707,
											"end": 827,
											"name": "STOP",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 312,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "CALLDATASIZE",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "48"
										},
										{
											"begin": 312,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 312,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 312,
											"end": 362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "63"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 8,
											"value": "15"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 280,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 8,
											"value": "68"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "71"
										},
										{
											"begin": 280,
											"end": 306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "RETURN",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "tag",
											"source": 8,
											"value": "45"
										},
										{
											"begin": 927,
											"end": 1334,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1013,
											"end": 1014,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 988,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 977,
											"end": 988,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 988,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 988,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 977,
											"end": 988,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 988,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 988,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 977,
											"end": 988,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 977,
											"end": 988,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 977,
											"end": 998,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 977,
											"end": 998,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 977,
											"end": 998,
											"name": "PUSH",
											"source": 8,
											"value": "70A08231"
										},
										{
											"begin": 999,
											"end": 1009,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFF"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "56"
										},
										{
											"begin": 977,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "tag",
											"source": 8,
											"value": "101"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "STATICCALL",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "tag",
											"source": 8,
											"value": "103"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "105"
										},
										{
											"begin": 977,
											"end": 1010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "tag",
											"source": 8,
											"value": "104"
										},
										{
											"begin": 977,
											"end": 1010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 977,
											"end": 1014,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "108"
										},
										{
											"begin": 969,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "107"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 969,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1115,
											"end": 1121,
											"name": "PUSH",
											"source": 8,
											"value": "15180"
										},
										{
											"begin": 1085,
											"end": 1100,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1111,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1112,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1085,
											"end": 1121,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1121,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "110"
										},
										{
											"begin": 1085,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1085,
											"end": 1121,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 1085,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1081,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1121,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 1066,
											"end": 1121,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "113"
										},
										{
											"begin": 1058,
											"end": 1173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "tag",
											"source": 8,
											"value": "112"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "tag",
											"source": 8,
											"value": "111"
										},
										{
											"begin": 1058,
											"end": 1173,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1190,
											"end": 1200,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1202,
											"end": 1210,
											"name": "PUSH",
											"source": 8,
											"value": "1BC16D674EC80000"
										},
										{
											"begin": 1184,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "115"
										},
										{
											"begin": 1184,
											"end": 1211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "tag",
											"source": 8,
											"value": "114"
										},
										{
											"begin": 1184,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1271,
											"end": 1286,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1256,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1267,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1241,
											"end": 1268,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1286,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1286,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1286,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 1241,
											"end": 1286,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 927,
											"end": 1334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 707,
											"end": 827,
											"name": "tag",
											"source": 8,
											"value": "52"
										},
										{
											"begin": 707,
											"end": 827,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "122"
										},
										{
											"begin": 777,
											"end": 820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 8,
											"value": "121"
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 777,
											"end": 820,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 312,
											"end": 362,
											"name": "tag",
											"source": 8,
											"value": "62"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 312,
											"end": 362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 280,
											"end": 306,
											"name": "tag",
											"source": 8,
											"value": "69"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "100"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "EXP",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 280,
											"end": 306,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 280,
											"end": 306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "89"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "143"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 287,
											"end": 535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 369,
											"end": 370,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 393,
											"end": 399,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 390,
											"end": 391,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 387,
											"end": 400,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 473,
											"end": 476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 469,
											"end": 480,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 463,
											"end": 481,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 459,
											"end": 460,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 454,
											"end": 457,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 450,
											"end": 461,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 443,
											"end": 482,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 415,
											"end": 417,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 412,
											"end": 413,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 408,
											"end": 418,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 403,
											"end": 418,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 403,
											"end": 418,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "225"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 379,
											"end": 492,
											"name": "tag",
											"source": 9,
											"value": "227"
										},
										{
											"begin": 379,
											"end": 492,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 517,
											"end": 523,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 512,
											"end": 515,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 508,
											"end": 524,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 501,
											"end": 528,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 349,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 287,
											"end": 535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 541,
											"end": 643,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 582,
											"end": 588,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 635,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 629,
											"end": 636,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 624,
											"end": 626,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 617,
											"end": 622,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 613,
											"end": 627,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 609,
											"end": 637,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 599,
											"end": 637,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 599,
											"end": 637,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 541,
											"end": 643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 740,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 798,
											"end": 803,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 765,
											"end": 804,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 765,
											"end": 804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 765,
											"end": 804,
											"name": "tag",
											"source": 9,
											"value": "230"
										},
										{
											"begin": 765,
											"end": 804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 884,
											"end": 890,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 879,
											"end": 882,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 820,
											"end": 891,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 820,
											"end": 891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 820,
											"end": 891,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 820,
											"end": 891,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 813,
											"end": 891,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 813,
											"end": 891,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 958,
											"end": 964,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 953,
											"end": 956,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 946,
											"end": 950,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 939,
											"end": 944,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 935,
											"end": 951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 900,
											"end": 965,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 900,
											"end": 965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 900,
											"end": 965,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 900,
											"end": 965,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 990,
											"end": 1019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "tag",
											"source": 9,
											"value": "233"
										},
										{
											"begin": 990,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 985,
											"end": 988,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1020,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 974,
											"end": 1020,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 741,
											"end": 1026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 649,
											"end": 1026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1145,
											"end": 1149,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1183,
											"end": 1185,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1172,
											"end": 1181,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1168,
											"end": 1186,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1160,
											"end": 1186,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1232,
											"end": 1241,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1226,
											"end": 1230,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1222,
											"end": 1242,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1218,
											"end": 1219,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1207,
											"end": 1216,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1203,
											"end": 1220,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1196,
											"end": 1243,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1333,
											"end": 1337,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1324,
											"end": 1330,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 1260,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 1260,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1252,
											"end": 1338,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1032,
											"end": 1345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 1432,
											"end": 1549,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1541,
											"end": 1542,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1539,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1543,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1715,
											"end": 1722,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1797,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1748,
											"end": 1753,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1744,
											"end": 1798,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1733,
											"end": 1798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1678,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "tag",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1847,
											"end": 1854,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1865,
											"end": 1900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1810,
											"end": 1906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 2003,
											"end": 2008,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 1985,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 1985,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1978,
											"end": 1983,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1975,
											"end": 2010,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2024,
											"end": 2025,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2022,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2014,
											"end": 2026,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "tag",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 1965,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 2034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1912,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2086,
											"end": 2091,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2130,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2111,
											"end": 2131,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2167,
											"end": 2172,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 2140,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 2140,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2040,
											"end": 2179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2251,
											"end": 2256,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2240,
											"end": 2256,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2185,
											"end": 2262,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2359,
											"end": 2364,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2341,
											"end": 2365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 2341,
											"end": 2365,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2334,
											"end": 2339,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2331,
											"end": 2366,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2380,
											"end": 2381,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2377,
											"end": 2378,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2370,
											"end": 2382,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2321,
											"end": 2384,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2390,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2268,
											"end": 2390,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2467,
											"end": 2487,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2458,
											"end": 2487,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2523,
											"end": 2528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2496,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "tag",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2496,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2396,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2666,
											"end": 2668,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2654,
											"end": 2663,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2645,
											"end": 2652,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2641,
											"end": 2664,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2637,
											"end": 2669,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2672,
											"end": 2751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2672,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 2634,
											"end": 2753,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2792,
											"end": 2793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2862,
											"end": 2869,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2859,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2842,
											"end": 2851,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2838,
											"end": 2860,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2817,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2817,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2807,
											"end": 2870,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2763,
											"end": 2880,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2919,
											"end": 2921,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2990,
											"end": 2997,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2981,
											"end": 2987,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2970,
											"end": 2979,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2966,
											"end": 2988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 2945,
											"end": 2998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2945,
											"end": 2998,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2935,
											"end": 2998,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2890,
											"end": 3008,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 3015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3055,
											"end": 3062,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3103,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3091,
											"end": 3104,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3084,
											"end": 3105,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3073,
											"end": 3105,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3021,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3213,
											"end": 3218,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 3198,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3198,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3193,
											"end": 3196,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3186,
											"end": 3220,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3117,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3346,
											"end": 3355,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3334,
											"end": 3360,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3432,
											"end": 3433,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3421,
											"end": 3430,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3417,
											"end": 3434,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3414,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 3370,
											"end": 3435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3370,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3232,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3553,
											"end": 3558,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 3535,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3535,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3530,
											"end": 3533,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3560,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3566,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3448,
											"end": 3566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3703,
											"end": 3705,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3692,
											"end": 3701,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3688,
											"end": 3706,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3680,
											"end": 3706,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3784,
											"end": 3785,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3769,
											"end": 3786,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3760,
											"end": 3766,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 3716,
											"end": 3787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3716,
											"end": 3787,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3572,
											"end": 3794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3891,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3893,
											"end": 3899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3942,
											"end": 3944,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3930,
											"end": 3939,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3921,
											"end": 3928,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3917,
											"end": 3940,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3913,
											"end": 3945,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 3948,
											"end": 4027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3948,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3910,
											"end": 4029,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4138,
											"end": 4145,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4129,
											"end": 4135,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4118,
											"end": 4127,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4114,
											"end": 4136,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 4093,
											"end": 4146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4093,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4039,
											"end": 4156,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4195,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4266,
											"end": 4273,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4257,
											"end": 4263,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4246,
											"end": 4255,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 4221,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4221,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4166,
											"end": 4284,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4323,
											"end": 4325,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4394,
											"end": 4401,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 4385,
											"end": 4391,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4374,
											"end": 4383,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4370,
											"end": 4392,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 4349,
											"end": 4402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4349,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4339,
											"end": 4402,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4294,
											"end": 4412,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3800,
											"end": 4419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4460,
											"end": 4467,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4500,
											"end": 4504,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4489,
											"end": 4505,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4505,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4425,
											"end": 4511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4616,
											"end": 4621,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4600,
											"end": 4622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4598,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4588,
											"end": 4623,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4517,
											"end": 4629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4724,
											"end": 4728,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4762,
											"end": 4764,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4751,
											"end": 4760,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4747,
											"end": 4765,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4739,
											"end": 4765,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4839,
											"end": 4840,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4828,
											"end": 4837,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4824,
											"end": 4841,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4815,
											"end": 4821,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4775,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4775,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4635,
											"end": 4849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4965,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4951,
											"end": 4960,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4942,
											"end": 4949,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4938,
											"end": 4961,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4934,
											"end": 4966,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 4969,
											"end": 5048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 4969,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 4931,
											"end": 5050,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5089,
											"end": 5090,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 5159,
											"end": 5166,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5150,
											"end": 5156,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5139,
											"end": 5148,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5157,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5114,
											"end": 5167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 5114,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5104,
											"end": 5167,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5060,
											"end": 5177,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4855,
											"end": 5184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5277,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 5277,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5275,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5265,
											"end": 5302,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5190,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5447,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5434,
											"end": 5443,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5430,
											"end": 5448,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5422,
											"end": 5448,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 5526,
											"end": 5527,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5524,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5511,
											"end": 5528,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 5458,
											"end": 5529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 5458,
											"end": 5529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5570,
											"end": 5573,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5591,
											"end": 5596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5584,
											"end": 5596,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5602,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5542,
											"end": 5602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5750,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5608,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5658,
											"end": 5667,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5691,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 5709,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 5736,
											"end": 5741,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5718,
											"end": 5742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 5718,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 5709,
											"end": 5743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5709,
											"end": 5743,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 5709,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5744,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 5691,
											"end": 5744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5744,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 5691,
											"end": 5744,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5744,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5678,
											"end": 5744,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5750,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5750,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5750,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5608,
											"end": 5750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5756,
											"end": 5882,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5756,
											"end": 5882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5806,
											"end": 5815,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5870,
											"end": 5875,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 5839,
											"end": 5876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5839,
											"end": 5876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5826,
											"end": 5876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5756,
											"end": 5882,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5756,
											"end": 5882,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5756,
											"end": 5882,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5756,
											"end": 5882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6030,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 5888,
											"end": 6030,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5963,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 6018,
											"end": 6023,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 5987,
											"end": 6024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6024,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5987,
											"end": 6024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5974,
											"end": 6024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6030,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6030,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6030,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5888,
											"end": 6030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 6199,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 6036,
											"end": 6199,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6186,
											"end": 6191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6139,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6139,
											"end": 6192,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 6139,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6134,
											"end": 6137,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6127,
											"end": 6193,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 6199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 6199,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6036,
											"end": 6199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6459,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 6205,
											"end": 6459,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6314,
											"end": 6318,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6341,
											"end": 6350,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6355,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6355,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6355,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6449,
											"end": 6450,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6438,
											"end": 6447,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6434,
											"end": 6451,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6425,
											"end": 6431,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6452,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 6365,
											"end": 6452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6365,
											"end": 6452,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 6365,
											"end": 6452,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6459,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6459,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6459,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6205,
											"end": 6459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6939,
											"name": "tag",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 6465,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6533,
											"end": 6539,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6541,
											"end": 6547,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6590,
											"end": 6592,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6578,
											"end": 6587,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6569,
											"end": 6576,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6565,
											"end": 6588,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6561,
											"end": 6593,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 6558,
											"end": 6677,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6558,
											"end": 6677,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6558,
											"end": 6677,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6596,
											"end": 6675,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6596,
											"end": 6675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6596,
											"end": 6675,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 6596,
											"end": 6675,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6558,
											"end": 6677,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 6558,
											"end": 6677,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6716,
											"end": 6717,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6741,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6786,
											"end": 6793,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6777,
											"end": 6783,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6766,
											"end": 6775,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6762,
											"end": 6784,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6741,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6741,
											"end": 6794,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 6741,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6731,
											"end": 6794,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6731,
											"end": 6794,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6687,
											"end": 6804,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6843,
											"end": 6845,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6869,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6914,
											"end": 6921,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6905,
											"end": 6911,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6894,
											"end": 6903,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6890,
											"end": 6912,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6922,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6869,
											"end": 6922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6869,
											"end": 6922,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 6869,
											"end": 6922,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6922,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6814,
											"end": 6932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6939,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6939,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6465,
											"end": 6939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 7125,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 6945,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6993,
											"end": 7070,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6990,
											"end": 6991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6983,
											"end": 7071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7090,
											"end": 7094,
											"name": "PUSH",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 7087,
											"end": 7088,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7080,
											"end": 7095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7114,
											"end": 7118,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7119,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7451,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 7131,
											"end": 7451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7175,
											"end": 7181,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7213,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7206,
											"end": 7210,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7202,
											"end": 7214,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7192,
											"end": 7214,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7259,
											"end": 7260,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7253,
											"end": 7257,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7249,
											"end": 7261,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7280,
											"end": 7298,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 7270,
											"end": 7351,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7336,
											"end": 7340,
											"name": "PUSH",
											"source": 9,
											"value": "7F"
										},
										{
											"begin": 7328,
											"end": 7334,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7324,
											"end": 7341,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7341,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7314,
											"end": 7341,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7351,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 7270,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7398,
											"end": 7400,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7390,
											"end": 7396,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7387,
											"end": 7401,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7367,
											"end": 7385,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7364,
											"end": 7402,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7445,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 7361,
											"end": 7445,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7417,
											"end": 7435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 7417,
											"end": 7435,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7361,
											"end": 7445,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 7361,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7182,
											"end": 7451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7451,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7600,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7457,
											"end": 7600,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7514,
											"end": 7519,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7545,
											"end": 7551,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7539,
											"end": 7552,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7552,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7530,
											"end": 7552,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 7588,
											"end": 7593,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7594,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7561,
											"end": 7594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7561,
											"end": 7594,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 7561,
											"end": 7594,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7600,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7600,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7600,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7957,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 7606,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7676,
											"end": 7682,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7725,
											"end": 7727,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7713,
											"end": 7722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7704,
											"end": 7711,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7723,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7696,
											"end": 7728,
											"name": "SLT",
											"source": 9
										},
										{
											"begin": 7693,
											"end": 7812,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7693,
											"end": 7812,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7693,
											"end": 7812,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7731,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7731,
											"end": 7810,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 7731,
											"end": 7810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7731,
											"end": 7810,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 7731,
											"end": 7810,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7693,
											"end": 7812,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 7693,
											"end": 7812,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7852,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7876,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7932,
											"end": 7939,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7923,
											"end": 7929,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7912,
											"end": 7921,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7908,
											"end": 7930,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7876,
											"end": 7940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7876,
											"end": 7940,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 7876,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 7940,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7866,
											"end": 7940,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7822,
											"end": 7950,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7957,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7606,
											"end": 7957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7963,
											"end": 8142,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 7963,
											"end": 8142,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8103,
											"end": 8134,
											"name": "PUSH",
											"source": 9,
											"value": "596F75206D757374206F776E206174206C65617374206F6E65204E4654000000"
										},
										{
											"begin": 8099,
											"end": 8100,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8091,
											"end": 8097,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8087,
											"end": 8101,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8080,
											"end": 8135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7963,
											"end": 8142,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7963,
											"end": 8142,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8514,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8148,
											"end": 8514,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8290,
											"end": 8293,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8311,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 8375,
											"end": 8377,
											"name": "PUSH",
											"source": 9,
											"value": "1D"
										},
										{
											"begin": 8370,
											"end": 8373,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8378,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 8311,
											"end": 8378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8311,
											"end": 8378,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 8311,
											"end": 8378,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8378,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8304,
											"end": 8378,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8387,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 8476,
											"end": 8479,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8387,
											"end": 8480,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8387,
											"end": 8480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8387,
											"end": 8480,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 8387,
											"end": 8480,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8505,
											"end": 8507,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8500,
											"end": 8503,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8496,
											"end": 8508,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8489,
											"end": 8508,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8514,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8514,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8148,
											"end": 8514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 8939,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 8520,
											"end": 8939,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8686,
											"end": 8690,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8724,
											"end": 8726,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8713,
											"end": 8722,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8709,
											"end": 8727,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8727,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8701,
											"end": 8727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8773,
											"end": 8782,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8767,
											"end": 8771,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8763,
											"end": 8783,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8748,
											"end": 8757,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8744,
											"end": 8761,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8737,
											"end": 8784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8927,
											"end": 8931,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8801,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8801,
											"end": 8932,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 8801,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8793,
											"end": 8932,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8793,
											"end": 8932,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 8939,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 8939,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 8939,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8520,
											"end": 8939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8945,
											"end": 9125,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 8945,
											"end": 9125,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8993,
											"end": 9070,
											"name": "PUSH",
											"source": 9,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8983,
											"end": 9071,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "PUSH",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 9087,
											"end": 9088,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9080,
											"end": 9095,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9114,
											"end": 9118,
											"name": "PUSH",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 9111,
											"end": 9112,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9104,
											"end": 9119,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9322,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 9131,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9171,
											"end": 9174,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9190,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9208,
											"end": 9209,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9190,
											"end": 9210,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9190,
											"end": 9210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9190,
											"end": 9210,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9190,
											"end": 9210,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9210,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9185,
											"end": 9210,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9242,
											"end": 9243,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9244,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 9224,
											"end": 9244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9224,
											"end": 9244,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9224,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9244,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9219,
											"end": 9244,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9267,
											"end": 9268,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9264,
											"end": 9265,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9260,
											"end": 9269,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9269,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9253,
											"end": 9269,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9288,
											"end": 9291,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9285,
											"end": 9286,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9282,
											"end": 9292,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9315,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9279,
											"end": 9315,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 9295,
											"end": 9313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "tag",
											"source": 9,
											"value": "326"
										},
										{
											"begin": 9295,
											"end": 9313,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9279,
											"end": 9315,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9279,
											"end": 9315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9322,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9322,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9322,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9131,
											"end": 9322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9328,
											"end": 9562,
											"name": "tag",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 9328,
											"end": 9562,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9468,
											"end": 9502,
											"name": "PUSH",
											"source": 9,
											"value": "596F752063616E206F6E6C79207265717565737420746F6B656E73206F6E6365"
										},
										{
											"begin": 9464,
											"end": 9465,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9456,
											"end": 9462,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9452,
											"end": 9466,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9445,
											"end": 9503,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9537,
											"end": 9554,
											"name": "PUSH",
											"source": 9,
											"value": "20657665727920323420686F7572730000000000000000000000000000000000"
										},
										{
											"begin": 9532,
											"end": 9534,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9524,
											"end": 9530,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9520,
											"end": 9535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9513,
											"end": 9555,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9328,
											"end": 9562,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9328,
											"end": 9562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9934,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 9568,
											"end": 9934,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9710,
											"end": 9713,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9731,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9795,
											"end": 9797,
											"name": "PUSH",
											"source": 9,
											"value": "2F"
										},
										{
											"begin": 9790,
											"end": 9793,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9731,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 9731,
											"end": 9798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9731,
											"end": 9798,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 9731,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9798,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9798,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9807,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9896,
											"end": 9899,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9807,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 9807,
											"end": 9900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9807,
											"end": 9900,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9807,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9925,
											"end": 9927,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9920,
											"end": 9923,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9916,
											"end": 9928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 9928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9909,
											"end": 9928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9934,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9934,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9934,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9568,
											"end": 9934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 10359,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 9940,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10106,
											"end": 10110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10144,
											"end": 10146,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10133,
											"end": 10142,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10129,
											"end": 10147,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10121,
											"end": 10147,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10121,
											"end": 10147,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10193,
											"end": 10202,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10187,
											"end": 10191,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10183,
											"end": 10203,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10179,
											"end": 10180,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10168,
											"end": 10177,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10164,
											"end": 10181,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10157,
											"end": 10204,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 10347,
											"end": 10351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10352,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 10221,
											"end": 10352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10221,
											"end": 10352,
											"name": "tag",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 10221,
											"end": 10352,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10213,
											"end": 10352,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10213,
											"end": 10352,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 10359,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 10359,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 10359,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9940,
											"end": 10359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10585,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10365,
											"end": 10585,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10505,
											"end": 10539,
											"name": "PUSH",
											"source": 9,
											"value": "52656E6F756E63696E67206F776E6572736869702069732064697361626C6564"
										},
										{
											"begin": 10501,
											"end": 10502,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10493,
											"end": 10499,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10489,
											"end": 10503,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10482,
											"end": 10540,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10574,
											"end": 10577,
											"name": "PUSH",
											"source": 9,
											"value": "2E00000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10569,
											"end": 10571,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10561,
											"end": 10567,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10557,
											"end": 10572,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10550,
											"end": 10578,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10585,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10365,
											"end": 10585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10733,
											"end": 10736,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 10818,
											"end": 10820,
											"name": "PUSH",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 10813,
											"end": 10816,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 10754,
											"end": 10821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "tag",
											"source": 9,
											"value": "335"
										},
										{
											"begin": 10754,
											"end": 10821,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10747,
											"end": 10821,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10747,
											"end": 10821,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 10919,
											"end": 10922,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 10830,
											"end": 10923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "tag",
											"source": 9,
											"value": "336"
										},
										{
											"begin": 10830,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10948,
											"end": 10950,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10943,
											"end": 10946,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10939,
											"end": 10951,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10932,
											"end": 10951,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10591,
											"end": 10957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11129,
											"end": 11133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11167,
											"end": 11169,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11156,
											"end": 11165,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11152,
											"end": 11170,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11170,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11144,
											"end": 11170,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11216,
											"end": 11225,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11210,
											"end": 11214,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11206,
											"end": 11226,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11191,
											"end": 11200,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11187,
											"end": 11204,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11180,
											"end": 11227,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11370,
											"end": 11374,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 11244,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 11244,
											"end": 11375,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11236,
											"end": 11375,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11236,
											"end": 11375,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 11382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11537,
											"end": 11541,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11575,
											"end": 11577,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 11564,
											"end": 11573,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 11560,
											"end": 11578,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11578,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 11552,
											"end": 11578,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 11656,
											"end": 11657,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 11645,
											"end": 11654,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11641,
											"end": 11658,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11632,
											"end": 11638,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 11588,
											"end": 11659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11588,
											"end": 11659,
											"name": "tag",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 11588,
											"end": 11659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11669,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 11737,
											"end": 11739,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 11726,
											"end": 11735,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11722,
											"end": 11740,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11713,
											"end": 11719,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 11669,
											"end": 11741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11669,
											"end": 11741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11669,
											"end": 11741,
											"name": "tag",
											"source": 9,
											"value": "341"
										},
										{
											"begin": 11669,
											"end": 11741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 11819,
											"end": 11821,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 11808,
											"end": 11817,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 11804,
											"end": 11822,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 11795,
											"end": 11801,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11823,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 11751,
											"end": 11823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 11751,
											"end": 11823,
											"name": "tag",
											"source": 9,
											"value": "342"
										},
										{
											"begin": 11751,
											"end": 11823,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11388,
											"end": 11830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/5_PLZToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"lastRequestedAt(address)": "a0662d89",
							"name()": "06fdde03",
							"nftContract()": "d56d229d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"requestTokens()": "359cf2b7",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastRequestedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/5_PLZToken.sol\":\"PLZToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"contracts/5_PLZToken.sol\":{\"keccak256\":\"0x66ce9ed67304554acfb3ec8d506373056cbe3a15654f234f6361729d603fb337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5b15674afbbfc162b6156e3e4b027748dbe1025da06d543d6f8a0532cbc6574a\",\"dweb:/ipfs/QmXYZVRyWsTsXTvcEZeX7g12phUbFJQdTwpeZD4fBVJWkk\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 307,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 313,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 315,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 317,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 319,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1076,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "nftContract",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC721)1020"
							},
							{
								"astId": 1080,
								"contract": "contracts/5_PLZToken.sol:PLZToken",
								"label": "lastRequestedAt",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1020": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1050
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1051,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1050
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1032,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 285,
							"src": "278:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 285,
							"src": "2186:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 285,
							"src": "4424:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1050
						],
						"ERC20": [
							799
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 800,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 288,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 878,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 287,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 290,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 904,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 289,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 903,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 1051,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 291,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 800,
							"sourceUnit": 285,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 293,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 296,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1428:7:2"
									},
									"id": 297,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 298,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "1437:6:2"
									},
									"id": 299,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 300,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 903,
										"src": "1445:14:2"
									},
									"id": 301,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 302,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1461:12:2"
									},
									"id": 303,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 295,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 799,
							"linearizedBaseContracts": [
								799,
								189,
								903,
								877,
								1050
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 307,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 306,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 304,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 305,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 313,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 312,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 308,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 311,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 309,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 310,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 315,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 314,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 317,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 316,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 319,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 799,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 318,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 327,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 317,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 331,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 319,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 332,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 324,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 336,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 321,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 323,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 799,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										890
									],
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 317,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 339,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 799,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										896
									],
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 351,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 350,
												"id": 352,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 348,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 799,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										902
									],
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 359,
												"id": 361,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 357,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 799,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										826
									],
									"body": {
										"id": 371,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 369,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 315,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 370,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 372,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 799,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										834
									],
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 380,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 382,
													"indexExpression": {
														"id": 381,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 375,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 379,
												"id": 383,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 373,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 799,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										844
									],
									"body": {
										"id": 408,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													396
												],
												"declarations": [
													{
														"constant": false,
														"id": 396,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 408,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 395,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 399,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 397,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 401,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 402,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 388,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 400,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 394,
												"id": 407,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 409,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 392,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 799,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										854
									],
									"body": {
										"id": 425,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 419,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 421,
														"indexExpression": {
															"id": 420,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 412,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 423,
													"indexExpression": {
														"id": 422,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 424,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 426,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 413,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 426,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 799,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										864
									],
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 449,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 436,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 440,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 438,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 442,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 443,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 444,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 441,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 690,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 435,
												"id": 448,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 427,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 450,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 433,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 799,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										876
									],
									"body": {
										"id": 481,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													463
												],
												"declarations": [
													{
														"constant": false,
														"id": 463,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 481,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 462,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 464,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 468,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 469,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 463,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 467,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 798,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 474,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 475,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 455,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 476,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 529,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 461,
												"id": 480,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 482,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 454,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 459,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 799,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 493,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 506,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 505,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 499,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 498,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 503,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 504,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 507,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 508,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 511,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 521,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 520,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 516,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 514,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 517,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 513,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 519,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 523,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 485,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 525,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 522,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 483,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 799,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 541,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 540,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 543,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 576,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																551
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 551,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 576,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 555,
															"initialValue": {
																"baseExpression": {
																	"id": 552,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 554,
																"indexExpression": {
																	"id": 553,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 556,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 551,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 557,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 566,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 565,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 560,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 532,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 561,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 551,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 562,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 536,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 559,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 564,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 575,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 573,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 567,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 569,
																			"indexExpression": {
																				"id": 568,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 532,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 570,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 571,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 574,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 577,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 549,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 546,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 536,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 578,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 597,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 596,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 594,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 590,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 307,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 592,
																			"indexExpression": {
																				"id": 591,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 534,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 593,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 595,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 598,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 589,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 588,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 584,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 315,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 585,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 536,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 587,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 600,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 536,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 599,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 811,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 799,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 638,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 614,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 616,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 615,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 628,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 627,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 623,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 622,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 621,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 624,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 626,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 632,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 630,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 633,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 634,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 609,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 611,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 629,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 637,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 639,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 639,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 799,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 647,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 642,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 649,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 648,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 651,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 661,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 660,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 654,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 653,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 659,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 642,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 666,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 664,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 668,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 662,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 644,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 643,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 799,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 683,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 685,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 679,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 686,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 682,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															690,
															750
														],
														"referencedDeclaration": 750,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 688,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 681,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 799,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 702,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 693,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 705,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 703,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 715,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 711,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 710,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 709,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 708,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 714,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 717,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 695,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 718,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 721,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 731,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 730,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 726,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 724,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 723,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 729,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 732,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 313,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 735,
															"indexExpression": {
																"id": 733,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 736,
														"indexExpression": {
															"id": 734,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 695,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 737,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 739,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 740,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 699,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 742,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 693,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 743,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 695,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 697,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 691,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 750,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 698,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 799,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 797,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													761
												],
												"declarations": [
													{
														"constant": false,
														"id": 761,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 797,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 766,
												"initialValue": {
													"arguments": [
														{
															"id": 763,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 753,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 762,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 765,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 767,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 761,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 769,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 768,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 795,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 774,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 784,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 783,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 778,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 755,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 779,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 777,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 782,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 794,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 786,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 753,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 787,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 790,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 788,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 789,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 757,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 791,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 785,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				690,
																				750
																			],
																			"referencedDeclaration": 750,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 793,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 798,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 799,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 800,
							"src": "1401:9741:2",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						]
					},
					"id": 878,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 801,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 802,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 877,
							"linearizedBaseContracts": [
								877
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 811,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 804,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 820,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 813,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 826,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 877,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 827,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 834,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 828,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 877,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 844,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 841,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 877,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 877,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 864,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 858,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 861,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 877,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 873,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 877,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 878,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							877
						],
						"IERC20Metadata": [
							903
						]
					},
					"id": 904,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 879,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 881,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 904,
							"sourceUnit": 878,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 880,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 877,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 883,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 877,
										"src": "305:6:4"
									},
									"id": 884,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 882,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 903,
							"linearizedBaseContracts": [
								903,
								877
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 890,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 886,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 887,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 903,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 896,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 893,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 903,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 897,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 902,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 902,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 899,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 903,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 904,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								811,
								820
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1062
						],
						"IERC721": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 905,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 907,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 1063,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 906,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1062,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 909,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1062,
										"src": "287:7:5"
									},
									"id": 910,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 908,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								1062
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 919,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 928,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 923,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 928,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 929,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 937,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 931,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 934,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 945,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1020,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 953,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 953,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1020,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 957,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 961,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1020,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1020,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 985,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1020,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 986,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 993,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1020,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1001,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1020,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1002,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1009,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1007,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1006,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1020,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1010,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1019,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1018,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1017,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1016,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1020,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1021,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								919,
								928,
								937
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1023,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1028,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1027,
												"id": 1030,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 1050,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1040,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1037,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1036,
												"id": 1039,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 1041,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1041,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1034,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 1050,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1048,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1045,
												"id": 1047,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 1049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 1050,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1051,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1062
						]
					},
					"id": 1063,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1053,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1062,
							"linearizedBaseContracts": [
								1062
							],
							"name": "IERC165",
							"nameLocation": "431:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1054,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1061,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "817:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1055,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:7"
									},
									"returnParameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1059,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1061,
												"src": "860:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1058,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:7"
									},
									"scope": 1062,
									"src": "790:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1063,
							"src": "421:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:7"
				},
				"id": 7
			},
			"contracts/5_PLZToken.sol": {
				"ast": {
					"absolutePath": "contracts/5_PLZToken.sol",
					"exportedSymbols": {
						"Context": [
							1050
						],
						"ERC20": [
							799
						],
						"IERC165": [
							1062
						],
						"IERC20": [
							877
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							903
						],
						"IERC721": [
							1020
						],
						"Ownable": [
							147
						],
						"PLZToken": [
							1158
						]
					},
					"id": 1159,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1064,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1065,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 800,
							"src": "57:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 1066,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 1021,
							"src": "113:58:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1067,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1159,
							"sourceUnit": 148,
							"src": "172:52:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1068,
										"name": "ERC20",
										"nameLocations": [
											"247:5:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 799,
										"src": "247:5:8"
									},
									"id": 1069,
									"nodeType": "InheritanceSpecifier",
									"src": "247:5:8"
								},
								{
									"arguments": [
										{
											"expression": {
												"id": 1071,
												"name": "msg",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967281,
												"src": "262:3:8",
												"typeDescriptions": {
													"typeIdentifier": "t_magic_message",
													"typeString": "msg"
												}
											},
											"id": 1072,
											"isConstant": false,
											"isLValue": false,
											"isPure": false,
											"lValueRequested": false,
											"memberLocation": "266:6:8",
											"memberName": "sender",
											"nodeType": "MemberAccess",
											"src": "262:10:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									],
									"baseName": {
										"id": 1070,
										"name": "Ownable",
										"nameLocations": [
											"254:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "254:7:8"
									},
									"id": 1073,
									"nodeType": "InheritanceSpecifier",
									"src": "254:19:8"
								}
							],
							"canonicalName": "PLZToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1158,
							"linearizedBaseContracts": [
								1158,
								147,
								799,
								189,
								903,
								877,
								1050
							],
							"name": "PLZToken",
							"nameLocation": "235:8:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d56d229d",
									"id": 1076,
									"mutability": "mutable",
									"name": "nftContract",
									"nameLocation": "295:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1158,
									"src": "280:26:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1020",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 1075,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1074,
											"name": "IERC721",
											"nameLocations": [
												"280:7:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1020,
											"src": "280:7:8"
										},
										"referencedDeclaration": 1020,
										"src": "280:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1020",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a0662d89",
									"id": 1080,
									"mutability": "mutable",
									"name": "lastRequestedAt",
									"nameLocation": "347:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1158,
									"src": "312:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1079,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1077,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "320:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "312:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1078,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "331:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1101,
										"nodeType": "Block",
										"src": "498:133:8",
										"statements": [
											{
												"expression": {
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1089,
														"name": "nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "508:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1020",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1091,
																"name": "_nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1082,
																"src": "530:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1090,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "522:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$1020_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 1092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "522:20:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1020",
															"typeString": "contract IERC721"
														}
													},
													"src": "508:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1020",
														"typeString": "contract IERC721"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "508:34:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1096,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "558:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "562:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "558:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31653234",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "570:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															},
															"value": "1e24"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000000"
															}
														],
														"id": 1095,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "552:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "552:23:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "552:23:8"
											}
										]
									},
									"id": 1102,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "504c5a546f6b656e",
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "479:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_88dee89f1f84e14f320f8f5d0c5d782d0b4e9c16964d383fe51b29d01ecebef5",
														"typeString": "literal_string \"PLZToken\""
													},
													"value": "PLZToken"
												},
												{
													"hexValue": "504c5a",
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "491:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_6a3adc08af1dc79747f48143beb8520a17af1c484ac50d79f83873138685817b",
														"typeString": "literal_string \"PLZ\""
													},
													"value": "PLZ"
												}
											],
											"id": 1087,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1084,
												"name": "ERC20",
												"nameLocations": [
													"473:5:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 799,
												"src": "473:5:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "473:24:8"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "_nftAddress",
												"nameLocation": "460:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1102,
												"src": "452:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "451:21:8"
									},
									"returnParameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:0:8"
									},
									"scope": 1158,
									"src": "440:191:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										98
									],
									"body": {
										"id": 1112,
										"nodeType": "Block",
										"src": "767:60:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "52656e6f756e63696e67206f776e6572736869702069732064697361626c65642e",
															"id": 1109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "784:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3",
																"typeString": "literal_string \"Renouncing ownership is disabled.\""
															},
															"value": "Renouncing ownership is disabled."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_7816a8c70ebdb0a5d9d5c881d1a3121feeca77a8319a81af22d3cba4e748dca3",
																"typeString": "literal_string \"Renouncing ownership is disabled.\""
															}
														],
														"id": 1108,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "777:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "777:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1111,
												"nodeType": "ExpressionStatement",
												"src": "777:43:8"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 1113,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1106,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1105,
												"name": "onlyOwner",
												"nameLocations": [
													"757:9:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "757:9:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "757:9:8"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "716:17:8",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1104,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "748:8:8"
									},
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:2:8"
									},
									"returnParameters": {
										"id": 1107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "767:0:8"
									},
									"scope": 1158,
									"src": "707:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "959:375:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1119,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "999:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1003:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "999:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 1117,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1076,
																		"src": "977:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1020",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 1118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "989:9:8",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 945,
																	"src": "977:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 1121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "977:33:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1013:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "977:37:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206d757374206f776e206174206c65617374206f6e65204e4654",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1016:31:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c",
																"typeString": "literal_string \"You must own at least one NFT\""
															},
															"value": "You must own at least one NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_453fb75a37d57e7aae7427ea957d1d81c2aa9e139d991d1e872879a22c9fd05c",
																"typeString": "literal_string \"You must own at least one NFT\""
															}
														],
														"id": 1116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "969:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "969:79:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "969:79:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1128,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1066:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1072:9:8",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1066:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1130,
																		"name": "lastRequestedAt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1080,
																		"src": "1085:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1133,
																	"indexExpression": {
																		"expression": {
																			"id": 1131,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1101:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1105:6:8",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1101:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1085:27:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1115:6:8",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "1085:36:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1066:55:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c79207265717565737420746f6b656e73206f6e636520657665727920323420686f757273",
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1123:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25",
																"typeString": "literal_string \"You can only request tokens once every 24 hours\""
															},
															"value": "You can only request tokens once every 24 hours"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4b43ed7f580ec36c027c357c77529f74a7a002b8e07be0c43d8ce5fc85eb2b25",
																"typeString": "literal_string \"You can only request tokens once every 24 hours\""
															}
														],
														"id": 1127,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1058:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1058:115:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1139,
												"nodeType": "ExpressionStatement",
												"src": "1058:115:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1141,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1190:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1194:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1190:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1202:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"hexValue": "31653138",
																"id": 1144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1206:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1e18"
															},
															"src": "1202:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_2000000000000000000_by_1",
																"typeString": "int_const 2000000000000000000"
															}
														],
														"id": 1140,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 639,
														"src": "1184:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1184:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "1184:27:8"
											},
											{
												"expression": {
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1148,
															"name": "lastRequestedAt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1080,
															"src": "1241:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1151,
														"indexExpression": {
															"expression": {
																"id": 1149,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1257:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1261:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1257:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1241:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1152,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1271:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1153,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1277:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1271:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1241:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "1241:45:8"
											}
										]
									},
									"functionSelector": "359cf2b7",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "requestTokens",
									"nameLocation": "936:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "949:2:8"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "959:0:8"
									},
									"scope": 1158,
									"src": "927:407:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1159,
							"src": "226:1110:8",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								811,
								820
							]
						}
					],
					"src": "32:1305:8"
				},
				"id": 8
			}
		}
	}
}